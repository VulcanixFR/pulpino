diff --git a/check_tag.sv b/check_tag.sv
new file mode 100644
index 0000000..a9ff775
--- /dev/null
+++ b/check_tag.sv
@@ -0,0 +1,258 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer        Christian Palmiero - cp3025@columbia.edu                   //
+//                                                                            //
+// Design Name:    Check tag                                                  //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    Check decoder                                              //
+//                 This unit reads the CHECK field of the Tag Check           //
+//                 Register and sends the proper signals to the EX stage      //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+// Décodeur spécial pour la partie CHECK du TPR, qui vient s'ajouter en parallèle du décodeur déjà présent sur le processeur
+// Il lit le champ CHECK du registre de contrôle de tag (TCR) et envoie les signaux appropriés à l'étage d'exécution (EX) en fonction de l'instruction décodée.
+
+import riscv_defines::*; // Importation des définitions RISC-V
+
+module riscv_check_tag
+(
+  // Depuis le pipeline IF/ID
+  input  logic [31:0] instr_rdata_i, // Instruction lue
+
+  // Depuis les CSRs
+  input  logic [31:0] tcr_i,          // Registre de contrôle de tag
+
+  // Vers l'étage EX
+  output logic        source_1_o,      // Source 1 pour l'étage EX
+  output logic        source_2_o,      // Source 2 pour l'étage EX
+  output logic        dest_o,          // Destination pour l'étage EX
+
+  // Vers l'étage IF
+  output logic        execute_pc_o     // Signal pour exécuter le PC
+);
+
+  always_comb
+  begin
+    // Initialisation des sorties
+    source_1_o   = 1'b0;
+    source_2_o   = 1'b0;
+    dest_o       = 1'b0;
+    execute_pc_o = tcr_i[EXECUTE_PC]; // Activer l'exécution du PC si le bit correspondant est défini
+
+    unique case (instr_rdata_i[6:0]) // Décodage basé sur l'opcode de l'instruction
+
+      ////////////////////////////////
+      // Instructions de saut et de lien (Jump and Link)
+      ////////////////////////////////
+
+      OPCODE_JAL,
+      OPCODE_JALR: begin
+        source_1_o = tcr_i[JUMP_CHECK_S1]; // Source 1 pour les sauts
+        source_2_o = tcr_i[JUMP_CHECK_S2]; // Source 2 pour les sauts
+        dest_o     = tcr_i[JUMP_CHECK_D];  // Destination pour les sauts
+      end
+
+      //////////////////////////////////////////////
+      // Instructions de branchement (Branch)
+      //////////////////////////////////////////////
+
+      OPCODE_BRANCH: begin
+        source_1_o = tcr_i[BRANCH_CHECK_S1]; // Source 1 pour les branches
+        source_2_o = tcr_i[BRANCH_CHECK_S2]; // Source 2 pour les branches
+        dest_o     = 1'b0; // Pas de destination pour les branches
+      end
+
+      //////////////////////////////////
+      // Instructions de stockage et de chargement (Load/Store)
+      //////////////////////////////////
+
+      OPCODE_STORE,
+      OPCODE_STORE_POST,
+      OPCODE_LUI,
+      OPCODE_AUIPC
+      : begin
+        source_1_o = tcr_i[LOADSTORE_CHECK_DA]; // Source 1 pour les chargements/stockages
+        source_2_o = tcr_i[LOADSTORE_CHECK_S];  // Source 2 pour les chargements/stockages
+        dest_o     = tcr_i[LOADSTORE_CHECK_D];  // Destination pour les chargements/stockages
+      end
+
+      /////////////////////////////////////////////////////////////////////////////////
+      // Instructions arithmétiques immédiates (OP-IMM)
+      /////////////////////////////////////////////////////////////////////////////////
+
+      OPCODE_OPIMM: begin
+        unique case (instr_rdata_i[14:12]) // Décodage basé sur le champ funct3
+          3'b000: begin  // ADDI
+            source_1_o = tcr_i[INTEGER_CHECK_S1];
+            source_2_o = tcr_i[INTEGER_CHECK_S2];
+            dest_o     = tcr_i[INTEGER_CHECK_D];
+          end
+          3'b001: begin
+            unique case (instr_rdata_i[31:25]) // Décodage basé sur le champ funct7
+              7'b0000000: begin // SLLI
+                source_1_o = tcr_i[SHIFT_CHECK_S1];
+                source_2_o = tcr_i[SHIFT_CHECK_S2];
+                dest_o     = tcr_i[SHIFT_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          3'b010, 3'b011: begin  // SLTI, SLTIU
+            source_1_o = tcr_i[COMPARISON_CHECK_S1];
+            source_2_o = tcr_i[COMPARISON_CHECK_S2];
+            dest_o     = tcr_i[COMPARISON_CHECK_D];
+          end
+          3'b100, 3'b110, 3'b111: begin  // XORI, ORI, ANDI
+            source_1_o = tcr_i[LOGICAL_CHECK_S1];
+            source_2_o = tcr_i[LOGICAL_CHECK_S2];
+            dest_o     = tcr_i[LOGICAL_CHECK_D];
+          end
+          3'b101: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000, 7'b0100000: begin // SRLI, SRAI
+                source_1_o = tcr_i[SHIFT_CHECK_S1];
+                source_2_o = tcr_i[SHIFT_CHECK_S2];
+                dest_o     = tcr_i[SHIFT_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          default: ;
+        endcase
+      end
+
+      //////////////////////////////////////////////
+      // Instructions arithmétiques (OP)
+      //////////////////////////////////////////////
+
+      OPCODE_OP: begin
+        unique case (instr_rdata_i[14:12]) // Décodage basé sur le champ funct3
+          3'b000: begin
+            unique case (instr_rdata_i[31:25]) // Décodage basé sur le champ funct7
+              7'b0000000, 7'b0100000: begin // ADD, SUB
+                source_1_o = tcr_i[INTEGER_CHECK_S1];
+                source_2_o = tcr_i[INTEGER_CHECK_S2];
+                dest_o     = tcr_i[INTEGER_CHECK_D];
+              end
+              7'b0000001: begin // MUL
+                source_1_o = tcr_i[INTEGER_CHECK_S1];
+                source_2_o = tcr_i[INTEGER_CHECK_S2];
+                dest_o     = tcr_i[INTEGER_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          3'b001: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000: begin // SLL
+                source_1_o = tcr_i[SHIFT_CHECK_S1];
+                source_2_o = tcr_i[SHIFT_CHECK_S2];
+                dest_o     = tcr_i[SHIFT_CHECK_D];
+              end
+              7'b0000001: begin // MULH
+                source_1_o = tcr_i[INTEGER_CHECK_S1];
+                source_2_o = tcr_i[INTEGER_CHECK_S2];
+                dest_o     = tcr_i[INTEGER_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          3'b010: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000: begin // SLT
+                source_1_o = tcr_i[COMPARISON_CHECK_S1];
+                source_2_o = tcr_i[COMPARISON_CHECK_S2];
+                dest_o     = tcr_i[COMPARISON_CHECK_D];
+              end
+              7'b0000001: begin // MULHSU
+                source_1_o = tcr_i[INTEGER_CHECK_S1];
+                source_2_o = tcr_i[INTEGER_CHECK_S2];
+                dest_o     = tcr_i[INTEGER_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          3'b011: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000: begin // SLTU
+                source_1_o = tcr_i[COMPARISON_CHECK_S1];
+                source_2_o = tcr_i[COMPARISON_CHECK_S2];
+                dest_o     = tcr_i[COMPARISON_CHECK_D];
+              end
+              7'b0000001: begin // MULHU
+                source_1_o = tcr_i[INTEGER_CHECK_S1];
+                source_2_o = tcr_i[INTEGER_CHECK_S2];
+                dest_o     = tcr_i[INTEGER_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          3'b100: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000: begin // XOR
+                source_1_o = tcr_i[LOGICAL_CHECK_S1];
+                source_2_o = tcr_i[LOGICAL_CHECK_S2];
+                dest_o     = tcr_i[LOGICAL_CHECK_D];
+              end
+              7'b0000001: begin // DIV
+                source_1_o = tcr_i[INTEGER_CHECK_S1];
+                source_2_o = tcr_i[INTEGER_CHECK_S2];
+                dest_o     = tcr_i[INTEGER_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          3'b101: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000, 7'b0100000: begin // SRL, SRA
+                source_1_o = tcr_i[SHIFT_CHECK_S1];
+                source_2_o = tcr_i[SHIFT_CHECK_S2];
+                dest_o     = tcr_i[SHIFT_CHECK_D];
+              end
+              7'b0000001: begin // DIVU
+                source_1_o = tcr_i[INTEGER_CHECK_S1];
+                source_2_o = tcr_i[INTEGER_CHECK_S2];
+                dest_o     = tcr_i[INTEGER_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          3'b110: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000: begin // OR
+                source_1_o = tcr_i[LOGICAL_CHECK_S1];
+                source_2_o = tcr_i[LOGICAL_CHECK_S2];
+                dest_o     = tcr_i[LOGICAL_CHECK_D];
+              end
+              7'b0000001: begin // REM
+                source_1_o = tcr_i[INTEGER_CHECK_S1];
+                source_2_o = tcr_i[INTEGER_CHECK_S2];
+                dest_o     = tcr_i[INTEGER_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          3'b111: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000: begin // AND
+                source_1_o = tcr_i[LOGICAL_CHECK_S1];
+                source_2_o = tcr_i[LOGICAL_CHECK_S2];
+                dest_o     = tcr_i[LOGICAL_CHECK_D];
+              end
+              7'b0000001: begin // REMU
+                source_1_o = tcr_i[INTEGER_CHECK_S1];
+                source_2_o = tcr_i[INTEGER_CHECK_S2];
+                dest_o     = tcr_i[INTEGER_CHECK_D];
+              end
+              default: ;
+            endcase
+          end
+          default: ;
+        endcase
+      end
+      default: ;
+    endcase
+  end
+
+endmodule
diff --git a/controller.sv b/controller.sv
index 449858d..9ef9f8e 100644
--- a/controller.sv
+++ b/controller.sv
@@ -23,6 +23,10 @@
 // Description:    Main CPU controller of the processor                       //
 //                                                                            //
 ////////////////////////////////////////////////////////////////////////////////
+// Ajout dans ce fichier de "branch_taken_ex_i_tag" et "pc_set_o_tag", à voir leur utilité pour nous
+// Y a moyen que ce ne soient que pour le tag de pc, auquel cas on n'a pas besoin d'y toucher
+
+`include "riscv_config.sv"
 
 import riscv_defines::*;
 
@@ -127,6 +131,12 @@ module riscv_controller
   output logic        perf_jump_o,                // we are executing a jump instruction   (j, jr, jal, jalr)
   output logic        perf_jr_stall_o,            // stall due to jump-register-hazard
   output logic        perf_ld_stall_o             // stall due to load-use-hazard
+
+`ifdef DIFT
+  ,
+  input  logic        branch_taken_ex_i_tag,
+  output logic        pc_set_o_tag
+`endif
 );
 
   // FSM state encoding
@@ -174,6 +184,9 @@ module riscv_controller
 
     pc_mux_o         = PC_BOOT;
     pc_set_o         = 1'b0;
+`ifdef DIFT
+    pc_set_o_tag     = 1'b0;
+`endif
     jump_done        = jump_done_q;
 
     ctrl_fsm_ns      = ctrl_fsm_cs;
@@ -207,7 +220,9 @@ module riscv_controller
         instr_req_o   = 1'b1;
         pc_mux_o      = PC_BOOT;
         pc_set_o      = 1'b1;
-
+`ifdef DIFT
+        pc_set_o_tag  = 1'b1;
+`endif
         ctrl_fsm_ns = FIRST_FETCH;
       end
 
@@ -278,8 +293,11 @@ module riscv_controller
 
             // if there is a jr stall, wait for it to be gone
             if ((~jr_stall_o) && (~jump_done_q)) begin
-              pc_set_o    = 1'b1;
-              jump_done   = 1'b1;
+              pc_set_o     = 1'b1;
+`ifdef DIFT
+              pc_set_o_tag = 1'b1;
+`endif
+              jump_done    = 1'b1;
             end
 
             // we don't have to change our current state here as the prefetch
@@ -290,6 +308,9 @@ module riscv_controller
             if (exc_req_i) begin
               pc_mux_o      = PC_EXCEPTION;
               pc_set_o      = 1'b1;
+`ifdef DIFT
+              pc_set_o_tag  = 1'b1;
+`endif
               exc_ack_o     = 1'b1;
 
               halt_id_o     = 1'b1; // we don't want to propagate this instruction to EX
@@ -365,6 +386,13 @@ module riscv_controller
             ctrl_fsm_ns = DBG_SIGNAL;
           end
         end
+
+`ifdef DIFT
+        if (branch_taken_ex_i_tag) begin
+          pc_set_o_tag  = 1'b1;
+        end
+`endif
+
       end
 
       // a branch was in ID when a debug trap is hit
@@ -378,6 +406,12 @@ module riscv_controller
           pc_set_o = 1'b1;
         end
 
+`ifdef DIFT
+        if (branch_taken_ex_i_tag) begin
+          pc_set_o_tag = 1'b1;
+        end
+`endif
+
         ctrl_fsm_ns = DBG_SIGNAL;
       end
 
diff --git a/cs_registers.sv b/cs_registers.sv
index 8de09fa..6461628 100644
--- a/cs_registers.sv
+++ b/cs_registers.sv
@@ -22,6 +22,9 @@
 //                 RiscV draft priviledged instruction set spec (v1.7)        //
 //                                                                            //
 ////////////////////////////////////////////////////////////////////////////////
+// Ajout des registres TPR et TCR, y faudra qu'on vienne y rajouter THR
+
+`include "riscv_config.sv"
 
 import riscv_defines::*;
 
@@ -56,7 +59,13 @@ module riscv_cs_registers
   // Interrupts
   output logic        irq_enable_o,
   output logic [31:0] mepc_o,
-
+`ifdef DIFT   //Définition en tant que sortie des registres TPR et TCR
+  output logic [31:0] tpr_o,
+  output logic [31:0] tcr_o,
+`ifdef DIFT_H
+  output logic [31:0] thr_o,
+`endif
+`endif
   input  logic [31:0] pc_if_i,
   input  logic [31:0] pc_id_i,
   input  logic [31:0] pc_ex_i,
@@ -131,11 +140,18 @@ module riscv_cs_registers
   logic [ 0:0] mstatus_q, mstatus_n;
   logic [ 5:0] exc_cause, exc_cause_n;
 
+`ifdef DIFT   // Variables pour la machine à états je pense
+  logic [31:0] tpr_q, tpr_n;
+  logic [31:0] tcr_q, tcr_n;
+`ifdef DIFT_H
+  logic [31:0] thr_q, thr_n;
+`endif
+`endif
 
   ////////////////////////////////////////////
   //   ____ ____  ____    ____              //
   //  / ___/ ___||  _ \  |  _ \ ___  __ _   //
-  // | |   \___ \| |_) | | |_) / _ \/ _` |  //   
+  // | |   \___ \| |_) | | |_) / _ \/ _` |  //
   // | |___ ___) |  _ <  |  _ <  __/ (_| |  //
   //  \____|____/|_| \_\ |_| \_\___|\__, |  //
   //                                |___/   //
@@ -170,6 +186,14 @@ module riscv_cs_registers
       12'h7B5: csr_rdata_int = hwlp_end_i[1];
       12'h7B6: csr_rdata_int = hwlp_cnt_i[1];
 
+    `ifdef DIFT // Lecture des valeurs des registres du DIFT
+      12'h700: csr_rdata_int = tpr_q;
+      12'h701: csr_rdata_int = tcr_q;
+    `ifdef DIFT_H
+      12'h702: csr_rdata_int = thr_q;
+    `endif
+    `endif
+
       12'h7C0: csr_rdata_int = {29'b0, 2'b11, mestatus_q};
     endcase
   end
@@ -185,6 +209,14 @@ module riscv_cs_registers
     hwlp_we_o    = '0;
     hwlp_regid_o = '0;
 
+  `ifdef DIFT   // Mise à jour de la machine à états
+    tpr_n = tpr_q;
+    tcr_n = tcr_q;
+  `ifdef DIFT_H
+    thr_n = thr_q;
+  `endif
+  `endif
+
     case (csr_addr_i)
       // mstatus: IE bit
       12'h300: if (csr_we_int) mstatus_n = csr_wdata_int[0];
@@ -202,6 +234,14 @@ module riscv_cs_registers
       12'h7B5: if (csr_we_int) begin hwlp_we_o = 3'b010; hwlp_regid_o = 1'b1; end
       12'h7B6: if (csr_we_int) begin hwlp_we_o = 3'b100; hwlp_regid_o = 1'b1; end
 
+    `ifdef DIFT   // J'imagine que c'est l'update des registres TCR et TPR dans le CSR
+      12'h700: if (csr_we_int) tpr_n = csr_wdata_int;
+      12'h701: if (csr_we_int) tcr_n = csr_wdata_int;
+    `ifdef DIFT_H
+      12'h702: if (csr_we_int) thr_n = csr_wdata_int;
+    `endif
+    `endif
+
       // mestatus: machine exception status
       12'h7C0: if (csr_we_int) mestatus_n = csr_wdata_int[0];
     endcase
@@ -268,6 +308,13 @@ module riscv_cs_registers
   assign irq_enable_o = mstatus_q[0];
   assign mepc_o       = mepc_q;
 
+`ifdef DIFT
+  assign tpr_o = tpr_q;
+  assign tcr_o = tcr_q;
+`ifdef DIFT_H
+  assign thr_o = thr_q;
+`endif
+`endif
 
   // actual registers
   always_ff @(posedge clk, negedge rst_n)
@@ -278,6 +325,15 @@ module riscv_cs_registers
       mepc_q     <= '0;
       mestatus_q <= '0;
       exc_cause  <= '0;
+
+    `ifdef DIFT //Politiques de propagation et de check des tags de base
+      tpr_q = 32'b00000000000000001010100010100010;
+      tcr_q = 32'b00000000001101000001100000000000;
+    `ifdef DIFT_H
+      thr_q = 32'b00000000000000000000000000000001;
+    `endif
+    `endif
+
     end
     else
     begin
@@ -288,6 +344,15 @@ module riscv_cs_registers
       mestatus_q <= mestatus_n;
 
       exc_cause  <= exc_cause_n;
+
+    `ifdef DIFT // Mise à jour du CSR
+      tpr_q = tpr_n;
+      tcr_q = tcr_n;
+    `ifdef DIFT_H
+      thr_q = thr_n;
+    `endif
+    `endif
+
     end
   end
 
diff --git a/decoder.sv b/decoder.sv
index 3144e21..2d9820a 100644
--- a/decoder.sv
+++ b/decoder.sv
@@ -24,6 +24,8 @@
 //                                                                            //
 ////////////////////////////////////////////////////////////////////////////////
 
+`include "riscv_config.sv"
+
 import riscv_defines::*;
 
 module riscv_decoder
@@ -115,6 +117,8 @@ module riscv_decoder
 
   logic [1:0] csr_op;
 
+  // [DEBUG] DIFT
+  logic is_dift_i;
 
   /////////////////////////////////////////////
   //   ____                     _            //
@@ -182,6 +186,7 @@ module riscv_decoder
     bmask_a_mux_o               = BMASK_A_ZERO;
     bmask_b_mux_o               = BMASK_B_ZERO;
 
+    is_dift_i                   = 1'b0;
 
     unique case (instr_rdata_i[6:0])
 
@@ -269,44 +274,63 @@ module riscv_decoder
 
       OPCODE_STORE,
       OPCODE_STORE_POST: begin
-        data_req       = 1'b1;
-        data_we_o      = 1'b1;
-        rega_used_o    = 1'b1;
-        regb_used_o    = 1'b1;
-        alu_operator_o = ALU_ADD;
+        // if(instr_rdata_i[14:12] != 3'b111) begin // ¬ p.spsw
+          data_req       = 1'b1;
+          data_we_o      = 1'b1;
+          rega_used_o    = 1'b1;
+          regb_used_o    = 1'b1;
+          alu_operator_o = ALU_ADD;
+
+          // pass write data through ALU operand c
+          alu_op_c_mux_sel_o = OP_C_REGB_OR_FWD;
+
+          // post-increment setup
+          if (instr_rdata_i[6:0] == OPCODE_STORE_POST) begin
+            prepost_useincr_o       = 1'b0;
+            regfile_alu_waddr_sel_o = 1'b0;
+            regfile_alu_we          = 1'b1;
+          end
 
-        // pass write data through ALU operand c
-        alu_op_c_mux_sel_o = OP_C_REGB_OR_FWD;
+          if (instr_rdata_i[14] == 1'b0) begin
+            // offset from immediate
+            imm_b_mux_sel_o     = IMMB_S;
+            alu_op_b_mux_sel_o  = OP_B_IMM;
+          end else begin
+            // offset from register
+            regc_used_o        = 1'b1;
+            alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
+            regc_mux_o         = REGC_RD;
+          end
 
-        // post-increment setup
-        if (instr_rdata_i[6:0] == OPCODE_STORE_POST) begin
-          prepost_useincr_o       = 1'b0;
-          regfile_alu_waddr_sel_o = 1'b0;
-          regfile_alu_we          = 1'b1;
-        end
+          // store size
+          unique case (instr_rdata_i[13:12])
+            2'b00: data_type_o = 2'b10; // SB
+            2'b01: data_type_o = 2'b01; // SH
+            2'b10: data_type_o = 2'b00; // SW
+            default: begin
+              data_req       = 1'b0;
+              data_we_o      = 1'b0;
+              illegal_insn_o = 1'b1;
+            end
+          endcase
+        // end else begin
+          // p.spsw
 
-        if (instr_rdata_i[14] == 1'b0) begin
-          // offset from immediate
-          imm_b_mux_sel_o     = IMMB_S;
-          alu_op_b_mux_sel_o  = OP_B_IMM;
-        end else begin
-          // offset from register
-          regc_used_o        = 1'b1;
-          alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
-          regc_mux_o         = REGC_RD;
-        end
+          // data_req       = 1'b1;
+          // rega_used_o    = 1'b1;
+          // regb_used_o    = 1'b1;
+          // alu_operator_o = ALU_ADD;
 
-        // store size
-        unique case (instr_rdata_i[13:12])
-          2'b00: data_type_o = 2'b10; // SB
-          2'b01: data_type_o = 2'b01; // SH
-          2'b10: data_type_o = 2'b00; // SW
-          default: begin
-            data_req       = 1'b0;
-            data_we_o      = 1'b0;
-            illegal_insn_o = 1'b1;
-          end
-        endcase
+          // // pass write data through ALU operand c
+          // alu_op_c_mux_sel_o = OP_C_REGB_OR_FWD;
+
+          // // offset from immediate
+          // imm_b_mux_sel_o     = IMMB_S;
+          // alu_op_b_mux_sel_o  = OP_B_IMM;
+
+          // // store size
+          // data_type_o = 2'b00; // SW
+        // end
       end
 
       OPCODE_LOAD,
@@ -432,176 +456,176 @@ module riscv_decoder
       end
 
       OPCODE_OP: begin  // Register-Register ALU operation
-        regfile_alu_we = 1'b1;
-        rega_used_o    = 1'b1;
-
-        if (instr_rdata_i[31]) begin
-          // bit-manipulation instructions
-          alu_op_b_mux_sel_o  = OP_B_IMM;
-          bmask_needed_o      = 1'b1;
-          bmask_a_mux_o       = BMASK_A_S3;
-          bmask_b_mux_o       = BMASK_B_S2;
-
-          unique case (instr_rdata_i[14:12])
-            3'b000: begin
-              alu_operator_o  = ALU_BEXT;
-              imm_b_mux_sel_o = IMMB_S2;
-              bmask_b_mux_o   = BMASK_B_ZERO;
-            end
-            3'b001: begin
-              alu_operator_o  = ALU_BEXTU;
-              imm_b_mux_sel_o = IMMB_S2;
-              bmask_b_mux_o   = BMASK_B_ZERO;
-            end
-
-            3'b010: begin
-              alu_operator_o      = ALU_BINS;
-              imm_b_mux_sel_o     = IMMB_S2;
-              regc_used_o         = 1'b1;
-              regc_mux_o          = REGC_RD;
-            end
-
-            3'b011: begin alu_operator_o = ALU_BCLR; end
-            3'b100: begin alu_operator_o = ALU_BSET; end
-
-            default: illegal_insn_o = 1'b1;
-          endcase
-        end
-        else
-        begin // non bit-manipulation instructions
-
-          if (~instr_rdata_i[28])
-            regb_used_o = 1'b1;
+          regfile_alu_we = 1'b1;
+          rega_used_o    = 1'b1;
 
-          unique case ({instr_rdata_i[30:25], instr_rdata_i[14:12]})
-            // RV32I ALU operations
-            {6'b00_0000, 3'b000}: alu_operator_o = ALU_ADD;   // Add
-            {6'b10_0000, 3'b000}: alu_operator_o = ALU_SUB;   // Sub
-            {6'b00_0000, 3'b010}: alu_operator_o = ALU_SLTS;  // Set Lower Than
-            {6'b00_0000, 3'b011}: alu_operator_o = ALU_SLTU;  // Set Lower Than Unsigned
-            {6'b00_0000, 3'b100}: alu_operator_o = ALU_XOR;   // Xor
-            {6'b00_0000, 3'b110}: alu_operator_o = ALU_OR;    // Or
-            {6'b00_0000, 3'b111}: alu_operator_o = ALU_AND;   // And
-            {6'b00_0000, 3'b001}: alu_operator_o = ALU_SLL;   // Shift Left Logical
-            {6'b00_0000, 3'b101}: alu_operator_o = ALU_SRL;   // Shift Right Logical
-            {6'b10_0000, 3'b101}: alu_operator_o = ALU_SRA;   // Shift Right Arithmetic
-
-            // supported RV32M instructions
-            {6'b00_0001, 3'b000}: begin // mul
-              mult_int_en_o   = 1'b1;
-              mult_operator_o = MUL_MAC32;
-              regc_mux_o      = REGC_ZERO;
-            end
-            {6'b00_0001, 3'b001}: begin // mulh
-              regc_used_o        = 1'b1;
-              regc_mux_o         = REGC_ZERO;
-              mult_signed_mode_o = 2'b11;
-              mult_int_en_o      = 1'b1;
-              mult_operator_o    = MUL_H;
-            end
-            {6'b00_0001, 3'b010}: begin // mulhsu
-              regc_used_o        = 1'b1;
-              regc_mux_o         = REGC_ZERO;
-              mult_signed_mode_o = 2'b01;
-              mult_int_en_o      = 1'b1;
-              mult_operator_o    = MUL_H;
-            end
-            {6'b00_0001, 3'b011}: begin // mulhu
-              regc_used_o        = 1'b1;
-              regc_mux_o         = REGC_ZERO;
-              mult_signed_mode_o = 2'b00;
-              mult_int_en_o      = 1'b1;
-              mult_operator_o    = MUL_H;
-            end
-            {6'b00_0001, 3'b100}: begin // div
-              alu_op_a_mux_sel_o = OP_A_REGB_OR_FWD;
-              alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
-              regc_mux_o         = REGC_S1;
-              regc_used_o        = 1'b1;
-              regb_used_o        = 1'b1;
-              rega_used_o        = 1'b0;
-              alu_operator_o     = ALU_DIV;
-            end
-            {6'b00_0001, 3'b101}: begin // divu
-              alu_op_a_mux_sel_o = OP_A_REGB_OR_FWD;
-              alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
-              regc_mux_o         = REGC_S1;
-              regc_used_o        = 1'b1;
-              regb_used_o        = 1'b1;
-              rega_used_o        = 1'b0;
-              alu_operator_o = ALU_DIVU;
-            end
-            {6'b00_0001, 3'b110}: begin // rem
-              alu_op_a_mux_sel_o = OP_A_REGB_OR_FWD;
-              alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
-              regc_mux_o         = REGC_S1;
-              regc_used_o        = 1'b1;
-              regb_used_o        = 1'b1;
-              rega_used_o        = 1'b0;
-              alu_operator_o = ALU_REM;
-            end
-            {6'b00_0001, 3'b111}: begin // remu
-              alu_op_a_mux_sel_o = OP_A_REGB_OR_FWD;
-              alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
-              regc_mux_o         = REGC_S1;
-              regc_used_o        = 1'b1;
-              regb_used_o        = 1'b1;
-              rega_used_o        = 1'b0;
-              alu_operator_o = ALU_REMU;
-            end
-
-            // PULP specific instructions
-            {6'b10_0001, 3'b000}: begin // p.mac
-              regc_used_o     = 1'b1;
-              regc_mux_o      = REGC_RD;
-              mult_int_en_o   = 1'b1;
-              mult_operator_o = MUL_MAC32;
-            end
-            {6'b10_0001, 3'b001}: begin // p.msu
-              regc_used_o     = 1'b1;
-              regc_mux_o      = REGC_RD;
-              mult_int_en_o   = 1'b1;
-              mult_operator_o = MUL_MSU32;
-            end
-
-            {6'b00_0010, 3'b010}: alu_operator_o = ALU_SLETS; // Set Lower Equal Than
-            {6'b00_0010, 3'b011}: alu_operator_o = ALU_SLETU; // Set Lower Equal Than Unsigned
-            {6'b00_0010, 3'b100}: alu_operator_o = ALU_MIN;   // Min
-            {6'b00_0010, 3'b101}: alu_operator_o = ALU_MINU;  // Min Unsigned
-            {6'b00_0010, 3'b110}: alu_operator_o = ALU_MAX;   // Max
-            {6'b00_0010, 3'b111}: alu_operator_o = ALU_MAXU;  // Max Unsigned
-
-            {6'b00_0100, 3'b101}: alu_operator_o = ALU_ROR;   // Rotate Right
-
-            // PULP specific instructions using only one source register
-            {6'b00_1000, 3'b000}: alu_operator_o = ALU_FF1;   // Find First 1
-            {6'b00_1000, 3'b001}: alu_operator_o = ALU_FL1;   // Find Last 1
-            {6'b00_1000, 3'b010}: alu_operator_o = ALU_CLB;   // Count Leading Bits
-            {6'b00_1000, 3'b011}: alu_operator_o = ALU_CNT;   // Count set bits (popcount)
-            {6'b00_1000, 3'b100}: begin alu_operator_o = ALU_EXTS; alu_vec_mode_o = VEC_MODE16; end // Sign-extend Half-word
-            {6'b00_1000, 3'b101}: begin alu_operator_o = ALU_EXT;  alu_vec_mode_o = VEC_MODE16; end // Zero-extend Half-word
-            {6'b00_1000, 3'b110}: begin alu_operator_o = ALU_EXTS; alu_vec_mode_o = VEC_MODE8;  end // Sign-extend Byte
-            {6'b00_1000, 3'b111}: begin alu_operator_o = ALU_EXT;  alu_vec_mode_o = VEC_MODE8;  end // Zero-extend Byte
-
-            {6'b00_0010, 3'b000}: alu_operator_o = ALU_ABS;   // p.abs
-
-            {6'b00_1010, 3'b001}: begin // p.clip
-              alu_operator_o     = ALU_CLIP;
-              alu_op_b_mux_sel_o = OP_A_IMM;
-              imm_b_mux_sel_o    = IMMB_CLIP;
-            end
-
-            {6'b00_1010, 3'b010}: begin // p.clipu
-              alu_operator_o     = ALU_CLIPU;
-              alu_op_b_mux_sel_o = OP_A_IMM;
-              imm_b_mux_sel_o    = IMMB_CLIP;
-            end
-
-            default: begin
-              illegal_insn_o = 1'b1;
-            end
-          endcase
-        end
+          if (instr_rdata_i[31]) begin
+            // bit-manipulation instructions
+            alu_op_b_mux_sel_o  = OP_B_IMM;
+            bmask_needed_o      = 1'b1;
+            bmask_a_mux_o       = BMASK_A_S3;
+            bmask_b_mux_o       = BMASK_B_S2;
+
+            unique case (instr_rdata_i[14:12])
+              3'b000: begin
+                alu_operator_o  = ALU_BEXT;
+                imm_b_mux_sel_o = IMMB_S2;
+                bmask_b_mux_o   = BMASK_B_ZERO;
+              end
+              3'b001: begin
+                alu_operator_o  = ALU_BEXTU;
+                imm_b_mux_sel_o = IMMB_S2;
+                bmask_b_mux_o   = BMASK_B_ZERO;
+              end
+
+              3'b010: begin
+                alu_operator_o      = ALU_BINS;
+                imm_b_mux_sel_o     = IMMB_S2;
+                regc_used_o         = 1'b1;
+                regc_mux_o          = REGC_RD;
+              end
+
+              3'b011: begin alu_operator_o = ALU_BCLR; end
+              3'b100: begin alu_operator_o = ALU_BSET; end
+
+              default: illegal_insn_o = 1'b1;
+            endcase
+          end
+          else
+          begin // non bit-manipulation instructions
+
+            if (~instr_rdata_i[28])
+              regb_used_o = 1'b1;
+
+            unique case ({instr_rdata_i[30:25], instr_rdata_i[14:12]})
+              // RV32I ALU operations
+              {6'b00_0000, 3'b000}: alu_operator_o = ALU_ADD;   // Add
+              {6'b10_0000, 3'b000}: alu_operator_o = ALU_SUB;   // Sub
+              {6'b00_0000, 3'b010}: alu_operator_o = ALU_SLTS;  // Set Lower Than
+              {6'b00_0000, 3'b011}: alu_operator_o = ALU_SLTU;  // Set Lower Than Unsigned
+              {6'b00_0000, 3'b100}: alu_operator_o = ALU_XOR;   // Xor
+              {6'b00_0000, 3'b110}: alu_operator_o = ALU_OR;    // Or
+              {6'b00_0000, 3'b111}: alu_operator_o = ALU_AND;   // And
+              {6'b00_0000, 3'b001}: alu_operator_o = ALU_SLL;   // Shift Left Logical
+              {6'b00_0000, 3'b101}: alu_operator_o = ALU_SRL;   // Shift Right Logical
+              {6'b10_0000, 3'b101}: alu_operator_o = ALU_SRA;   // Shift Right Arithmetic
+
+              // supported RV32M instructions
+              {6'b00_0001, 3'b000}: begin // mul
+                mult_int_en_o   = 1'b1;
+                mult_operator_o = MUL_MAC32;
+                regc_mux_o      = REGC_ZERO;
+              end
+              {6'b00_0001, 3'b001}: begin // mulh
+                regc_used_o        = 1'b1;
+                regc_mux_o         = REGC_ZERO;
+                mult_signed_mode_o = 2'b11;
+                mult_int_en_o      = 1'b1;
+                mult_operator_o    = MUL_H;
+              end
+              {6'b00_0001, 3'b010}: begin // mulhsu
+                regc_used_o        = 1'b1;
+                regc_mux_o         = REGC_ZERO;
+                mult_signed_mode_o = 2'b01;
+                mult_int_en_o      = 1'b1;
+                mult_operator_o    = MUL_H;
+              end
+              {6'b00_0001, 3'b011}: begin // mulhu
+                regc_used_o        = 1'b1;
+                regc_mux_o         = REGC_ZERO;
+                mult_signed_mode_o = 2'b00;
+                mult_int_en_o      = 1'b1;
+                mult_operator_o    = MUL_H;
+              end
+              {6'b00_0001, 3'b100}: begin // div
+                alu_op_a_mux_sel_o = OP_A_REGB_OR_FWD;
+                alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
+                regc_mux_o         = REGC_S1;
+                regc_used_o        = 1'b1;
+                regb_used_o        = 1'b1;
+                rega_used_o        = 1'b0;
+                alu_operator_o     = ALU_DIV;
+              end
+              {6'b00_0001, 3'b101}: begin // divu
+                alu_op_a_mux_sel_o = OP_A_REGB_OR_FWD;
+                alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
+                regc_mux_o         = REGC_S1;
+                regc_used_o        = 1'b1;
+                regb_used_o        = 1'b1;
+                rega_used_o        = 1'b0;
+                alu_operator_o = ALU_DIVU;
+              end
+              {6'b00_0001, 3'b110}: begin // rem
+                alu_op_a_mux_sel_o = OP_A_REGB_OR_FWD;
+                alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
+                regc_mux_o         = REGC_S1;
+                regc_used_o        = 1'b1;
+                regb_used_o        = 1'b1;
+                rega_used_o        = 1'b0;
+                alu_operator_o = ALU_REM;
+              end
+              {6'b00_0001, 3'b111}: begin // remu
+                alu_op_a_mux_sel_o = OP_A_REGB_OR_FWD;
+                alu_op_b_mux_sel_o = OP_B_REGC_OR_FWD;
+                regc_mux_o         = REGC_S1;
+                regc_used_o        = 1'b1;
+                regb_used_o        = 1'b1;
+                rega_used_o        = 1'b0;
+                alu_operator_o = ALU_REMU;
+              end
+
+              // PULP specific instructions
+              {6'b10_0001, 3'b000}: begin // p.mac
+                regc_used_o     = 1'b1;
+                regc_mux_o      = REGC_RD;
+                mult_int_en_o   = 1'b1;
+                mult_operator_o = MUL_MAC32;
+              end
+              {6'b10_0001, 3'b001}: begin // p.msu
+                regc_used_o     = 1'b1;
+                regc_mux_o      = REGC_RD;
+                mult_int_en_o   = 1'b1;
+                mult_operator_o = MUL_MSU32;
+              end
+
+              {6'b00_0010, 3'b010}: alu_operator_o = ALU_SLETS; // Set Lower Equal Than
+              {6'b00_0010, 3'b011}: alu_operator_o = ALU_SLETU; // Set Lower Equal Than Unsigned
+              {6'b00_0010, 3'b100}: alu_operator_o = ALU_MIN;   // Min
+              {6'b00_0010, 3'b101}: alu_operator_o = ALU_MINU;  // Min Unsigned
+              {6'b00_0010, 3'b110}: alu_operator_o = ALU_MAX;   // Max
+              {6'b00_0010, 3'b111}: alu_operator_o = ALU_MAXU;  // Max Unsigned
+
+              {6'b00_0100, 3'b101}: alu_operator_o = ALU_ROR;   // Rotate Right
+
+              // PULP specific instructions using only one source register
+              {6'b00_1000, 3'b000}: alu_operator_o = ALU_FF1;   // Find First 1
+              {6'b00_1000, 3'b001}: alu_operator_o = ALU_FL1;   // Find Last 1
+              {6'b00_1000, 3'b010}: alu_operator_o = ALU_CLB;   // Count Leading Bits
+              {6'b00_1000, 3'b011}: alu_operator_o = ALU_CNT;   // Count set bits (popcount)
+              {6'b00_1000, 3'b100}: begin alu_operator_o = ALU_EXTS; alu_vec_mode_o = VEC_MODE16; end // Sign-extend Half-word
+              {6'b00_1000, 3'b101}: begin alu_operator_o = ALU_EXT;  alu_vec_mode_o = VEC_MODE16; end // Zero-extend Half-word
+              {6'b00_1000, 3'b110}: begin alu_operator_o = ALU_EXTS; alu_vec_mode_o = VEC_MODE8;  end // Sign-extend Byte
+              {6'b00_1000, 3'b111}: begin alu_operator_o = ALU_EXT;  alu_vec_mode_o = VEC_MODE8;  end // Zero-extend Byte
+
+              {6'b00_0010, 3'b000}: alu_operator_o = ALU_ABS;   // p.abs
+
+              {6'b00_1010, 3'b001}: begin // p.clip
+                alu_operator_o     = ALU_CLIP;
+                alu_op_b_mux_sel_o = OP_A_IMM;
+                imm_b_mux_sel_o    = IMMB_CLIP;
+              end
+
+              {6'b00_1010, 3'b010}: begin // p.clipu
+                alu_operator_o     = ALU_CLIPU;
+                alu_op_b_mux_sel_o = OP_A_IMM;
+                imm_b_mux_sel_o    = IMMB_CLIP;
+              end
+
+              default: begin
+                illegal_insn_o = 1'b1;
+              end
+            endcase
+          end
       end
 
       OPCODE_PULP_OP: begin  // PULP specific ALU instructions with three source operands
@@ -818,7 +842,6 @@ module riscv_decoder
         endcase
       end
 
-
       ////////////////////////////////////////////////
       //  ____  ____  _____ ____ ___    _    _      //
       // / ___||  _ \| ____/ ___|_ _|  / \  | |     //
@@ -951,6 +974,67 @@ module riscv_decoder
         endcase
       end
 
+      /////////////////////////////
+      //   ____ ___ _____ _____  //
+      //  |  _ \_ _|  ___|_   _| //
+      //  | | | | || |_    | |   //
+      //  | |_| | ||  _|   | |   //
+      //  |____/___|_|     |_|   //
+      //                         //
+      /////////////////////////////
+
+      `ifdef DIFT
+      // p.spsw / p.spsh / p.spsb / p.hmem
+      OPCODE_DIFT_STORE: begin
+
+        is_dift_i                   = 1'b1;
+                
+        // p.spsw ra, offset(rb)
+        data_req       = 1'b1;    // start transaction to data memory
+        data_we_o      = 1'b0;    
+
+        rega_used_o    = 1'b1;    // rs1 is used by current instruction
+        regb_used_o    = 1'b1;    // rs2 is used by current instruction
+        alu_operator_o = ALU_ADD; // ALU operation selection
+
+        // pass write data through ALU operand c
+        alu_op_c_mux_sel_o = OP_C_REGB_OR_FWD;
+
+        // offset from immediate
+        imm_b_mux_sel_o     = IMMB_S;
+        alu_op_b_mux_sel_o  = OP_B_IMM;
+
+        // store size
+        unique case (instr_rdata_i[13:12])
+          2'b00: data_type_o = 2'b00; // SW (p.spsw)
+          2'b01: data_type_o = 2'b01; // SH (p.spsh)
+          2'b10: data_type_o = 2'b10; // SB (p.spsb)
+          2'b11: begin                // SW (p.hmem)
+            `ifdef DIFT_H
+            data_type_o = 2'b00;
+            `else
+            illegal_insn_o = 1'b1;
+            `endif
+          end
+        endcase
+
+      end
+
+      OPCODE_DIFT_IMM : begin
+
+        unique case (instr_rdata_i[14:12])
+          3'b000: begin end // p.set
+          `ifdef DIFT_H
+          3'b001: begin end // p.hmark
+          3'b010: begin end // p.hset
+          `endif
+          default: illegal_insn_o = 1'b1; 
+        endcase
+
+      end
+
+      `endif
+
       default: begin
         illegal_insn_o = 1'b1;
       end
@@ -991,8 +1075,8 @@ module riscv_decoder
   assign regfile_alu_we_o  = (deassert_we_i) ? 1'b0          : regfile_alu_we;
   assign data_req_o        = (deassert_we_i) ? 1'b0          : data_req;
   assign hwloop_we_o       = (deassert_we_i) ? 3'b0          : hwloop_we;
-  assign csr_op_o          = (deassert_we_i) ? CSR_OP_NONE  : csr_op;
-  assign jump_in_id_o      = (deassert_we_i) ? BRANCH_NONE  : jump_in_id;
+  assign csr_op_o          = (deassert_we_i) ? CSR_OP_NONE   : csr_op;
+  assign jump_in_id_o      = (deassert_we_i) ? BRANCH_NONE   : jump_in_id;
   assign ebrk_insn_o       = (deassert_we_i) ? 1'b0          : ebrk_insn;
   assign eret_insn_o       = (deassert_we_i) ? 1'b0          : eret_insn;  // TODO: do not deassert?
   assign pipe_flush_o      = (deassert_we_i) ? 1'b0          : pipe_flush; // TODO: do not deassert?
diff --git a/docs/datasheet/algorithm2e.sty b/docs/datasheet/algorithm2e.sty
new file mode 100644
index 0000000..d6ff82d
--- /dev/null
+++ b/docs/datasheet/algorithm2e.sty
@@ -0,0 +1,3288 @@
+%  algorithm2e.sty --- style file for algorithms
+%                      almost everything can be customized by users. See the document for more explanations
+%% Copyright 1996-2017 Christophe Fiorio
+%
+% This work may be distributed and/or modified under the conditions of the LaTeX Project
+% Public License, either version 1.3 of this license or (at your option) any later version.
+% The latest version of this license is in http://www.latex-project.org/lppl.txt and
+% version 1.3 or later is part of all distributions of LaTeX version 2005/12/01 or later.
+%
+% This work has the LPPL maintenance status `maintained'.
+% 
+% The Current Maintainer of this work is M. Christophe Fiorio
+%
+% This work consists of the files algorithm2e.sty and algorithm2e.tex 
+% and the associated example files algorithm2e_exAlgoDisjdecomp.tex,
+% algorithm2e_exIR.tex, algorithm2e_ex01.tex, algorithm2e_exProg.tex,
+% algorithm2e_ex02.tex, algorithm2e_exfor.tex, algorithm2e_ex03.tex,
+% algorithm2e_exgeneric.tex, algorithm2e_ex04.tex,  algorithm2e_exgeneric2.tex,
+% algorithm2e_ex05.tex, algorithm2e_exnlsty.tex, algorithm2e_ex06.tex,
+% algorithm2e_exrepeat.tex, algorithm2e_ex07.tex, algorithm2e_exswitch.tex
+%  
+%  Report bugs and comments to:
+%  - algorithm2e-announce@lirmm.fr  mailing list for announcement about releases^^J%
+%  - algorithm2e-discussion@lirmm.fr mailing list for discussion about package^^J%
+%  subscribe by emailing sympa@lirmm.fr with 'subscribe <list> <firstname name>'^^J%
+%
+%  $Id: algorithm2e.sty,v 5.2 2017/07/18 15:26:26 fioriochristophe Exp $
+%
+%  PACKAGES REQUIRED:
+%
+%  - float   (in contrib/supported/float)
+%  - ifthen  (in base)
+%  - xspace  (in packages/tools)
+%  - relsize (in contrib/misc/relsize.sty)
+%
+%%%%%%%%%%%%%%%  Release 5.2
+%
+%   Package options: 
+%   ---------------
+%   - oldcommands                      : to use old command names
+%   - french, english, german, ngerman
+%      portuguese, czech, italiano,
+%      slovak, croatian, spanish       : for the name of the algorithm and some keyword code
+%   - onelanguage                      : to simply switch keyword from one language to another without changing
+%                                        keyword commands
+%   - boxed, boxruled, ruled, tworuled, 
+%     algoruled, plain                 : layout of the algorithm
+%   - algo2e                           : environment is algorithm2e instead of algorithms and \listofalgorithmes
+%                                        instead of \listofalgorithms
+%   - slide                            : to use when making slides
+%   - noline,lined,vlined              : how block are designed.
+%   - shortend, longend, noend         : short or long end keyword as endif for e.g.
+%   - linesnumbered                    : auto numbering of the algorithm's lines
+%   - linesnumberedhidden              : to hide autonumbered lines (show number on a line with \ShowLn
+%   - commentsnumbered, inoutnumbered  : to autonumber comments and inout keywords (by defaut not numbered)
+%   - rightnl                          : to have line number on the right instead of on the left as default
+%   - algonl                           : line numbers preceded by algo number
+%   - scright, scleft                  : right or left justified side comments
+%   - fillcomment, nofillcomment       : end mark of comment is flushed to the right so comments fill the line
+%   - dotocloa                         : add an entry in the toc for list of algorithms (require tocbibind package)
+%   - endfloat                         : add algoendfloat environment pushing algorithm so written to the end of document
+%   - resetcount, noresetcount         : start value of line numbers.
+%   - algopart,algochapter,algosection : algo numbering within part, chapter or section
+%   - titlenumbered,titlenotnumbered   : numbering of title set by \Titleofalgo
+%   - figure                           : algorithms are figures, numbered as figures, and put in the list of figures.
+%   - procnumbered                     : procedure or function are numbered as algorithm
+%   - nokwfunc                         : procedure or function name doens't become a command
+%   - norelsize                        : don't use relsize package (useful if it breaks the compatibily)
+%   - displayblockmarkers              : display begin, end keywords at start of each block
+%  
+%   defaults are; english,plain,resetcount,titlenotnumbered
+%
+%%%%%%%%%%%%%%
+%
+%   Short summary  
+%   -------------
+%  
+%   algorithm is an environment for writing algorithm in LaTeX2e.
+%   Almost all is customizable. You can add keywords, change style, change the layout, ...
+%   It provide macros that allow you to create differents sorts of key words, therefore a set of predefined key
+%   word is gived.
+%
+%   IT should be used as follows
+%
+%   \begin{algorithm}
+%       ...
+%       ...
+%   \end{algorithm}
+%
+%
+%   IMPORTANT : each line MUST end with \;
+%
+%   Note that if you define macros outside algorithm environment they
+%   are avaible in all the document and particulary you can use then
+%   inside all algorithms without re-define them.
+%  
+%   an example:
+%
+%   \begin{algorithm}
+%     \SetAlgoLined
+%     \KwIn{this text}
+%     \KwOut{how to write algorithm with \LaTeX2e }
+%     
+%     initialization\;
+%     \While{not at end of this document}{
+%       read current section\;
+%       \eIf{understand}{
+%         go to next section\;
+%         current section becomes this one\;
+%         }{
+%         go back to the beginning of current section\;
+%         }
+%       }
+%     \caption{How to write algorithm}
+%   \end{algorithm}
+%
+%
+%%%%%%%%%%%%%%         predefined keywords
+%
+%     \KwIn{input}
+%     \KwOut{output}
+%     \KwData{input}
+%     \KwResult{output}
+%     \KwTo                                       % a simple keyword
+%     \KwFrom                                     % a simple keyword
+%     \KwRet{[value]}
+%     \Return{[value]}
+%     \Begin{block inside}
+%     \eIf{condition}{Then Block}{Else block}     % in blocks
+%     \If{condition}{Then block}                  % in a block
+%     \uIf{condition}{Then block}                 % in a block unended
+%     \lIf{condition}{Else text}                  % on the same line
+%     \Else{inside Else}                          % in a block
+%     \lElse{Else text}                           % on the same line        
+%     \uElse{Else text}                           % in a block unended
+%     \ElseIf{inside Elseif}                      % in a block
+%     \lElseIf{Elseif text}                       % on the same line        
+%     \uElseIf{Elseif text}                       % in a block unended
+%     \Switch{Condition}{Switch block}
+%     \Case{a case}{case block}                   % in a block
+%     \lCase{a case}{case text}                   % on the same line
+%     \Other{otherwise block}                     % in a block
+%     \lOther{otherwise block}                    % on the same line
+%     \For{condition}{text loop}                  % in a block
+%     \lFor{condition}{text}                      % on the same line
+%     \ForEach{condition}{text loop}              % in a block
+%     \lForEach{condition}{text}                  % on the same line
+%     \ForPar{condition}{text loop}               % in a block
+%     \lForPar{condition}{text}                   % on the same line
+%     \While{condition}{text loop}                % in a block
+%     \lWhile{condition}{text loop}               % on the same line
+%     \Repeat{End condition}{text loop}           % in a block
+%     \lRepeat{condition}{text}                   % on the same line
+%
+%%%%%%%%%%%%%%
+%
+%   History: 
+%
+%   -  July 18 2017 - revision 5.2
+%                   * FIX: There was an overfull box 0.8pt with boxruled algorithm. This is fixed.
+%                   * FIX: problem when mixing caption package and figure option. This bug was partially corrected
+%                            in 5.0 for one side document but with false indentation and not working for two side
+%                            document. This is now fully fixed.
+%                   * FIX: misaligned lines numbers with noline option
+%                   * FIX: Fix croation keywords thanks to Ivan Kolan
+%                   * FIX: there was an overfull hbox of 8.5pt when using [H] and ruled caption. This is fixed.
+%                   * FIX: \SetCustomAlgoRuledWidth only changed midrule. This is fixed, it changes all the rules
+%   -  October 19 2015 - revision 5.1
+%                   * CHANGE/ADD: l commands  (the ones as \lIf) can now be used with a
+%                              star. If done, no end of line are done, so you can enclose
+%                              l command into another one. For example, you can write:
+%                              \lForEach{$i$}{\lIf*{foo}{bar}}.
+%                               Note that when you use a star, side comments are not allowed.
+%                   * CHANGE/ADD: Now you can have a side comment at end of macros which
+%                               have a block. For example you can do : 
+%                               \Begin(\tcc*[h]{side comment for begin}{text}(\tcc*[h]{side comment after end})
+%                               Note: there are some side effects for some commands:
+%                              \SetKwProg : macro defined thanks to \SetKwProg are allowed
+%                                                   to have no end marker. In this case,
+%                                                   beware to end side comment, this can
+%                                                   do weird output (but no error)
+%                   * CHANGE: \SetKwSwitch defines also an \uOther command which was not
+%                               the case until this release.
+%                   * CHANGE: \SetStartEndCondition{typo1}{typo2}{typo3} defined two end
+%                               conditions (type2 and typo3) : typo3 is no more used for
+%                               case condition as typo2 is used which is more consistent
+%                               since there is a condition followed by a keyword as for
+%                               if-then or other command that are defined using typo2.
+%                   * CHANGE: keywords was not language dependant to allow to use multiple
+%                               languages in the same document, but some keywords in
+%                               different language were having the same keyword that lead
+%                               last one declared to replace first one and so you could have some
+%                               spanish keywords printed as you were in portuguese. So
+%                               this behavior is changed from now:
+%                               - localized keywords are defined if according language
+%                                  option is defined ; 
+%                               - if you want to keep old behaviour and use localized
+%                                  keywords without using language option (keep old
+%                                  behavior), you can use languagekw option
+%                                  (e.g. frenchkw, germankw, ...). Note that you can use
+%                                  multiple languagekw options at the same time, in
+%                                  contrary of language option. Note also that if you use
+%                                  multiple languagekw options, you can get back the same
+%                                  problem as previously when keywords was not language
+%                                  dependant.
+%                   * ADD: new typo styles:
+%                               - Arguments of functions have now their own style. By
+%                                  default, FuncArgSty is the same as ArgSty. 
+%                               - Name of KwProg have now their own sty (they used ArgSty
+%                                  previously). By default, ProgSty is still ArgSty.
+%                               As usual, \SetFuncArgSty{}, FuncArgSty{} and
+%                               \SetProgSty{}, ProgSty{} are macros to set and use these
+%                               typo styles.
+%                   * ADD: Options to manage algorithm hangindent
+%                            Until this revision, long statement acts as classical text and
+%                            continue on next line starting from the same point. This makes
+%                            difficult to notice that the new lines of text is not a new
+%                            statement. Now, hangindent is managed and when a long
+%                            statement continue on next lines, lines, except the first,
+%                            are indented.
+%                            Option: noalgohanging
+%                               By default, long statement are indented on subsequent
+%                               lines; with this option you get old behavior and lines are
+%                               no more indented
+%                            Option: hangingcomment 
+%                               Comment that are alone on a line (not side comment) are
+%                               not driven by algo hanging: subsequent lines of long
+%                               comments are indented according to width of start comment
+%                               marker. With this option, comment are indented like normal
+%                               statement.
+%                            Option: hanginginout
+%                               As for comment, by default, in/out keywords and input
+%                               keywords (defined by \SetKwInOut or \SetKwInput) are not
+%                               indented by algorithm hangindent. They are indented
+%                               according to width of input keyword. If you want that these
+%                               keywords acts like normal statement, use this option.
+%                            \SetAlgoHangIndent{length}
+%                               This macro allows you to set your own indent length. By
+%                               default, \SetAlgoHangIndent{0.5em}
+%                   * ADD: Group markers. 
+%                            This option is related to block markers of release 5.0. Some
+%                            have ask to put also block markers for single line
+%                            command. This new feature has been implemented to do this.
+%                            So, you can now ask package to put begin and end keywords
+%                            automatically at start and end of single line command (see
+%                            example in documentation).
+%                            These new group markers macros are:
+%                            - \AlgoDisplayGroupMarkers and \AlgoDontDisplayGroupMarkers
+%                            Note that a new option has also been added: displaygroupmarkers
+%                   * ADD: \SetCustomAlgoRuledWidth{length}
+%                             set a custom ruled width of ruled and algoruled options ;
+%                             note that by the moment you use this macro, rules will have
+%                             this fixed length: this can cause strange behavior in
+%                             multicolumn mode or other layout that change the line
+%                             width. 
+%                   * ADD: turkish language option
+%                   * FIX: a spurious whitespace which results in a spurious indent in the
+%                            user's text right after the end of the algorithm environment
+%                            was introduced  in release 5.0. This is fixed now thanks to
+%                            Alexander Malkis.
+%                   * FIX: there was a problem with margins in caption when option figure
+%                            was use with caption package. This is fixed.
+%                   * FIX: when changing font size in caption with, interline skip stayed
+%                            unchanged and so with a small font was to large. This is fixed.
+%                   * FIX: in contrary of that is written in the documentation, ':' what
+%                            not in KwSty typo for KwIn and KwOut command. This is fixed. 
+%                   * FIX: strange behaviour with label and lines numbered: @currentlabel
+%                            was updated according to algo line number not in all
+%                            situation. For e.g, with hyperref package, always updated ;
+%                            with \nlset also updated, but with \nl or linesnumbered
+%                            option, not updated. This "feature" causes different output
+%                            with \label command according to options used which is not
+%                            that one want. This is solved now, and @currentlabel is
+%                            always updated so \label command works always is the same way.
+%                   * FIX: some czech keywords
+%                   * FIX: some spanish keywords
+%                   * FIX: some croatian keywords
+%                   * FIX: krantz class changes definition of chapter and get one more
+%                            option that classical classes as book.cls or report.cls and
+%                            broke fix for hyperref on chapter definition. This is now
+%                            fixed and algorithm detects use of krantz class and use then
+%                            a definition of chapter working with krantz class.
+%                   * FIX: an issue with internal macro which causes ([Q]) use as argument
+%                            of some environment to be misprinted (thanks to Martin Schr�der).
+%                   * FIX: mispelled name of hyperrefcounter inside internal macro.
+%
+%   - January 06 2013 - revision 5.0
+%                     * CHANGE: SetKwSwitch takes now 9 args: 9th arg is the same as
+%                                previous 8th arg ('end of switch' keyword). New 8th arg is
+%                                'end of case' keyword. This is due to change of release
+%                                3.2 which introduce end after case block... as I never
+%                                test with longend option, I never see that the 'end
+%                                switch' used for case was not good.
+%                     * CHANGE: when no end keyword is defined in a block macro, then
+%                                algorithm2e does no more try to print it. So even with lined or noline
+%                                option, no empty line is printed (before: a blank end was
+%                                printed, so a blank line appeared)
+%                     * Internal Change: add some internal function to improve readibility
+%                                        (thanks to Philip K. F. H\�lzenspies)
+%                     * ADD: Block markers. 
+%                            You can now ask package to put begin and end keywords automatically at begin
+%                            and end of blocks, it means each group of commands shifted and enclosed in
+%                            braces.
+%                            This is tricky to use but, combined with \SetStartEndCondition and
+%                            redefinition of keywords, you should be abble to simulate any syntax. See
+%                            examples in documentation where a generic example is derived in pseudo-code,
+%                            python and C by keeping code and changing only style using block markers
+%                            macros, \SetStartEndCondition and some redefinition of keywords.
+%                            These new block markers macros are:
+%                            - \AlgoDisplayBlockMarkers and \AlgoDontDisplayBlockMarkers
+%                            - \SetAlgoBlockMarkers{begin marker}{end marker}
+%                            - \BlockMarkersSty{text} and \SetBlockMarkersSty
+%                            Note that a new option has also been added: displayblockmarkers
+%                     * ADD: \leIf macro automatically defined by \SetKwIF: allow to define
+%                            an if-then-else on a single line.
+%                     * ADD: new macro \SetStartEndCondition{typo1}{typo2}{typo3} which
+%                            sets typo around condition in For, If, Switch, Case and
+%                            Repeat macros. First two are used around For, If, Swith
+%                            conditions, First and third are used for Case and Repeat
+%                            condition where condition ends the line. Default definition
+%                            is \SetStartEndCondition{ }{ }{}. 
+%                            A common alternative is \SetStartEndCondition{ (}{) }{)}
+%                            Can also be used to remove space around condition, for
+%                            example if you want python style commands:
+%                            \SetStartEndCondition{ }{}{} and \SetKwFor{For}{for}{:}{}
+%                     * ADD: new environment algomathdisplay which allow display math (like inside \[ \] or $$ $$) 
+%                            handling end line and line number
+%                     * ADD: new command \SetKwProg{Env}{Title}{is}{end} which defines a macro
+%                            \Env{args}{text}. Env is a block with 'Title' (in \CapSty) at the beginning
+%                            followed by args followed by 'is' then 'text' is put below inside a block ended
+%                            by 'end'. If no 'end' is specified, nothing is written (no
+%                            blank line is inserted). Useful to typeset function or prog for example:
+%                            \SetKwProg{Fn}{Function}{ is}{end} makes \Fn{afunc(i: int) : int}{return 0\;}                    
+%                            writes: 
+%                            Function afunc(i: int) : int is
+%                            | return 0;
+%                            end
+%                            or \SetKwProg{Def}{def}{:}{} makes \Def{afunc(i: int)}{return 0\;} writes:
+%                            def afunc(i: int):
+%                            | return 0
+%                            Tip: combine it with \SetKwFunction to write recursive function algorithm. With
+%                            example above, you could define \SetKwFunction{\Afunc}{afunc} and then write:
+%                            \Def{\Afunc{i:int}{\eIf{i>0}{\KwRet \Afunc{i-1}}{\KwRet 0\;}} that writes:
+%                            def afunc(i: int):
+%                            | if(i>0):
+%                            |     return afunc(i-1)
+%                            | else:
+%                            |     return 0
+%                            with appropriate typo.
+%                     * ADD: option croatian: croatian keywords (thanks to Ivan Kohan and
+%                                                           Yvan Gavran)
+%                     * ADD: option ngerman: same as german option but so can be used with global option ngerman
+%                            of babel
+%                     * ADD: option spanish: Spanish support (thanks to Mario Abarca)
+%                     * ADD: unterminated block: useful to add part separator that doesn't necessary need an end
+%                            keyword.  
+%                            Designed on the pattern of unterminated if (see \uIf macro) allowing to
+%                            add a block that is not terminated by a keyword. Such block are defined in the same
+%                            time as a block is defined by adding a macro beginning with u. So, for example,
+%                            predefined \SetKwBlock{Begin}{begin}{end} defines now two commands:
+%                            - \Begin{} as previously which print a begin - end block
+%                            - \uBegin{} that defines a begin only block
+%                     * FIX: problem when numbering line inside until condition of
+%                            \SetKwRepeat macro: line number was not correctly aligned.
+%                     * FIX: dotocloa option which was broken
+%                     * FIX: uIf and uCase didn't have same behavior when used with
+%                            noline, vlined or lined option. This is fixed. Side effect: no empty
+%                            line after an uIf or uCase when used with options lined or vlined
+%                     * FIX: a bug with Repeat Until command when use with side comment on Until
+%                     * FIX: a bug with side text -- text put into () -- of command macro (SetKwIf and so on)
+%                            which was always setting a ';' even after a \DontPrintSemicolon
+%                     * FIX: a bug with hyperref and chapter definition (thanks to Hubert Meier)
+%                     * FIX: bugs with l macro and side comment
+%                     * FIX: revision number
+%                     * FIX: fix non ascii character (utf8 not yet recognized by all latex engine)
+%                     * FIX: fnum@algocf had an useless parameter which sometimes broke expansion and output an error
+%                     * FIX: works now with multicol package
+%
+%   - december 14 2009 - revision 4.1
+%                     * ADD: new command \SetKwHangingKw{Name}{text} (hanging indent with keyword): This creates a
+%                            hanging indent much like \texttt{SetKwInput}, except that it removes the trailing `:'
+%                            and does not reset numbering (thanks to Nathan Tallent)
+%
+%   - november 17 2009  - revision 4.00 -
+%
+%                      * CHANGE: IMPORTANT: some commands have been renamed to have consistent naming (CamlCase
+%                                syntax) and old commands are no more available. If you doesn't want to change
+%                                your mind or use old latex files, you can use oldcommands option to enable old
+%                                commands back.
+%                                text. Here are these commands:
+%                                - \SetNoLine becomes \SetAlgoNoLine
+%                                - \SetVline  becomes \SetAlgoVlined
+%                                - \Setvlineskip  becomes \SetVlineSkip
+%                                - \SetLine   becomes \SetAlgoLined
+%                                - \dontprintsemicolon becomes \DontPrintSemicolon
+%                                - \printsemicolon becomes \PrintSemicolon
+%                                - \incmargin becomes \IncMargin
+%                                - \decmargin becomes \DecMargin
+%                                - \setnlskip becomes \SetNlSkip
+%                                - \Setnlskip becomes \SetNlSkip
+%                                - \setalcapskip becomes \SetAlCapSkip
+%                                - \setalcaphskip becomes \SetAlCapHSkip
+%                                - \nlSty becomes \NlSty
+%                                - \Setnlsty becomes \SetNlSty
+%                                - \linesnumbered becomes \LinesNumbered
+%                                - \linesnotnumbered becomes \LinesNotNumbered
+%                                - \linesnumberedhidden becomes \LinesNumberedHidden
+%                                - \showln becomes \ShowLn
+%                                - \showlnlabel becomes \ShowLnLabel
+%                                - \nocaptionofalgo becomes \NoCaptionOfAlgo
+%                                - \restorecaptionofalgo becomes \RestoreCaptionOfAlgo
+%                                - \restylealgo becomes \RestyleAlgo
+%                                - gIf macros and so on do no more exist
+%                      * NEW: - Compatibily with other packages improven by changing name of internal
+%                               macros. Algorithm2e can now be used with arabtex for example, if this last is
+%                               loaded after algorithm2e package.
+%                      * ADD: - OPTION endfloat: endfloat packages doesn't allow float environment inside other
+%                               environment. So using it with figure option of algorithm2e makes error. This
+%                               option enables a new environment algoendfloat to be used instead of algorithm
+%                               environment that put algorithm at the end. algoendfloat environment make
+%                               algorithm acting as endfloat figures. This option requires endfloat packages.
+%                      * ADD: - OPTION norelsize: starting from this release (v4.00), algorithm2e package uses
+%                               relsize package in order to get relative size for lines numbers; but it seems
+%                               that some rare classes (such as inform1.cls) are not compatible with relsize; to
+%                               have algorithm2e working, this option makes algorithm2e not to load relsize
+%                               package and go back to previous definition by using \scriptsize font for lines
+%                               numbers.
+%                      * ADD: - OPTION onelanguage: allow, if using standard keywords listed below, to switch
+%                               from one language to another without changing keywords by using appropriate
+%                               language option:
+%                               . KwIn, KwOut, KwData, KwResult
+%                               . KwTo KwFrom
+%                               . KwRet, Return
+%                               . Begin
+%                               . Repeat
+%                               . If, ElseIf, Else
+%                               . Switch, Case, Other
+%                               . For, ForPar, ForEach, ForAll, While
+%                               .
+%                      * ADD: - OPTION rightnl: put lines numbers to the right of the algorithm instead of left.
+%                      * ADD:   new commands \setRightLinesNumbers and \setLeftLinesNumbers which sets the lines
+%                               numbers to the right or to the left of the algorithm.
+%                      * ADD: - new kind of keywords: KwArray used to define arrays:
+%                               \SetKwArray{Kw}{array} defines an array keywords Kw called array and printed in
+%                               DataSty style when call with \Kw. It can be used with one argument which
+%                               denotes the element index: \Kw{n} prints array[n] with array in DataSty and n in
+%                               ArgSty.
+%                      * ADD/FIX: rules of ruled, algoruled, tworuled styles used rules of different sizes! This
+%                                 is now fixed. Moreover size of the rules is now controlled by a length and so
+%                                 can be customized by the user.
+%                                 \algoheightrule is the height of the rules and can be changed via \setlength
+%                                 \algoheightruledefault is the default height of he rules (0.8pt)
+%                                 \algotitleheightrule is the height of the rule that comes just after the
+%                                 caption in ruled and algoruled style; it can be changed via \setlength
+%                                 \algotitleheightruledefault is the default height of this rules (0.8pt)
+%                                 Thanks to Philippe Dumas who reports the bug and make the suggestion.
+%                      * ADD: - \SetAlgoCaptionSeparator which sets the separator between Algorithm 1 and the
+%                               title. By default it's ':' and caption looks like "Algorithm 2: title" but now
+%                               you can change it by using for example \SetAlgoCaptionSeparator{.} which will
+%                               give "Algorithm 3. title"
+%                      * ADD: - \SetAlgoLongEnd and \SetAlgoShortEnd and \SetAlgoNoEnd commands which act as
+%                               corresponding package options
+%                      * ADD: - OPTIONS italiano and slovak as new language (thanks to Roberto Posenato and
+%                               Miroslav Binas) 
+%                      * CHANGE: - Fnt and Sty macro to have consistent use and naming (see below)
+%                      * ADD: - \AlCapSty, \AlCapNameSty, \AlCapFnt, \AlCapNameFnt, \ProcSty, \ProcFnt,
+%                               \ProcNameSty, \ProcNameFnt, \ProcArgSty, ProcArgFnt and corresponding "set macro" 
+%                               \SetAlCapSty, \SetAlCapNameSty, \SetAlCapFnt, \SetAlCapNameFnt, \SetProcSty,
+%                               \SetProcFnt, \SetProcNameSty, \SetProcNameFnt, \SetProcArgSty, \SetProcArgFnt which
+%                               control the way caption is printed. Sty macro use command taking one parameter as
+%                               argument, Fnt macros use directly command. In Fact caption is printed as follow:
+%                               \AlCapSty{\AlCapFnt Algorithm 1:}\AlCapNameSty{\AlCapNameFnt my algorithm}
+%                               By default, \AlCapSty is textbf and \AlCapFnt is nothing. \AlCapNameSty keep text 
+%                               as it is, and \AlCapNameFnt do nothing also.
+%                               You can redefine \AlCapFnt and \AlCapNameFnt by giving macro to \Set commands. For
+%                               example, you can do \SetAlCapFnt{\large} to see Algorithm printed in \large font.
+%                               You can redefine \AlCapSty, \AlCapFnt, \AlCapNameSty and \AlCapNameFnt with the
+%                               corresponding \Set command. For the Sty commands, you have to give in parameter
+%                               name of a macro (whithout \)  which takes one argument. For example,
+%                               \SetAlCapFnt{textbf} defines the default behaviour. If you want to do more
+%                               complicated thing, you should define your own macro and give it to \SetAlCapFnt or
+%                               \SetAlCapNameFnt. Here are two examples:
+%                               - \newcommand{\mycapsty}[1]{\tiny #1}\SetAlCapNameSty{mycapsty}
+%                               - \newcommand{\mycapsty}[1]{\textsl{\small #1}}\SetAlCapNameSty{mycapsty}
+%                               Or you can combine the two, for the last example you can also do:
+%                               \SetAlCapNameSty{textsl}\SetAlCapNameFnt{\small}
+%                               Thanks to Jan Stilhammer who gives me the idea of \AlCapNameFnt.
+%                      * CHANGE \AlTitleFnt to match definition of all other Fnt macros and add a \AlTitleSty 
+%                               macro (see below) . Now you set \AlTitleFnt by calling \SetAlTitleFnt with 
+%                               directly a macro without parameter in argument:
+%                               Example: \SetAlTitleFnt{\small} to set title in small font.
+%                      * ADD: - \AlTitleSty and \SetAlTitleSty commands to set a style for title. These commands
+%                               are defined from a macro taking the text in argument, as \textbf for example. 
+%                               To set the TitleSty you have to give name of the macro (without the '\') 
+%                               to \SetAlTitleSty. For example \SetAlTitleSty{textbf} to set \textbf style.
+%                      * ADD: - new command \SetAlgorithmName{algorithmname}{list of algorithms name} which
+%                               redefines name of the algorithms and the sentence list of algorithms. Second
+%                               argument is the name that \autoref, from hyperref package, will use. Example:
+%                               \SetAlgorithmName{Protocol}{List of protocols} if you prefer protocol than
+%                               algorithm.
+%                      * ADD: - new \SetAlgoRefName{QXY} which change the default ref (number of the algorithm) by
+%                               the name given in parameter (QXY in the example). 
+%                      * ADD: - new command \SetAlgoRefRelativeSize{-2} which sets the output size of refs, defined
+%                               by \SetAlgoRefName, used in list of algorithms.
+%                      * ADD: - two dimensions to control the layout of caption in ruled, algoruled and boxruled
+%                               algorithms:
+%                               - interspacetitleruled (2pt by defaut) which controls the vertical space between
+%                                 rules and title in ruled and algoruled algorithms.
+%                               - interspaceboxruled (2\lineskip by default) which controls the vertical space
+%                                 between rules and title in boxruled algorithms.
+%                               These two dimensions can be changed by using \setlength command.
+%                      * ADD: - With the fix (see below) of procedure and function environments, a new feature has
+%                               been added: the name of the procedure or function set in caption is automatically
+%                               defined as a KwFunction and so can be used as a macro. For example, if inside a
+%                               procedure environment you set \caption{myproc()}, you can use \myproc macro in you
+%                               main text. Beware that the macro is only defined after the \caption!
+%                      * ADD: - OPTION nokwfunc to unable the new feature described above in function and
+%                               procedure environment. Useful if you use name of procedure or function that cannot
+%                               be a command name as a math display for example.
+%                      * ADD: - \SetAlgoNlRelativeSize{number} command which sets the relative size of line
+%                               numbers. By default, line numbers are two size smaller than algorithm text. Use
+%                               this macro to change this behavior. For example, \SetAlgoNlRelativeSize{0} sets it
+%                               to the same size, \SetAlgoNlRelativeSize{-1} to one size smaller and
+%                               \SetAlgoNlRelativeSize{1} to one size bigger
+%                      * ADD: - \SetAlgoProcName{aname} command which sets the name of Procedure printed by
+%                               procedure environment (the environment prints Procedure by default). Second
+%                               argument is the name that \autoref, from hyperref package, will use.
+%                      * ADD: - \SetAlgoFuncName{aname} command which sets the name of Function printed by
+%                               procedure environment (the environment prints Function by default). Second
+%                               argument is the name that \autoref, from hyperref package, will use. 
+%                      * ADD: - \SetAlgoCaptionLayout{style} command which sets style of the caption; style must
+%                               be the name of a macro taking one argument (the text of the caption). Examples
+%                               below show how to use it:
+%                               . \SetAlgoCaptionLayout{centerline} to have centered caption
+%                               . \SetAlgoCaptionLayout{textbf} to have bold caption
+%                               If you want to apply two styles in the same time, such as centered bold, you have
+%                               to define you own macro and then use \SetAlgoCaptionLayout with its name.
+%                      * ADD: - OPTION procnumbered: which makes the procedure and function to be numbered as
+%                               algorithm
+%                      * ADD: - OPTIONS tworuled and boxruled
+%                               these are two new layouts: tworuled acts like ruled but doesn't put a line after
+%                               caption ; boxruled surround algorithm by a box, puts caption above and add a line
+%                               after caption.
+%                      * REMOVE: - SetKwInParam has been deleted since not useful itself because of different
+%                                macros which can do the same in a better and a more consistent way as
+%                                SetKwFunction or SetKw.
+%                      * FIX: - line number is now correctly vertically aligned with math display.
+%                      * FIX: - references with hyperref. No more same identifier or missing name error. BUT now
+%                               you must NOT use naturalnames option of hyperref packages if you do PdfLaTeX
+%                      * FIX: - autoref with hyperref package (thanks to J�rg Sommer who notices the problem).
+%                      * FIX: - titlenumbered was not working! fixed.
+%                      * FIX: - Else(){} acted like uElse. Corrected.
+%                      * FIX: - noend management: when a block was inside another and end of block was following
+%                               each other, a blank line was added: it's now corrected.
+%                      * FIX: - Function and Procedure environment was no more working as defined originally: the
+%                               label was no more name of the procedure, it acts always as if procumbered option
+%                               has been used.
+%                      * FIX: - line numbers had a fixed size which can be bigger than algorithm text accordingly
+%                               to \AlFnt set (see also new command \SetAlgoNlRelativeSize above)
+%                      * FIX: - semicolon in comments when dontprintsemicolon is used.
+%                      * FIX: - listofalgorithms adds a vertical space before first algo of a chapter as for
+%                               listoffigures or listoftables
+%                      * FIX: - listofalgorithms with twocolumns mode and some classes which don't allow onecolumn
+%                               and so don't define \if@restonecol as prescribed in LaTeX (sig-alternate for
+%                               example)
+%                      * FIX: - algorithm2e now works with elsart cls and some more classes.
+%                      * FIX: - blocks defined by SetKwBlock act now as other blocks (if for instance) and don't
+%                               write end in vlined mode, instead they print a small horizontal line as required
+%                               by the option.
+%                      * FIX: - underfull hbox warning at each end of algorithm environment removed.
+%
+%                      * INTERNAL CHANGE: - short end keyword are deduce from long end keyword by keeping the
+%                                           first one. Allows to avoid double definition.
+%                      * INTERNAL CHANGE: - procedure, function and algorithm are now resolved by the same
+%                               environment to avoid code duplication. 
+%
+%   - October  04 2005  - revision 3.9 -
+%                      * ADD: - \setalcaphskip command which sets the horizontal skip before Algorithm: in caption
+%                               when used in ruled algorithm.
+%                      * ADD: - \SetAlgoInsideSkip command which allows to add an extra vertical space before and
+%                               after the core of the algorithm (ie: \SetAlgoInsideSkip{bigskip}) 
+%                      * CHANGE: - caption, when used with figure option, is no more controlled by algorithm2e
+%                                  package and so follows the exact behaviour of figures. The drawback is that you
+%                                  cannot change the typo with AlTitleFnt or CapFnt. The avantage is that if you
+%                                  use caption package, it works.
+%                      * FIX: - problem with numbering line and pdflatex
+%                      * FIX: - error when algorithm2e package was used with beamer and listings together
+%   - February 12 2005  - revision 3.8 -
+%                      * FIX: - extra line with noend option.
+%   - February 10 2005  - revision 3.7 -
+%                      * ADD: - sidecomment: different macros allowing to put text right after code on the same
+%                               line. They are defined in the same time comment macros are defined with a star
+%                               after the macro name. By default comments are right justified but this can be
+%                               change with appropriate option in the macro. Ex:
+%                               . default: \tcc*{side comment}
+%                               . same as previous: \tcc*[r]{side comment}
+%                               . left justify: \tcc*[l]{side comment}
+%                               . here: \tcc*[h]{side comment} don't put the end of line mark before
+%                                       comment (; by default) and don't end the line.
+%                               . flushed: \tcc*[f]{side comment} same as the precedent but right
+%                                 justified
+%                      * ADD: - OPTION scright (default): right justified side comments (side comments
+%                               are flushed to the righr)
+%                      * ADD: - OPTION scleft: left justified side comments (side comments are put right after the
+%                               code line)
+%                      * ADD: - \SetSideCommentLeft acts as scleft option
+%                      * ADD: - \SetSideCommentRight acts as scright option
+%                      * ADD: - block like macro side text: all macro defining a block allows now to put text right
+%                               after key words by putting text into (). Done to be used with sidecomment macros,
+%                               but all text can be used. 
+%                               Ex: \eIf(\tcc*[f]{then comment}){test}{then text}(else side text){else text}
+%                      * ADD: - OPTION fillcomment (default): end mark of comment is flushed to the right so
+%                               comments fill all the width of text.
+%                      * ADD: - OPTION nofillcomment: end mark of comment is put right after the comment.
+%                      * ADD: - \SetNoFillComment acts as nofillcomment option.
+%                      * ADD: - \SetFillComment acts as fillcomment option.
+%                      * ADD: - OPTION dotocloa: which adds an entry in the toc for the list of algorithms. This
+%                               option load package tocbibind if not already done and so list of figures and list
+%                               of tables are also added in the toc. If you want to control which ones of the lists
+%                               will be added in the toc, please load package tocbibind before package algorithm
+%                               and give it the options you want.
+%                      * FIX: - vertical spacing for uif macro with noend option
+%                      * FIX: - all the compatibility problems between caption and other packages
+%                      * FIX: - typographical differences between list of algorithms and other lists  when in
+%                               report or book 
+%
+%   - January 24 2005  - revision 3.6 -
+%                      * FIX: - vertical spacing and space characters at the beginning or end of comments.
+%                               line numbers of comments not in the NlSty.
+%                               Thanks to Arnaud Giersch for his comments and suggestions.
+%                      * FIX: - Set*Sty macro: the styles defined was not protected and was modified by surrounding
+%                               context. For example KwTo in a \For{}{} was in bold AND italic instead of just in
+%                               bold.
+%                      * FIX: - line number misplacement after \Indp
+%
+%   - January 21 2005  - revision 3.5 -
+%                      * ADD: - hidden numbering of the lines. Lines are auto-numbered but numbers are shown only
+%                               on lines you specify:
+%                               * linesnumberedhidden option or \LinesNumberedHidden macro activate this
+%                                 functionnality.
+%                               * \ShowLn and \ShowLnLabel{lab} macros make the number visible on the
+%                               line. \ShowLnLabel{lab} allows to set a label for this line. 
+%                               Thanks to Samson de Jager who makes this suggestion and provides the macros.
+%                      * ADD: - \AlCapFnt and \SetAlCapFnt which allow to have a different font for
+%                               caption. Works like \AlFnt and \SetAlFnt and by default is the same.
+%                      * ADD: - \AlCapSkip skip length. This vertical space is added before caption in plain ou
+%                               boxed mode. It allows to change distance between text and caption.
+%                      * FIX: - caption compatible with IEEEtran class. 
+%                      * FIX: - some vertical spacing error with \uIf macros (Thanks to Arnaud Giersch)
+%                      * FIX: - Procedure and Function: lines are also numbered like algorithms
+%                      * FIX: - CommentSty was not used for Comments
+%
+%   - January 10 2005  - revision 3.4 -
+%                      * FIX: - caption compatible with new release of Beamer class. 
+%
+%   - June 16 2004     - revision 3.3 - 
+%                      * FIX: - Hyperlink references of Hyperref package works now if compiled with pdflatex 
+%                               and [naturalnames] option of hyperref package is used.
+%                      * FIX: - algorithm[H] had problem in an list environment - corrected
+%                      * FIX: - interline was not so regular in nested blocks - corrected
+%                      * ADD  - \SetVlineSkip macro which sets the vertical skip after the little horizontal 
+%                               rule which closes a block in Vlined mode. By default 0.8ex
+%
+%   - June 11 2004     - revision 3.2 - AUTO NUMBERING LINES !!!
+%                      * ADD: auto numbering of the lines (the so asked and so long awaiting feature)
+%                             this feature is managed by 3 options and 3 commands:
+%                             - linesnumbered option: lines of the algo are numbered except for comments and
+%                               input/output (KwInput and KwInOut)
+%                             - commentsnumbered option: makes comments be numbered
+%                             - inoutnumbered option: makes data input/output be numbered
+%                             - \nllabel{lab} labels the line so you can cite with \ref{lab}
+%                             - \LinesNumbered make the following algorithms having auto-numbered lines
+%                             - \linesnotnumbered make the following algorithms having no auto-numbered lines
+%                      * Change: algo2e option renames listofalgorithms in listofalgorithmes
+%                      * FIX: new solution for compatibility with color package, more robust and not tricky.
+%                             Many thanks to David Carlisle for his advices
+%
+%   - June 09 2004     - revision 3.1 -
+%                      * Change: \SetKwSwitch command defines an additionnal macro \uCase and \Case prints end
+%                      * Change: now macros SetKw* do a renewcommand if the keyword is already defined. So you can
+%                                redefine default definition at your own convenience or change your definition
+%                                without introducing a new macro and changing your text.
+%                      * ADD: new macro \SetKwIF which do \SetKwIf and
+%                             \SetKwIfElseIf.The following default definition has been added:
+%                             \SetKwIF{If}{ElseIf}{Else}{if}{then}{else if}{else}{endif}
+%                             and so you get the macros;
+%                             \If \eIf \lIf \uIf \ElseIf \uElseIf \lElseIf \Else \uElse \lElse
+%                      * ADD: new macro \SetAlgoSkip which allow to fix the vertical skip before and after the
+%                             algorithms. Default is smallskip, do \SetAlgoSkip{} if you don't want an extra space
+%                             or \SetAlgoSkip{medskip} or \SetAlgoSkip{bigskip} if you want bigger space.
+%                      * ADD: macro \SetKwIf defines in addition a new macro \uElse  (depending on wat name you
+%                             have given in #2 arg).
+%                      * ADD: macro \SetKwIfElseIf defines in addition a new macro \uElse and \ugElseIf (depending
+%                             on what name you have given in #2 and #3 arg).
+%                      * Change: baseline of algorithm is now top, so two algorithms can be put side by side.
+%                      * FIX: Compatibility with color package solved. The problem was due to a redefinition of
+%                             standard macros by color package. This solves compatibility problem with other
+%                             packages as pstcol or colortbl. (notified by Dirk Fressmann, Antti Tarvainen and Koby
+%                             Crammer)
+%                      * Fix: extra little shift to the right with boxed style algorithm removed (notified by
+%                             P. Tanovski)
+%                      * Fix: algoln option was buggy (notified bye Jiaying Shen)
+%                      * Fix: german and portuges option didn't work due to bad typo (notified by Martin Sievers,
+%                             Thorsten Vitt and Jeronimo Pellegrini)
+%                      
+%   - February 13 2004 - revision 3.0 -
+%                      * Major revision which makes the package independent from float.sty, so now
+%                        - algorithm* works better, in particular can be used in multicols environments
+%                        - (known bug corrected)
+%                          [H] works now for all sort of environment but is handled differently for classic
+%                          environment and star environment (algorithm, figure, procedure and function). For star
+%                          environment, H acts like for classical figure environment, so it doesn't stay here
+%                          absolutely.
+%                        - (known bug corrected)
+%                          you can use now floatflt package with algorithm package and even with figure
+%                          option. Beware that if you want to put an algorithm inside a floatingfigure, it cannot
+%                          be floating, so [H] is required and then figure option should not be used, since
+%                          standard figure[H] are still floating with LaTeX.
+%                      * boxruled: a new style added. Possible now since no style no more defined by the float
+%                        package.
+%                      * nocaptionofalgo: dosen't print Algorithm #: in the caption for algorithm in ruled or
+%                        algoruled style.
+%                        note: this is just documentation of a macro which was already in the package.
+%   - December 14 2003 - revision 2.52 -
+%                      * output message shorter
+%                      * French keyword macro \PourTous was missing for longend option, it has been added.
+%                      * TitleofAlgo prints Function or Procedure in corresponding environments.
+%
+%   - October 27 2003  - revision 2.51 - Revision submitted to CTAN archive
+%                      * correction of a minor which make caption in procedure
+%                        and function to be blanck with pdfscreen package
+%                        (thanks to Joel Gossens for the notification)
+%                      * add two internal definition to avoid some errors when
+%                        used with Hyperref package (Hyperref package need to
+%                        define new counter macro from existing ones, and
+%                        don't do it for algorithm2e package, so we do it)
+%
+%   - October 17 2003  - revision 2.50 - first revision for CTAN archive
+%                      * add \AlFnt and \SetAlFnt{font} macros: \AlFnt is used at the beginning of the caption and
+%                        the body of algorithm in order to define the fonts used for typesetting algorithms. You
+%                        can use it elsewhere you want to typeset text as algorithm. For example you can do
+%                        \SetAlFnt{\small\sf} to have algorithms typeset in small sf font. Default is nothing so
+%                        algorithm is typeset as the text of the document.
+%                      * add \AlTitleFnt{text} and \SetAlTitleFnt{font} macros: The {Algorithm: } in the caption is
+%                        typeset with \AlTitleFnt{Algorithm:}. You can use it to have text typeset as {Algorithm:}
+%                        of captions. Default is textbf.  Default can be redefined by \SetAlTitleFnt{font}, for
+%                        example you can do \SetAlTitleFnt{emph}
+%                      * add CommentSty typo for text comment.  
+%                      * add some compatibility with hyperref package (still an error on multiply defined refs but
+%                        pdf correctly generated)
+%                      * flush text to left in order to have correct indentation even with class as amsart which
+%                        center all figures
+%                      * add german, portuguese and czech options for title of algorithms and typo.
+%                      * add portuguese translation of predefined keywords * add czech translation of some
+%                        predefined keywords
+%
+%   - December 23 2002 - revision 2.40
+%                      * add some French keyword missing
+%                      * add function* and procedure* environment like algorithme* environment: print in one column
+%                        even if twocolumn option is specified for the document.
+%                      * add a new macro \SetKwComment to define macro which writes comments in the text. First
+%                        argument is the name of the macro, second is the text put before the comment, third is the
+%                        text put at the end of the comment.Default are \tcc and \tcp
+%                      * add new options to change the way algo are numbered:
+%                        [algopart] algo are numbered within part (counter must exist)
+%                        [algochapter] algo are numbered within chapter
+%                        [algosection] algo are numbered within section
+%
+%   - March 27 2002   - revision 2.39
+%                      * Gilles Geeraerts: added the \SetKwIfElseIf to manage
+%                        if (c)
+%                             i;
+%                        else if (c)
+%                             i;
+%                        ...
+%                        else
+%                             i;
+%                        end
+%                      * Also added \gIf \gElseIf \gElse.
+%
+%   - January 02 2001 - revision 2.38
+%                      * bugs related to the caption in procedure and function
+%                        environment are corrected.
+%                      * bug related to option noend (extra vertical space added
+%                        after block command as If or For) is corrected.
+%                      * czech option language added (thanks to Libor Bus: l.bus@sh.cvut.cz).
+%  
+%   - October 16 2000 - revision 2.37
+%                      * option algo2e added: change the name of environment
+%                        algorithm into algorithm2e. So allow to use the package
+%                        with some journal style which already define an algorithm
+%                        environment.
+%  
+%   - September 13 2000 - revision 2.36
+%                      * option slide added: require package color
+%                      * Hack for slide class in order to have correct
+%                        margins
+%  
+%   - November 25 1999 - revision 2.35
+%                      * revision number match RCS number
+%                      * Thanks to David A. Bader, a new option is added:
+%                        noend: no end keywords are printed.
+%  
+%   - November 19 1999 - revision 2.32
+%                      * minor bug on longend option corrected.
+%  
+%   - August 26 1999 - revision 2.31
+%                      * add an option: figure
+%                        this option makes algorithms be figure and so are numbered
+%                        as figures, have Figure as caption and are put in 
+%                        the \listoffigures
+%  
+%   - January 21 1999 - revision 2.3 beta
+%                    add 2 new environments: procedure and function.
+%                    These environments works like algorithm environment but:
+%                    - the ruled (or algoruled) style is imperative.
+%                    - the caption now writes Procedure name....
+%                    - the syntax of the \caption command is restricted as
+%                      follow: you MUST put a name followed by 2 braces like
+%                      this ``()''. You can put arguments inside the braces and
+%                      text after. If no argument is given, the braces will be
+%                      removed in the title. 
+%                    - label now puts the name (the text before the braces in the
+%                      caption) of the procedure or function as reference (not
+%                      the number like a classic algorithm environment).
+%                    There are also two new styles: ProcNameSty and
+%                    ProcArgSty. These style are by default the same as FuncSty
+%                    and ArgSty but are used in the caption of a procedure or a
+%                    function.
+%                    
+%   - November 28 1996 - revision 2.22
+%                    add a new macro \SetKwInParam{arg1}{arg2}{arg3}:
+%                    it defines a macro \arg1{name}{arg} which prints name in keyword
+%                    style followed byt arg surrounded by arg2 and arg3. The main
+%                    application is to a function working as \SetKwInput to be used
+%                    in the head of the algorithm. For example
+%                    \SetKwInParam{Func}{(}{)} allows
+%                    \Func{functionname}{list of arguments} which prints:
+%                    \KwSty{functioname(}list of arguments\KwSty{)}
+%       
+%
+%   - November 27 1996 - revision 2.21:
+%                    minor bug in length of InOut boxes fixed.
+%                    add algorithm* environment.
+%
+%   - July 12 1996 - revision 2.2: \SetArg and \SetKwArg macros removed.
+%                        
+%                    \SetArg has been removed since it never has been
+%                    documented.
+%                    \SetKwArg has been removed since \SetKw can now
+%                    take an argument in order to be consistent with
+%                    \SetKwData and \SetKwFunction macros.
+%
+%   - July 04 1996 - revision 2.1: still more LaTeX2e! Minor compatibility break
+%
+%                    Macros use now \newcommand instead of \def, use of \setlength, 
+%                    \newsavebox, ... and other LaTeX2e specific stuff.
+%                    The compatibility break:
+%                    - \SetData becomes \SetKwData to be more consistent. So the old 
+%                      \SetKwData becomes \SetKwInput
+%                    - old macros \titleofalgo, \Freetitleofalgo and \freetitleofalgo
+%                      from LaTeX209 version which did print a warning message and call 
+%                      \Titleofalgo in version 2.0 are now removed!
+%
+%   - March 13 1996 - revision 2.0: first official major revision.
+%   
+%
+%%%%%%%%%%%%%%
+%
+%   Known bugs: 
+%   -----------
+%   - horizontal spacing (indent) doesn't work with revtex4 class.
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% for more complete informations you can see algorithm2e.tex
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%% Identification Part %%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+\NeedsTeXFormat{LaTeX2e}[1994/12/01]
+%
+\ProvidesPackage{algorithm2e}[2017/07/18 v5.2 algorithms environments]
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%% Initial Code %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+\@makeother\*% some package redefined it as a letter (as color.sty)
+\def\@firstword#1 #2\@nil{#1}% an useful fonction
+%%%%%%% Utilities:
+% \ifArgumentEmpty<c><t><e> ; if c is empty, i.e. {}, then t, else e.
+%    Function used internally, but may as well expose it to the user; it's useful
+\begingroup
+\catcode`\Q=3
+\catcode`\T=3
+\long\gdef\ALGOCF@argemptyaux#1#2Q#3#4#5T{#4}
+\long\gdef\ifArgumentEmpty#1{%
+  \begingroup\long\edef\@tempa{\endgroup
+    \ALGOCF@argemptyaux#1QQ{\noexpand\@secondoftwo}{\noexpand\@firstoftwo}T%
+  }\@tempa
+}
+\endgroup
+% \long\def\ifArgumentEmpty#1{\bgroup
+% 	\catcode`\Q=3
+% 	\catcode`\T=3
+% 	\long\def\@tempa##1##2Q##3##4##5T{##4}%
+% 	\xdef\@tempa{\@tempa#1QQ{\noexpand\@secondoftwo}{\noexpand\@firstoftwo}T}%
+% \egroup\@tempa}
+%%%%%%%%%%%
+%
+% \algocf@longdef -> shorthand to reduce
+%    \expandafter\long\expandafter\def
+% to
+%    \expandafter\algocf@longdef
+% may look insignificant, but reads that much better ;)
+\def\algocf@longdef{\long\def}
+%
+% \algocf@newcommand (and helper \algocf@new@command) behaves like LaTeX's newcommand,
+% with two differences:
+%  - the argument is not "\<name>", but rather "<name>"; i.e. one level of indirection
+%  - if the command exists already, then \renewcommand, rather than \newcommand
+\def\algocf@newcommand#1{\expandafter\algocf@new@command\csname#1\endcsname}
+\def\algocf@new@command#1{%
+	\begingroup \escapechar\m@ne\xdef\@gtempa{{\string#1}}\endgroup
+	\expandafter\@ifundefined\@gtempa\newcommand\renewcommand#1}%
+%
+% \algocf@newcmdside<name><arity><body>
+%   The largest time-saver; many commands we define have the pattern:
+%     \<name>(<side_text>)<argX><argY>...
+%   where "(<side_text>)" is optional. By defining them with this function,
+%   the arguments are parsed and renumbered, i.e. the body works as if the
+%   command was:
+%     \<name><side_text><argX><argY>...
+%   and can use \ifArgumentEmpty to see whether its #1 exists (default case
+%   for the side text is (), so there's no difference between calling
+%     \foo{bar}
+%   or
+%     \foo(){bar}
+%   Technically this is new behaviour, but it shouldn't really occur...
+\algocf@longdef\algocf@newcmdside#1#2#3{%
+	\expandafter\def\csname#1\endcsname{%
+		\@ifnextchar({\csname algocf@#1strip\endcsname}{\csname algocf@#1strip\endcsname()}%
+	}%
+	\expandafter\algocf@longdef\csname algocf@#1strip\endcsname(##1){\csname algocf@#1main\endcsname{##1}}%
+	\algocf@newcommand{algocf@#1main}[#2]{#3}%
+}
+%
+% a serie of newcmdside macro for block that allows a comment after the end
+%     \<name>(<side_text>)<argX><argY>...(<side_text>)% 
+%
+% 1. kind of begin-end : for command with only one block as begin-end 
+\algocf@longdef\algocf@newcmdside@kobe#1#2{% <name of cmd><body of cmd>
+  % command starts by checking for side comment at beginning
+  \expandafter\def\csname#1\endcsname{%
+    \@ifnextchar({\csname algocf@#1strip\endcsname}{\csname algocf@#1strip\endcsname()}%
+  }%
+  % next we strip comment and include it in cmd that get body and check last side comment
+  \expandafter\algocf@longdef\csname algocf@#1strip\endcsname(##1)##2{\csname algocf@#1checkcomfol\endcsname{##1}{##2}}%
+  % now check for last side comment; args are : <first side com (could be empty)>, <body of cmd>
+  \expandafter\algocf@longdef\csname algocf@#1checkcomfol\endcsname##1##2{\@ifnextchar({\csname algocf@#1withendcom\endcsname{##1}{##2}}{\csname algocf@#1noendcom\endcsname{##1}{##2}}}% call macro that manages end of command, with or without last side comment
+  % finally manage end of macro... with end side comment...
+  \expandafter\algocf@longdef\csname algocf@#1withendcom\endcsname##1##2(##3){%
+    \csname algocf@#1main\endcsname{##1}{##2}{##3}}%
+  % ... or without end side comment
+  \expandafter\algocf@longdef\csname algocf@#1noendcom\endcsname##1##2{%
+    \csname algocf@#1main\endcsname{##1}{##2}{}}%
+  \algocf@newcommand{algocf@#1main}[3]{#2}%
+}%
+%
+% 2. kind of if-else : for command with two blocks as if-then-else 
+\algocf@longdef\algocf@newcmdside@koif#1#2{% <name of cmd><body of cmd>
+  % command starts by checking for side comment at beginning
+  \expandafter\def\csname#1\endcsname{%
+    \@ifnextchar({\csname algocf@#1strip\endcsname}{\csname algocf@#1strip\endcsname()}%
+  }%
+  % next we strip comment and include it in cmd that get body and check last side comment
+  \expandafter\algocf@longdef\csname algocf@#1strip\endcsname(##1)##2##3{\csname algocf@#1checkcomfol\endcsname{##1}{##2}{##3}}%
+  % now check for last side comment; args are : <1st side com>, <1st body of cmd>, <2nd body of cmd>
+  \expandafter\algocf@longdef\csname algocf@#1checkcomfol\endcsname##1##2##3{\@ifnextchar({\csname algocf@#1withendcom\endcsname{##1}{##2}{##3}}{\csname algocf@#1noendcom\endcsname{##1}{##2}{##3}}}% call macro that manages end of command, with or without last side comment
+  % finally manage end of macro... with end side comment...
+  \expandafter\algocf@longdef\csname algocf@#1withendcom\endcsname##1##2##3(##4){%
+    \csname algocf@#1main\endcsname{##1}{##2}{##3}{##4}}%
+  % ... or without end side comment
+  \expandafter\algocf@longdef\csname algocf@#1noendcom\endcsname##1##2##3{%
+    \csname algocf@#1main\endcsname{##1}{##2}{##3}{}}%
+  \algocf@newcommand{algocf@#1main}[4]{#2}%
+}%
+%
+% \algocf@newcmdsides<name><arity><body><tail><closing>
+%   Like the command above, but with an optional side text at the end
+%   of the command as well, i.e.:
+%     \<name>(<side_text>)<argX><argY>(<end_text>)
+%   It may be a bit confusing that <arity> doesn't count <end_text>,
+%   but since it is for internal use, the naming can be a little more
+%   fuzzy. This function behaves as if:
+%     <body'> = <body><if end_text: tail{end_text}><closing>
+\algocf@longdef\algocf@newcmdsides#1#2#3#4#5{%
+	\expandafter\def\csname#1\endcsname{%
+		\@ifnextchar({\csname algocf@#1strip\endcsname}{\csname algocf@#1strip\endcsname()}%
+	}%
+	\expandafter\algocf@longdef\csname algocf@#1strip\endcsname(##1){\csname algocf@#1main\endcsname{##1}}%
+	\algocf@newcommand{algocf@#1main}[#2]{#3\@ifnextchar({\csname algocf@#1end\endcsname}{#4#5}}%
+	\expandafter\algocf@longdef\csname algocf@#1end\endcsname(##1){#4{##1}\strut\par}%
+}%
+%
+% definition of commands which can be redefined in options of the package.
+%
+\newcounter{AlgoLine}%
+\setcounter{AlgoLine}{0}%
+%
+\newcommand{\algocf@algocfref}{\relax}%
+\newcommand{\listalgorithmcfname}{}%
+\newcommand{\algorithmcfname}{}%
+\@ifundefined{algorithmautorefname}{\newcommand{\algorithmautorefname}{algorithm}}{\renewcommand{\algorithmautorefname}{algorithm}}%
+\newcommand{\algorithmcflinename}{}%
+\newcommand{\algocf@typo}{}%
+\newcommand{\@algocf@procname}{}\newcommand{\procedureautorefname}{}%
+\newcommand{\SetAlgoProcName}[2]{\renewcommand{\@algocf@procname}{#1}\renewcommand{\procedureautorefname}{#2}}%
+\newcommand{\@algocf@funcname}{}\newcommand{\functionautorefname}{}%
+\newcommand{\SetAlgoFuncName}[2]{\renewcommand{\@algocf@funcname}{#1}\renewcommand{\functionautorefname}{#2}}%
+\newcommand{\@algocf@titleofalgoname}{\algorithmcfname}%
+\newcommand{\@algocf@algotitleofalgo}{%
+  \renewcommand{\@algocf@titleofalgoname}{\algorithmcfname}}%
+\newcommand{\@algocf@proctitleofalgo}{%
+  \renewcommand{\@algocf@titleofalgoname}{\algocf@procname}}%
+%
+\newcommand{\algocf@style}{plain}%
+\newcommand{\@ResetCounterIfNeeded}{}%
+\newcommand{\@titleprefix}{}%
+%
+\newcommand{\algocf@numbering}[1]{\newcommand{\algocf@within}{#1}}%
+%
+\newcommand{\defaultsmacros@algo}{\algocf@defaults@shortend}%
+%
+\newcommand{\algocf@list}{loa}%
+\newcommand{\algocf@float}{algocf}%
+%
+\newcommand{\algocf@envname}{algorithm}%
+\newcommand{\algocf@listofalgorithms}{listofalgorithms}%
+%
+%
+%% redefine chapter so that it adds a vspace in the loa as the original does for lof and lot
+% \let\algocf@original@chapter=\chapter%
+% \def\chapter{\expandafter\addtocontents{loa}{\protect\addvspace{10\p@}}\algocf@original@chapter}%
+%
+% bug correction with hyperref submitted by Hubert Meier
+\begingroup\expandafter\expandafter\expandafter\endgroup 
+\expandafter\ifx\csname @chapter\endcsname\relax\else 
+% \let\algocf@original@chapter=\chapter% 
+% \def\chapter{\addtocontents{loa}{\protect\addvspace{10\p@}}\algocf@original@chapter}% 
+\let\algocf@original@chapter=\@chapter%
+\@ifclassloaded{krantz}{%
+\def\@chapter[#1][#2]#3{\algocf@original@chapter[#1][#2]{#3}\addtocontents{loa}{\protect\addvspace{10\p@}}}% 
+}{%
+\def\@chapter[#1]#2{\algocf@original@chapter[#1]{#2}\addtocontents{loa}{\protect\addvspace{10\p@}}}% 
+}%
+\fi
+%
+%% if@restonecol is defined in article and book but some other classes don't define it and we need it, so we do
+\ifx\if@restonecol\relax\else\newif\if@restonecol\fi%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%% Declaration of Options %%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+\RequirePackage{ifthen}%
+%
+\newboolean{algocf@displayblockmarkers}\setboolean{algocf@displayblockmarkers}{false}%
+\DeclareOption{displayblockmarkers}{%
+  \setboolean{algocf@displayblockmarkers}{true}%
+}%
+\newboolean{algocf@displaygroupmarkers}\setboolean{algocf@displaygroupmarkers}{false}
+\DeclareOption{displaygroupmarkers}{%
+  \setboolean{algocf@displaygroupmarkers}{true}%
+}%
+%
+\newboolean{algocf@nokwfunc}\setboolean{algocf@nokwfunc}{false}%
+\DeclareOption{nokwfunc}{%
+  \setboolean{algocf@nokwfunc}{true}%
+}%
+%
+\newboolean{algocf@oldcommands}\setboolean{algocf@oldcommands}{false}%
+\DeclareOption{oldcommands}{%
+  \setboolean{algocf@oldcommands}{true}%
+}%
+%
+\newboolean{algocf@leftlinenumber}\setboolean{algocf@leftlinenumber}{true}%
+\newcommand{\setLeftLinesNumbers}{\setboolean{algocf@leftlinenumber}{true}}%
+\newcommand{\setRightLinesNumbers}{\setboolean{algocf@leftlinenumber}{false}}%
+\DeclareOption{rightnl}{%
+  \setRightLinesNumbers%
+}%
+%
+\newboolean{algocf@endfloat}\setboolean{algocf@endfloat}{false}%
+\DeclareOption{endfloat}{%
+  \setboolean{algocf@endfloat}{true}%
+  \newcounter{postalgo}\setcounter{postalgo}{0}%
+}%
+%
+\newboolean{algocf@procnumbered}\setboolean{algocf@procnumbered}{false}%
+\DeclareOption{procnumbered}{%
+  \setboolean{algocf@procnumbered}{true}%
+}%
+%
+\DeclareOption{algo2e}{%
+  \renewcommand{\algocf@envname}{algorithm2e}%
+  \renewcommand{\algocf@listofalgorithms}{listofalgorithmes}%
+}%
+%
+\newboolean{algocf@slide}\setboolean{algocf@slide}{false}%
+\DeclareOption{slide}{%
+  \setboolean{algocf@slide}{true}%
+}%
+%
+\newboolean{algocf@figurecaption}\setboolean{algocf@figurecaption}{false}%
+\DeclareOption{figure}{%
+\renewcommand{\algocf@list}{lof}%
+\renewcommand{\algocf@float}{figure}%
+\AtBeginDocument{\@ifpackageloaded{caption}{\setboolean{algocf@figurecaption}{true}}{}}%
+}%
+%
+\newboolean{algocf@optonelanguage}\setboolean{algocf@optonelanguage}{false}%
+\DeclareOption{onelanguage}{\setboolean{algocf@optonelanguage}{true}}%
+%
+\newcommand{\algocf@languagechoosen}{english}%
+\newboolean{algocf@localkw@english}\setboolean{algocf@localkw@english}{true}%
+\DeclareOption{englishkw}{%
+\setboolean{algocf@localkw@english}{true}%
+}%
+%
+\DeclareOption{english}{%
+\renewcommand{\listalgorithmcfname}{List of Algorithms}%
+\renewcommand{\algorithmcfname}{Algorithm}%
+\renewcommand{\algorithmautorefname}{algorithm}%
+\renewcommand{\algorithmcflinename}{line}%
+\renewcommand{\algocf@typo}{}%
+\renewcommand{\@algocf@procname}{Procedure}%
+\renewcommand{\@algocf@funcname}{Function}%
+\renewcommand{\procedureautorefname}{procedure}%
+\renewcommand{\functionautorefname}{function}%
+\renewcommand{\algocf@languagechoosen}{english}%
+}%
+%
+%----
+\newboolean{algocf@localkw@french}\setboolean{algocf@localkw@french}{false}%
+\DeclareOption{frenchkw}{%
+\setboolean{algocf@localkw@french}{true}%
+}%
+%
+\DeclareOption{french}{%
+\renewcommand{\listalgorithmcfname}{Liste des Algorithmes}%
+\renewcommand{\algorithmcfname}{Algorithme}%
+\renewcommand{\algorithmautorefname}{algorithme}%
+\renewcommand{\algorithmcflinename}{ligne}%
+\renewcommand{\algocf@typo}{\ }%
+\renewcommand{\@algocf@procname}{Proc\'edure}%
+\renewcommand{\@algocf@funcname}{Fonction}%
+\renewcommand{\procedureautorefname}{proc\'edure}%
+\renewcommand{\functionautorefname}{fonction}%
+\renewcommand{\algocf@languagechoosen}{french}%
+}%
+%
+%----
+\newboolean{algocf@localkw@czech}\setboolean{algocf@localkw@czech}{false}%
+\DeclareOption{czechkw}{%
+\setboolean{algocf@localkw@czech}{true}%
+}%
+%
+\DeclareOption{czech}{%
+\renewcommand{\listalgorithmcfname}{Seznam algoritm\r{u}}%
+\renewcommand{\algorithmcfname}{Algoritmus}%
+\renewcommand{\algorithmautorefname}{\algorithmcfname}%
+\renewcommand{\algorithmcflinename}{Radek}%
+\renewcommand{\algocf@typo}{}%
+\renewcommand{\@algocf@procname}{Procedura}%
+\renewcommand{\@algocf@funcname}{Funkce}%
+\renewcommand{\procedureautorefname}{\@algocf@procname}%
+\renewcommand{\functionautorefname}{\@algocf@funcname}%
+\renewcommand{\algocf@languagechoosen}{czech}%
+}%
+%
+%----
+\newboolean{algocf@localkw@german}\setboolean{algocf@localkw@german}{false}%
+\DeclareOption{germankw}{%
+\setboolean{algocf@localkw@german}{true}%
+}%
+%
+\DeclareOption{german}{%
+\renewcommand{\listalgorithmcfname}{Liste der Algorithmen}%
+\renewcommand{\algorithmcfname}{Algorithmus}%
+\renewcommand{\algorithmautorefname}{\algorithmcfname}%
+\renewcommand{\algorithmcflinename}{Zeile}%
+\renewcommand{\algocf@typo}{}%
+\renewcommand{\@algocf@procname}{Prozedur}%
+\renewcommand{\@algocf@funcname}{Funktion}%
+\renewcommand{\procedureautorefname}{\@algocf@procname}%
+\renewcommand{\functionautorefname}{\@algocf@funcname}%
+\renewcommand{\algocf@languagechoosen}{german}%
+}%
+%
+%----
+\DeclareOption{ngermankw}{%
+\setboolean{algocf@localkw@german}{true}%
+}%
+%
+\DeclareOption{ngerman}{%
+\renewcommand{\listalgorithmcfname}{Liste der Algorithmen}%
+\renewcommand{\algorithmcfname}{Algorithmus}%
+\renewcommand{\algorithmautorefname}{\algorithmcfname}%
+\renewcommand{\algorithmcflinename}{Zeile}%
+\renewcommand{\algocf@typo}{\ }%
+\renewcommand{\@algocf@procname}{Prozedur}%
+\renewcommand{\@algocf@funcname}{Funktion}%
+\renewcommand{\procedureautorefname}{\@algocf@procname}%
+\renewcommand{\functionautorefname}{\@algocf@funcname}%
+\renewcommand{\algocf@languagechoosen}{german}%
+}%
+%
+%----
+\newboolean{algocf@localkw@portuguese}\setboolean{algocf@localkw@portuguese}{false}%
+\DeclareOption{portuguesekw}{%
+\setboolean{algocf@localkw@portuguese}{true}%
+}%
+%
+\DeclareOption{portuguese}{%
+\renewcommand{\listalgorithmcfname}{Lista de Algoritmos}%
+\renewcommand{\algorithmcfname}{Algoritmo}%
+\renewcommand{\algorithmautorefname}{algoritmo}%
+\renewcommand{\algorithmcflinename}{linha}%
+\renewcommand{\algocf@typo}{}%
+\renewcommand{\@algocf@procname}{Procedimento}%
+\renewcommand{\@algocf@funcname}{Fun\c{c}\~{a}o}%
+\renewcommand{\procedureautorefname}{procedimento}%
+\renewcommand{\functionautorefname}{fun\c{c}\~{a}o}%
+\renewcommand{\algocf@languagechoosen}{portuguese}%
+}%
+%
+%----
+\newboolean{algocf@localkw@italiano}\setboolean{algocf@localkw@italiano}{false}%
+\DeclareOption{italianokw}{%
+\setboolean{algocf@localkw@italiano}{true}%
+}%
+%
+\DeclareOption{italiano}{%
+\renewcommand{\listalgorithmcfname}{Elenco degli algoritmi}%
+\renewcommand{\algorithmcfname}{Algoritmo}%
+\renewcommand{\algorithmautorefname}{algoritmo}%
+\renewcommand{\algorithmcflinename}{riga}%
+\renewcommand{\algocf@typo}{}%
+\renewcommand{\@algocf@procname}{Procedura}%
+\renewcommand{\@algocf@funcname}{Funzione}%
+\renewcommand{\procedureautorefname}{procedura}%
+\renewcommand{\functionautorefname}{funzione}%
+\renewcommand{\algocf@languagechoosen}{italiano}%
+}%
+%----
+\newboolean{algocf@localkw@spanish}\setboolean{algocf@localkw@spanish}{false}%
+\DeclareOption{spanishkw}{%
+\setboolean{algocf@localkw@spanish}{true}%
+}%
+%
+\DeclareOption{spanish}{%
+\renewcommand{\listalgorithmcfname}{\'Indice de algoritmos}%
+\renewcommand{\algorithmcfname}{Algoritmo}%
+\renewcommand{\algorithmautorefname}{algoritmo}%
+\renewcommand{\algorithmcflinename}{l\'inea}%
+\renewcommand{\algocf@typo}{}%
+\renewcommand{\@algocf@procname}{Procedimiento}%
+\renewcommand{\@algocf@funcname}{Funci\'on}%
+\renewcommand{\procedureautorefname}{procedimiento}%
+\renewcommand{\functionautorefname}{funci\'on}%
+\renewcommand{\algocf@languagechoosen}{spanish}%
+}%
+%----
+\newboolean{algocf@localkw@slovak}\setboolean{algocf@localkw@slovak}{false}%
+\DeclareOption{slovakkw}{%
+\setboolean{algocf@localkw@slovak}{true}%
+}%
+%
+\DeclareOption{slovak}{%
+\renewcommand{\listalgorithmcfname}{Zoznam algoritmov}%
+\renewcommand{\algorithmcfname}{Algoritmus}%
+\renewcommand{\algorithmautorefname}{\algorithmcfname}%
+\renewcommand{\algorithmcflinename}{Radek}%
+\renewcommand{\algocf@typo}{}%
+\renewcommand{\@algocf@procname}{Proced\'{u}ra}%
+\renewcommand{\@algocf@funcname}{Funkcia}%
+\renewcommand{\procedureautorefname}{\@algocf@procname}%
+\renewcommand{\functionautorefname}{\@algocf@funcname}%
+\renewcommand{\algocf@languagechoosen}{slovak}%
+}%
+%
+%----
+\newboolean{algocf@localkw@croatian}\setboolean{algocf@localkw@croatian}{false}%
+\DeclareOption{croatiankw}{%
+\setboolean{algocf@localkw@croatian}{true}%
+}%
+%
+\DeclareOption{croatian}{%
+\renewcommand{\listalgorithmcfname}{Popis algoritama}%
+\renewcommand{\algorithmcfname}{Algoritam}%
+\renewcommand{\algorithmautorefname}{\algorithmcfname}%
+\renewcommand{\algorithmcflinename}{redak}%
+\renewcommand{\algocf@typo}{}%
+\renewcommand{\@algocf@procname}{Procedura}%
+\renewcommand{\@algocf@funcname}{Funkcija}%
+\renewcommand{\procedureautorefname}{\@algocf@procname}%
+\renewcommand{\functionautorefname}{\@algocf@funcname}%
+\renewcommand{\algocf@languagechoosen}{croatian}%
+}%
+%%% adding 'turkish' option customization
+%
+%----
+\newboolean{algocf@localkw@turkish}\setboolean{algocf@localkw@turkish}{false}%
+\DeclareOption{turkishkw}{%
+\setboolean{algocf@localkw@turkish}{true}%
+}%
+\DeclareOption{turkish}{%
+\renewcommand{\listalgorithmcfname}{Algoritma Listesi}%
+\renewcommand{\algorithmcfname}{Algoritma}%
+\renewcommand{\algorithmautorefname}{algoritma}%
+\renewcommand{\algorithmcflinename}{\c{c}izgi}%
+\renewcommand{\algocf@typo}{}%
+\renewcommand{\@algocf@procname}{Prosed\"ur}%
+\renewcommand{\@algocf@funcname}{Fonksiyon}%
+\renewcommand{\procedureautorefname}{prosed\"ur}%
+\renewcommand{\functionautorefname}{fonksiyon}%
+\renewcommand{\algocf@languagechoosen}{turkish}%
+}%
+%
+% OPTIONs plain, boxed, ruled, algoruled & boxruled
+%
+\newcommand{\algocf@style@plain}{\renewcommand{\algocf@style}{plain}}%
+\newcommand{\algocf@style@boxed}{\renewcommand{\algocf@style}{boxed}}%
+\newcommand{\algocf@style@ruled}{\renewcommand{\algocf@style}{ruled}}%
+\newcommand{\algocf@style@algoruled}{\renewcommand{\algocf@style}{algoruled}}%
+\newcommand{\algocf@style@boxruled}{\renewcommand{\algocf@style}{boxruled}}%
+\newcommand{\algocf@style@tworuled}{\renewcommand{\algocf@style}{tworuled}}%
+\newcommand{\algocf@style@plainruled}{\renewcommand{\algocf@style}{plainruled}}%
+\newcommand{\RestyleAlgo}[1]{\csname algocf@style@#1\endcsname}%
+\DeclareOption{plain}{\algocf@style@plain}%
+\DeclareOption{plainruled}{\algocf@style@plainruled}%
+\DeclareOption{boxed}{\algocf@style@boxed}%
+\DeclareOption{ruled}{\algocf@style@ruled}%
+\DeclareOption{algoruled}{\algocf@style@algoruled}%
+\DeclareOption{boxruled}{\algocf@style@boxruled}%
+\DeclareOption{tworuled}{\algocf@style@tworuled}%
+%
+% OPTIONs algopart,algochapter & algosection
+%
+\DeclareOption{algopart}{\algocf@numbering{part}}%       %algo part numbered
+\DeclareOption{algochapter}{\algocf@numbering{chapter}}% %algo chapter numbered
+\DeclareOption{algosection}{\algocf@numbering{section}}% %algo section numbered
+%
+% OPTIONs resetcount & noresetcount
+%
+\DeclareOption{resetcount}{\renewcommand{\@ResetCounterIfNeeded}{\setcounter{AlgoLine}{0}}}%
+\DeclareOption{noresetcount}{\renewcommand{\@ResetCounterIfNeeded}{}}%
+%
+% OPTIONs algorithm hanging for long lines
+%
+\newlength{\algocf@hangindent}\setlength{\algocf@hangindent}{.5em}
+\newcommand{\SetAlgoHangIndent}[1]{\setlength{\algocf@hangindent}{#1}}
+%
+\newboolean{algocf@hanging}\setboolean{algocf@hanging}{true}% hanging is handle by default
+\newboolean{algocf@hanginginout}\setboolean{algocf@hanginginout}{false}% inout are managed as previously: hanging set by inout keywords
+\newboolean{algocf@hangingcomment}\setboolean{algocf@hangingcomment}{false}% comment that are not side comment are indented accordingly to comment mark, not as normal text
+\newcommand{\algocf@everyparnl}{\relax}%
+\newcommand{\algocf@everyparhanging}{\hangafter=1\hangindent=\algocf@hangindent\relax}%
+\newcommand{\algocf@everypar}{\algocf@everyparnl\algocf@everyparhanging}%
+\newcommand{\algocf@seteverypar}{%
+  \ifthenelse{\boolean{algocf@hanging}}{\everypar{\algocf@everypar}}{\relax}%
+}%
+%
+\newcommand{\algocf@seteveryparnl}[1]{\renewcommand{\algocf@everyparnl}{#1}\everypar{\algocf@everypar}}%
+\newcommand{\algocf@seteveryparhanging}[1]{%
+\let\algocf@oldeveryparhanging=\algocf@everyparhanging%
+\renewcommand{\algocf@everyparhanging}{#1}\everypar{\algocf@everypar}%
+}%
+\newcommand{\algocf@reseteveryparhanging}{%
+\let\algocf@everyparhanging=\algocf@oldeveryparhanging%
+\everypar{\algocf@everypar}%
+}%
+\DeclareOption{hanginginout}{\setboolean{algocf@hanginginout}{true}}%
+\DeclareOption{hangingcomment}{\setboolean{algocf@hangingcomment}{true}}%
+\DeclareOption{noalgohanging}{%
+  \setboolean{algocf@hanginginout}{false}%
+  \setboolean{algocf@hangingcomment}{false}%
+  \setboolean{algocf@hanging}{false}%
+}%
+%\newcommand{
+%
+%
+% OPTION linesnumbered
+%
+\newboolean{algocf@linesnumbered}\setboolean{algocf@linesnumbered}{false}%
+\newcommand{\algocf@linesnumbered}{\relax}%
+\DeclareOption{linesnumbered}{%
+  \setboolean{algocf@linesnumbered}{true}%
+  \renewcommand{\algocf@linesnumbered}{\algocf@seteveryparnl{\nl}}%
+}%
+%
+% OPTION linesnumberedhidden
+%
+\DeclareOption{linesnumberedhidden}{%
+  \setboolean{algocf@linesnumbered}{true}%
+  \renewcommand{\algocf@linesnumbered}{\algocf@seteveryparnl{\stepcounter{AlgoLine}}}%
+}%
+%
+% OPTION commentsnumbered inoutnumbered
+%
+\newboolean{algocf@commentsnumbered}\setboolean{algocf@commentsnumbered}{false}%
+\DeclareOption{commentsnumbered}{\setboolean{algocf@commentsnumbered}{true}}%
+\newboolean{algocf@inoutnumbered}\setboolean{algocf@inoutnumbered}{false}%
+\DeclareOption{inoutnumbered}{\setboolean{algocf@inoutnumbered}{true}}%
+%
+% OPTIONs titlenumbered & titlenotnumbered
+%
+\DeclareOption{titlenumbered}{%
+  \renewcommand{\@titleprefix}{%
+    \refstepcounter{\algocf@float}%
+    \AlTitleSty{\AlTitleFnt\@algocf@titleofalgoname\ \expandafter\csname the\algocf@float\endcsname\algocf@typo: }%
+  }%
+}%
+%
+\DeclareOption{titlenotnumbered}{\renewcommand{\@titleprefix}{%
+    \AlTitleSty{\AlTitleFnt\@algocf@titleofalgoname\algocf@typo: }}%
+}%
+%
+% OPTIONs algonl
+% line numbered with the counter of the algorithm
+%
+\DeclareOption{algonl}{\renewcommand{\theAlgoLine}{\expandafter\csname the\algocf@float\endcsname.\arabic{AlgoLine}}}%
+%
+% OPTIONs lined, vlined & noline
+%
+\DeclareOption{lined}{\AtBeginDocument{\SetAlgoLined}}%   \SetAlgoLined (default)
+\DeclareOption{vlined}{\AtBeginDocument{\SetAlgoVlined}}% \SetAlgoVlined
+\DeclareOption{noline}{\AtBeginDocument{\SetAlgoNoLine}}%\SetAlgoNoLine
+%
+% OPTIONs longend, shotend & noend
+%
+\DeclareOption{longend}{\AtBeginDocument{\SetAlgoLongEnd}}%  \SetAlgoLongEnd
+\DeclareOption{shortend}{\AtBeginDocument{\SetAlgoShortEnd}}%\SetAlgoShortEnd
+\DeclareOption{noend}{\AtBeginDocument{\SetAlgoNoEnd}}%      \SetAlgoNoEnd
+%
+\DeclareOption{nosemicolon}{\AtBeginDocument{\DontPrintSemicolon}}%      \SetAlgoNoEnd
+%
+% OPTION dotoc
+%
+\newboolean{algocf@dotocloa}\setboolean{algocf@dotocloa}{false}%
+\DeclareOption{dotocloa}{%
+  \setboolean{algocf@dotocloa}{true}%
+}
+%
+% OPTION comments
+%
+\newboolean{algocf@optfillcomment}\setboolean{algocf@optfillcomment}{true}%
+\DeclareOption{nofillcomment}{%
+  \setboolean{algocf@optfillcomment}{false}%
+}%
+\DeclareOption{fillcomment}{%
+  \setboolean{algocf@optfillcomment}{true}%
+}%
+%
+% OPTION sidecommments
+%
+\newboolean{algocf@scleft}\setboolean{algocf@scleft}{false}%
+\DeclareOption{scleft}{%
+  \setboolean{algocf@scleft}{true}%
+}%
+\DeclareOption{sright}{% default
+  \setboolean{algocf@scleft}{false}%
+}%
+%
+% OPTION norelsize
+%
+\newboolean{algocf@norelsize}\setboolean{algocf@norelsize}{false}%
+\DeclareOption{norelsize}{%
+  \setboolean{algocf@norelsize}{true}%
+}%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%% Execution of Options %%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+\ExecuteOptions{english,plain,resetcount,titlenotnumbered,lined,shortend}%
+%
+\ProcessOptions%
+%
+\@algocf@algotitleofalgo% fix name for \TitleOfAlgo to \algorithmcfname by default
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%% Package Loading %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+%
+\RequirePackage{ifoddpage}%
+\RequirePackage{xspace}%
+%
+\ifthenelse{\boolean{algocf@endfloat}}{%
+  \RequirePackage{endfloat}%
+}{\relax}%
+%
+\ifthenelse{\boolean{algocf@norelsize}}{%
+  \newcommand{\relsize}[1]{\scriptsize}%
+}{%
+  \RequirePackage{relsize}%
+}%
+%
+\ifthenelse{\boolean{algocf@slide}}{\RequirePackage{color}}{}%
+%
+%
+\AtEndOfPackage{%
+  \ifthenelse{\boolean{algocf@dotocloa}}{%
+    \renewcommand{\listofalgorithms}{\tocfile{\listalgorithmcfname}{loa}}%
+  }{\relax}%
+}%
+%
+% if loa in toc required, load tocbibind package if not already done.
+\ifthenelse{\boolean{algocf@dotocloa}}{%
+  \ifx\@tocextra\undefined%
+  \RequirePackage{tocbibind}%
+  \fi%
+}{\relax}%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Main Part %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+\newcommand{\algocf@name}{algorithm2e}%
+\newcommand{\algocf@date}{July 18 2017}%
+\newcommand{\algocf@version}{Release 5.2}%
+\newcommand{\algocf@id}{\algocf@version\space -- \algocf@date\space --}%
+% \typeout{********************************************************^^JPackage `\algocf@name'\space\algocf@id^^J%
+%          - algorithm2e-announce@lirmm.fr  mailing list for announcement about releases^^J%
+%          - algorithm2e-discussion@lirmm.fr mailing list for discussion about package^^J%
+%          subscribe by emailing sympa@lirmm.fr with 'subscribe <list> <firstname name>'^^J%
+%          - Author: Christophe Fiorio (christophe.fiorio@umontpellier.fr)^^J********************************************************}%
+%%
+%%
+%%
+%%
+%%
+%%
+%%%% hyperref compatibility tricks: Hyperref package defines H counters from
+   % standard counters (i.e \theHpage from \thepage) and check some particular
+   % counters of some packages, unfortunately it doesn't do the same for
+   % algorithm2e package but act as Hcounter was defined. To avoid errors we
+   % defined \theHalgocf ourself
+%%%%
+%
+\@ifundefined{theHalgocf}{\def\theHalgocf{\thealgocf}}{}%
+\@ifundefined{theHAlgoLine}{\def\theHAlgoLine{\theAlgoLine}}{}%
+\@ifundefined{theHalgocfproc}{\def\theHalgocfproc{0}}{}%
+\@ifundefined{theHalgocffunc}{\def\theHalgocffunc{0}}{}%
+\@ifundefined{toclevel@algocf}{\def\toclevel@algocf{0}}{}%
+%
+% autoref from hyperref needs an autorefname, so we give it.
+\def\AlgoLineautorefname{\algorithmcflinename}%
+\def\algocfautorefname{\algorithmautorefname}%
+\def\algocfprocautorefname{\procedureautorefname}%
+\def\algocffuncautorefname{\functionautorefname}%
+%%
+%%
+%%
+\newcommand{\@defaultskiptotal}{0.5em}%
+\newskip\skiptotal\skiptotal=0.5em%
+\newskip\skiplinenumber\skiplinenumber=\hsize\advance\skiplinenumber by-\skiptotal%
+\newskip\skiprule%
+\newskip\skiphlne%
+\newskip\skiptext%
+\newskip\skiplength%
+\newskip\algomargin%
+\newskip\skipalgocfslide\skipalgocfslide=1em%
+\newdimen\algowidth%
+\newdimen\inoutsize%
+\newdimen\inoutindent%
+\newdimen\interspacetitleruled\setlength{\interspacetitleruled}{2pt}%
+\newdimen\interspacealgoruled\setlength{\interspacealgoruled}{2pt}%
+\newdimen\interspacetitleboxruled\setlength{\interspacetitleboxruled}{2\lineskip}%
+%
+\newcommand{\@algoskip}{\smallskip}%
+\newcommand{\SetAlgoSkip}[1]{\renewcommand{\@algoskip}{\csname#1\endcsname}}%
+\newcommand{\@algoinsideskip}{\relax}%
+\newcommand{\SetAlgoInsideSkip}[1]{\renewcommand{\@algoinsideskip}{\csname#1\endcsname}}%
+%
+% ruledwidth
+%
+\newlength{\algocf@ruledwidth}\setlength{\algocf@ruledwidth}{\linewidth}%
+\newboolean{algocf@customruledwidth}\setboolean{algocf@customruledwidth}{false}%
+\newcommand{\SetCustomAlgoRuledWidth}[1]{%
+  \setboolean{algocf@customruledwidth}{true}%
+  \ifthenelse{\boolean{algocf@customruledwidth}}{\setlength{\algocf@ruledwidth}{#1}}{\relax}%
+}%
+%
+\newsavebox{\algocf@inoutbox}%
+\newsavebox{\algocf@inputbox}%
+%%
+%%
+\newcommand{\arg@e}{}%
+\newcommand{\arg@space}{\ }%
+\newcommand{\BlankLine}{\vskip 1ex}%
+%%
+\newcommand{\vespace}{1ex}%
+\newcommand{\SetInd}[2]{%
+\skiprule=#1%
+\skiptext=#2%
+\skiplength=\skiptext\advance\skiplength by \skiprule\advance\skiplength by 0.4pt}%
+\SetInd{0.5em}{1em}
+\algomargin=\leftskip\advance\algomargin by \parindent%
+\newcommand{\IncMargin}[1]{\advance\algomargin by #1}%
+\newcommand{\DecMargin}[1]{\advance\algomargin by -#1}%
+\newcommand{\SetNlSkip}[1]{%
+  \renewcommand{\@defaultskiptotal}{#1}%
+  \setlength{\skiptotal}{#1}}%
+%%
+\newskip\AlCapSkip\AlCapSkip=0ex%
+\newskip\AlCapHSkip\AlCapSkip=0ex%
+\newcommand{\SetAlCapSkip}[1]{\setlength{\AlCapSkip}{#1}}%
+\newcommand{\SetAlCapHSkip}[1]{\setlength{\AlCapHSkip}{#1}}%
+\SetAlCapHSkip{.5\algomargin}%
+%%
+%%
+\newskip\algoskipindent
+\newcommand{\algocf@adjustskipindent}{%
+  \algoskipindent=\skiprule%
+  \advance\algoskipindent by \skiptext\advance\algoskipindent by 0.4pt}
+\algocf@adjustskipindent%
+%
+\newcommand{\Indentp}[1]{\advance\leftskip by #1}%
+\newcommand{\Indp}{\algocf@adjustskipindent\advance\leftskip by \algoskipindent}
+\newcommand{\Indpp}{\advance\leftskip by 0.5em}%
+\newcommand{\Indm}{\algocf@adjustskipindent\advance\leftskip by -\algoskipindent}
+\newcommand{\Indmm}{\advance\leftskip by -0.5em}%
+%
+%%
+%%
+%% Line Numbering
+%%
+%%
+% number line style
+\newcommand{\algocf@nlrelsize}{-2}\newcommand{\SetAlgoNlRelativeSize}[1]{\renewcommand{\algocf@nlrelsize}{#1}}%
+\newcommand{\NlSty}[1]{\textnormal{\textbf{\relsize{\algocf@nlrelsize}#1}}}% default definition
+\newcommand{\SetNlSty}[3]{\renewcommand{\NlSty}[1]{\textnormal{\csname#1\endcsname{\relsize{\algocf@nlrelsize}#2##1#3}}}}%
+%
+% nl definitions
+%
+\newsavebox{\algocf@nlbox}%
+\newcommand{\algocf@printnl}[1]{%
+  \ifthenelse{\boolean{algocf@leftlinenumber}}{%
+    \skiplinenumber=\skiptotal\advance\skiplinenumber by\leftskip%
+    \strut\raisebox{0pt}{\llap{\NlSty{#1}\kern\skiplinenumber}}\ignorespaces%
+  }{%
+    \sbox\algocf@nlbox{\NlSty{#1}}%
+    \skiplinenumber=\hsize\advance\skiplinenumber by-\leftskip\advance\skiplinenumber by-\skiptext%
+    \advance\skiplinenumber by\algomargin\advance\skiplinenumber by.3em\advance\skiplinenumber by-\wd\algocf@nlbox%
+    % to handle particular case of until: printnl is after 'until' keyword has been writen, so we need to substract length of this keyword
+    \advance\skiplinenumber by-\algocf@skipuntil%
+    \strut\raisebox{0pt}{\rlap{\kern\skiplinenumber\NlSty{#1\ignorespaces}}}\ignorespaces%
+  }%
+}%
+\newcommand{\algocf@nl@sethref}[1]{%
+  \renewcommand{\theHAlgoLine}{\thealgocfproc.#1}%
+  \hyper@refstepcounter{AlgoLine}\gdef\@currentlabel{#1}%
+}%
+\newcommand{\nl}{%
+  \@ifundefined{hyper@refstepcounter}{% if not hyperref then do a simple refstepcounter
+    \refstepcounter{AlgoLine}\gdef\@currentlabel{\theAlgoLine}%
+  }{% else if hyperref, do the anchor so 2 lines in two differents algorithms cannot have the same href
+    \stepcounter{AlgoLine}\algocf@nl@sethref{\theAlgoLine}%
+  }% now we can do the line numbering
+  \algocf@printnl{\theAlgoLine}%
+}%
+%
+\newcommand{\nllabel}[1]{\label{#1}}%
+%
+\newcommand{\enl}{%
+  \@ifundefined{hyper@refstepcounter}{% if not hyperref then do a simple refstepcounter
+    \refstepcounter{AlgoLine}\gdef\@currentlabel{\theAlgoLine}%
+  }{% else if hyperref, do the anchor so 2 lines in two differents algorithms cannot have the same href
+    \stepcounter{AlgoLine}\algocf@nl@sethref{\theAlgoLine}%
+  }% now we can do the line numbering
+  \skiplinenumber=\hsize\advance\skiplinenumber by-\leftskip%
+  \strut\raisebox{0pt}{\rlap{\kern\skiplinenumber\strut\NlSty{\theAlgoLine}}}\ignorespaces%
+}%
+%% nlset
+\newcommand{\nlset}[1]{%
+  \@ifundefined{hyper@refstepcounter}{\protected@edef\@currentlabel{#1}}{\algocf@nl@sethref{#1}}\algocf@printnl{#1}%
+}%
+%
+%% lnl definitions
+\newcommand{\lnl}[1]{\nl\label{#1}\ignorespaces}%
+%
+%% lnlset
+\newcommand{\lnlset}[2]{\nlset{#2}\label{#1}}%
+%
+% set char put at end of each line
+%
+\newcommand{\algocf@endline}{\string;}
+\newcommand{\SetEndCharOfAlgoLine}[1]{\renewcommand{\algocf@endline}{#1}}
+%
+% end of line definition
+%
+\newcommand{\@endalgocfline}{\algocf@endline}% default definition: printsemicolon
+\newcommand{\DontPrintSemicolon}{\renewcommand{\@endalgocfline}{\relax}}%
+\newcommand{\PrintSemicolon}{\renewcommand{\@endalgocfline}{\algocf@endline}}%
+\newcommand{\@endalgoln}{\@endalgocfline\hfill\strut\par}%
+%
+% line numbering
+%
+\newcommand{\LinesNumbered}{\setboolean{algocf@linesnumbered}{true}\renewcommand{\algocf@linesnumbered}{\algocf@seteveryparnl{\nl}}}%
+\newcommand{\LinesNotNumbered}{%
+  \setboolean{algocf@linesnumbered}{false}%
+  \renewcommand{\algocf@linesnumbered}{\relax}%
+}%
+%
+\newcommand{\LinesNumberedHidden}{%
+  \setboolean{algocf@linesnumbered}{true}\renewcommand{\algocf@linesnumbered}{\algocf@seteveryparnl{\stepcounter{AlgoLine}}}}%
+\newcommand{\ShowLn}{\nlset{\theAlgoLine}\ignorespaces}% display the line number on this line (without labelling)
+\newcommand{\ShowLnLabel}[1]{\lnlset{#1}{\theAlgoLine}\ignorespaces}% display the line number and label this line
+%
+%%
+%
+%%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% Styling text commands
+%
+\newcommand{\AlFnt}{\relax}% default definition
+\newcommand{\SetAlFnt}[1]{\renewcommand{\AlFnt}{#1}}%
+\newcommand{\AlTitleFnt}{\relax}% default definition
+\newcommand{\SetAlTitleFnt}[1]{\renewcommand{\AlTitleFnt}{#1}}%
+%
+\newcommand{\AlCapFnt}{\relax}% default definition
+\newcommand{\SetAlCapFnt}[1]{\renewcommand{\AlCapFnt}{#1}}%
+\newcommand{\AlCapNameFnt}{\relax}% default definition
+\newcommand{\SetAlCapNameFnt}[1]{\renewcommand{\AlCapNameFnt}{#1}}%
+%
+\newcommand{\ProcFnt}{\relax}% default definition
+\newcommand{\SetProcFnt}[1]{\renewcommand{\ProcFnt}{#1}}%
+\newcommand{\ProcNameFnt}{\relax}% default definition
+\newcommand{\SetProcNameFnt}[1]{\renewcommand{\ProcNameFnt}{#1}}%
+\newcommand{\ProcArgFnt}{\relax}% default definition
+\newcommand{\SetProcArgFnt}[1]{\renewcommand{\ProcArgFnt}{#1}}%
+%
+\newcommand{\AlTitleSty}[1]{\textbf{#1}\unskip}% default definition
+\newcommand{\SetAlTitleSty}[1]{\renewcommand{\AlTitleSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\AlCapSty}[1]{\textnormal{\textbf{#1}}\unskip}% default definition
+\newcommand{\SetAlCapSty}[1]{\renewcommand{\AlCapSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\AlCapNameSty}[1]{\textnormal{#1}\unskip}% default definition
+\newcommand{\SetAlCapNameSty}[1]{\renewcommand{\AlCapNameSty}[1]{\textnormal{\csname #1\endcsname{##1}}\unskip}}%
+%
+\newcommand{\ProcSty}[1]{\AlCapSty{#1}}%
+\newcommand{\SetProcSty}[1]{\renewcommand{\ProcSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\ProcNameSty}[1]{\AlCapNameSty{#1}}%
+\newcommand{\SetProcNameSty}[1]{\renewcommand{\ProcNameSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\ProcArgSty}[1]{\AlCapNameSty{#1}}%
+\newcommand{\SetProcArgSty}[1]{\renewcommand{\ProcArgSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+%
+\newcommand{\KwSty}[1]{\textnormal{\textbf{#1}}\unskip}% default definition
+\newcommand{\SetKwSty}[1]{\renewcommand{\KwSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\ArgSty}[1]{\textnormal{\emph{#1}}\unskip}%\SetArgSty{emph}
+\newcommand{\SetArgSty}[1]{\renewcommand{\ArgSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\FuncArgSty}[1]{\textnormal{\emph{#1}}\unskip}%\SetFuncArgSty{emph}
+\newcommand{\SetFuncArgSty}[1]{\renewcommand{\FuncArgSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\FuncSty}[1]{\textnormal{\texttt{#1}}\unskip}%\SetFuncSty{texttt}
+\newcommand{\SetFuncSty}[1]{\renewcommand{\FuncSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\ProgSty}[1]{\textnormal{\emph{#1}}\unskip}%\SetProgSty{emphg}
+\newcommand{\SetProgSty}[1]{\renewcommand{\ArgSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\DataSty}[1]{\textnormal{\textsf{#1}}\unskip}%%\SetDataSty{textsf}
+\newcommand{\SetDataSty}[1]{\renewcommand{\DataSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\CommentSty}[1]{\textnormal{\texttt{#1}}\unskip}%%\SetDataSty{texttt}
+\newcommand{\SetCommentSty}[1]{\renewcommand{\CommentSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+\newcommand{\TitleSty}[1]{#1\unskip}%\SetTitleSty{}{}
+\newcommand{\SetTitleSty}[2]{\renewcommand{\TitleSty}[1]{%
+\csname#1\endcsname{\csname#2\endcsname##1}}\unskip}%
+\newcommand{\BlockMarkersSty}[1]{\KwSty{#1}}%
+\newcommand{\SetBlockMarkersSty}[1]{\renewcommand{\BlockMarkersSty}[1]{\textnormal{\csname#1\endcsname{##1}}\unskip}}%
+%
+%%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% Block basic commands
+%
+\newcommand{\algocf@push}[1]{\advance\skiptotal by #1\moveright #1}%
+\newcommand{\algocf@pop}[1]{\advance\skiptotal by -#1}%
+\newcommand{\algocf@addskiptotal}{%
+    \advance\hsize by -\skiplength%
+}% \skiplength=skiptext+0.4 pt that is the width of \vrule
+\newcommand{\algocf@subskiptotal}{%
+    \advance\hsize by \skiplength%
+}% \skiplength=skiptext+0.4 pt that is the width of \vrule
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%%
+%% group of instructions definition
+%
+\skiphlne=.8ex%
+\newcommand{\SetVlineSkip}[1]{\skiphlne=#1}%
+\newcommand{\algocf@bblock}{\BlockMarkersSty{begin}}%
+\newcommand{\algocf@eblock}{\BlockMarkersSty{end}}%
+\newcommand{\AlgoDisplayBlockMarkers}{\setboolean{algocf@displayblockmarkers}{true}}%
+\newcommand{\AlgoDontDisplayBlockMarkers}{\setboolean{algocf@displayblockmarkers}{false}}%
+\newcommand{\AlgoDisplayGroupMarkers}{\setboolean{algocf@displaygroupmarkers}{true}}%
+\newcommand{\AlgoDontDisplayGroupMarkers}{\setboolean{algocf@displaygroupmarkers}{false}}%
+\newcommand{\algocf@bblockcode}{%
+  \ifthenelse{\boolean{algocf@displayblockmarkers}}{\algocf@bblock\par}{\relax}%
+}%
+\newcommand{\algocf@eblockcode}{%
+  \ifthenelse{\boolean{algocf@displayblockmarkers}}{\algocf@eblock\par}{\relax}%
+}%
+\newcommand{\algocf@bgroupcode}{%
+  \ifthenelse{\boolean{algocf@displaygroupmarkers}}{\algocf@bblock}{\relax}%
+}%
+\newcommand{\algocf@egroupcode}{%
+  \ifthenelse{\boolean{algocf@displaygroupmarkers}}{\algocf@eblock}{\relax}%
+}%
+\newcommand{\SetAlgoBlockMarkers}[2]{%
+  \ifArgumentEmpty{#1}{%
+    \renewcommand{\algocf@bblock}{\relax}%
+  }{%
+    \renewcommand{\algocf@bblock}{\BlockMarkersSty{#1}}%
+  }% begin marker set
+  \ifArgumentEmpty{#2}{%
+    \renewcommand{\algocf@eblock}{\relax}%
+  }{%
+    \renewcommand{\algocf@eblock}{\BlockMarkersSty{#2}}%
+  }% end marker set
+}
+%
+%%%%%%%%% block with a vertical line end by a little horizontal line
+\newcommand{\algocf@Vline}[1]{%     no vskip in between boxes but a strut to separate them, 
+  \strut\par\nointerlineskip% then interblock space stay the same whatever is inside it
+  \algocf@push{\skiprule}%        move to the right before the vertical rule
+  \hbox{\vrule%
+    \vtop{\algocf@push{\skiptext}%move the right after the rule
+      \vtop{\algocf@addskiptotal #1}\Hlne}}\vskip\skiphlne% inside the block
+  \algocf@pop{\skiprule}%\algocf@subskiptotal% restore indentation
+  \nointerlineskip}% no vskip after
+%
+%%%%%%%%% block with a vertical line
+\newcommand{\algocf@Vsline}[1]{%    no vskip in between boxes but a strut to separate them, 
+  \strut\par\nointerlineskip% then interblock space stay the same whatever is inside it
+  \algocf@bblockcode%
+  \algocf@push{\skiprule}%        move to the right before the vertical rule
+  \hbox{\vrule%               the vertical rule
+    \vtop{\algocf@push{\skiptext}%move the right after the rule
+      \vtop{\algocf@addskiptotal #1}}}% inside the block
+  \algocf@pop{\skiprule}% restore indentation
+  \algocf@eblockcode%
+}
+%
+\newcommand{\algocf@Hlne}{\hrule height 0.4pt depth 0pt width .5em}%
+%
+%%%%%%%%%  block without line
+\newcommand{\algocf@Noline}[1]{%    no vskip in between boxes but a strut to separate them, 
+  \strut\par\nointerlineskip% then interblock space stay the same whatever is inside it
+  \algocf@bblockcode%
+  \algocf@push{\skiprule}%
+  \hbox{%
+    \vtop{\algocf@push{\skiptext}%
+      \vtop{\algocf@addskiptotal #1}}}% inside the block
+  \algocf@pop{\skiprule}%\algocf@subskiptotal%
+  \algocf@eblockcode%
+  % \nointerlineskip% no vskip after
+}%
+%%%%%%%%%
+%
+%% default=NoLine
+%
+\newcommand{\algocf@group}[1]{\algocf@Noline{#1}}% group: set of instruction depending from another (ex: then part of the If)
+\newcommand{\algocf@@@eblock}[2]{#1\ifArgumentEmpty{#2}{\relax}{\KwSty{\@algocf@endoption{#2}}\strut\par}}% block: group with a end keyword.
+\newcommand{\algocf@@@block}[3]{#1\ifArgumentEmpty{#2}{\ifArgumentEmpty{#3}{\relax}{ #3\relax}}{\KwSty{\@algocf@endoption{#2}}\ifArgumentEmpty{#3}{\relax}{ #3}\strut\par}}% block: group with a end keyword.
+\newcommand{\algocf@@block}[3]{\algocf@@@block{#1}{#2}{#3}}% block: group with a end keyword.
+\newcommand{\algocf@block}[3]{\algocf@@block{#1}{#2}{#3}}% command that will be used and redefined accordingly to noend option
+%\newcommand{\algocf@nblock}[3]{\algocf@@block{#1}{#2}{#3}}% command that will be used and redefined accordingly to noend option
+\newcommand{\algocf@setBlock}{%
+  \ifthenelse{\boolean{algocf@optnoend}}{%     if no end option
+    \renewcommand{\algocf@block}[3]{\algocf@group{##1}}%     block will be a group
+  }{%                                          else
+    \renewcommand{\algocf@block}[3]{\algocf@@block{##1}{##2}{##3}}% block stays a block
+  }%
+}%
+%
+\newcommand{\Hlne}{}% little hrizontal line ending a block in vline mode
+%
+\newcommand{\@algocf@endoption}[1]{#1}%
+\newboolean{algocf@optnoend}\setboolean{algocf@optnoend}{false}%
+%
+\newcommand{\SetAlgoLongEnd}{%%%%%%%%%%%%%%%%%%%%%%%%% Long End
+  \setboolean{algocf@optnoend}{false}%
+  \renewcommand{\@algocf@endoption}[1]{##1}%
+  \algocf@setBlock}%
+%
+\newcommand{\SetAlgoShortEnd}{%%%%%%%%%%%%%%%%%%%%%%%% ShortEnd
+  \setboolean{algocf@optnoend}{false}%
+  \renewcommand{\@algocf@endoption}[1]{\@firstword##1 \@nil}%
+  \algocf@setBlock}%
+%
+\newcommand{\SetAlgoNoEnd}{%%%%%%%%%%%%%%%%%%%%%%%%%%% NoEnd
+  \setboolean{algocf@optnoend}{true}%
+  \renewcommand{\@algocf@endoption}[1]{}%
+  \algocf@setBlock}%
+%
+\newboolean{algocf@optAlgoNoLine}\setboolean{algocf@optAlgoNoLine}{false}
+\newcommand{\SetAlgoNoLine}{%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Noline
+\setboolean{algocf@optAlgoNoLine}{true}%
+\renewcommand{\algocf@@block}[2]{\algocf@@@block{\algocf@Noline{##1}}{##2}}%
+\renewcommand{\algocf@group}[1]{\algocf@Noline{##1}}%
+\renewcommand{\Hlne}{}}%
+%
+\newcommand{\SetAlgoVlined}{%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Vline
+\setboolean{algocf@optAlgoNoLine}{false}%
+\renewcommand{\algocf@@block}[2]{\algocf@Vline{##1}}%
+\renewcommand{\algocf@group}[1]{\algocf@Vsline{##1}}%\ifthenelse{\boolean{algocf@optnoend}}{\relax}{\strut\ignorespaces}}%
+\renewcommand{\Hlne}{\algocf@Hlne}}%
+%
+\newcommand{\SetAlgoLined}{%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Line
+\setboolean{algocf@optAlgoNoLine}{false}%
+\renewcommand{\algocf@@block}[2]{\algocf@@@block{\strut\algocf@Vsline{##1}}{##2}}% no skip after a block so garantie at least one line
+\renewcommand{\algocf@group}[1]{\algocf@Vsline{##1}}%\ifthenelse{\boolean{algocf@optnoend}}{\relax}{\strut\ignorespaces}}%
+\renewcommand{\Hlne}{}}%
+%
+\newcommand{\SetNothing}{%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Noline
+\setboolean{algocf@optAlgoNoLine}{true}%
+\renewcommand{\algocf@@block}[2]{\algocf@Noline{##1}\par}%
+%\long
+\renewcommand{\algocf@group}[1]{\algocf@Noline{##1}}%
+\renewcommand{\Hlne}{}}%
+%
+%%
+%%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% ``Input:'''s like command 
+%
+%%%
+% text staying at the right of the longer keyword of KwInOut commands 
+% (text of KwInOut commands are all vertically aligned)
+%
+\newcommand{\algocf@newinout}{\par\parindent=\inoutindent}% to put right indentation after a \\ in the KwInOut
+\newcommand{\SetKwInOut}[2]{%
+  \sbox\algocf@inoutbox{\KwSty{#2\algocf@typo:}}%
+  \expandafter\ifx\csname InOutSizeDefined\endcsname\relax% if first time used
+    \newcommand\InOutSizeDefined{}\setlength{\inoutsize}{\wd\algocf@inoutbox}%
+    \sbox\algocf@inoutbox{\parbox[t]{\inoutsize}{\KwSty{#2\algocf@typo\hfill:}}~}\setlength{\inoutindent}{\wd\algocf@inoutbox}%
+  \else% else keep the larger dimension
+    \ifdim\wd\algocf@inoutbox>\inoutsize%
+    \setlength{\inoutsize}{\wd\algocf@inoutbox}%
+    \sbox\algocf@inoutbox{\parbox[t]{\inoutsize}{\KwSty{#2\algocf@typo\hfill:}}~}\setlength{\inoutindent}{\wd\algocf@inoutbox}%
+    \fi%
+  \fi% the dimension of the box is now defined.
+  \algocf@newcommand{#1}[1]{%
+    \ifthenelse{\boolean{algocf@hanginginout}}{\relax}{\algocf@seteveryparhanging{\relax}}%
+    \ifthenelse{\boolean{algocf@inoutnumbered}}{\relax}{\algocf@seteveryparnl{\relax}}%
+%     {\let\\\algocf@newinout\hangindent=\wd\algocf@inoutbox\hangafter=1\parbox[t]{\inoutsize}{\KwSty{#2}\algocf@typo\hfill:}~##1\par}%
+    {\let\\\algocf@newinout\hangindent=\inoutindent\hangafter=1\parbox[t]{\inoutsize}{\KwSty{#2\algocf@typo\hfill:}}~##1\par}%
+    \algocf@linesnumbered% reset the numbering of the lines
+    \ifthenelse{\boolean{algocf@hanginginout}}{\relax}{\algocf@reseteveryparhanging}%
+  }}%
+%
+%% allow to ajust the skip size of InOut
+%%
+\newcommand{\ResetInOut}[1]{%
+  \sbox\algocf@inoutbox{\hbox{\KwSty{#1\algocf@typo:}\ }}%
+  \setlength{\inoutsize}{\wd\algocf@inoutbox}%
+  }%
+%
+% 
+%%%
+% text staying at the right of the keyword.
+%
+\newcommand{\algocf@newinput}{\par\parindent=\wd\algocf@inputbox}% to put right indentation after a \\ in the KwInput
+\newcommand{\SetKwInput}[2]{%
+  \algocf@newcommand{#1}[1]{%
+    \sbox\algocf@inputbox{\hbox{\KwSty{#2\algocf@typo:} }}%
+    \ifthenelse{\boolean{algocf@hanginginout}}{\relax}{\algocf@seteveryparhanging{\relax}}%
+    \ifthenelse{\boolean{algocf@inoutnumbered}}{\relax}{\algocf@seteveryparnl{\relax}}%
+    {\let\\\algocf@newinput\hangindent=\wd\algocf@inputbox\hangafter=1\unhbox\algocf@inputbox##1\par}%
+    \algocf@linesnumbered% reset the numbering of the lines
+    \ifthenelse{\boolean{algocf@hanginginout}}{\relax}{\algocf@reseteveryparhanging}%
+  }}%
+\newcommand{\SetKwData}[2]{%
+  \algocf@newcommand{@#1}[1]{\DataSty{#2(}\ArgSty{##1}\DataSty{)}}%
+  \algocf@newcommand{#1}{%
+    \@ifnextchar\bgroup{\csname @#1\endcsname}{\DataSty{#2}\xspace}}%
+  }%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+% tallent:
+%
+% Add following macros:
+%   \SetKwHangingKw:  [kw] ------------   <= hanging determined by [kw]
+%                          ------------
+% Should act like a combination of \SetKwInput and \SetKw.
+% Based on \SetKwInput:
+%   - remove ':' at end of keyword
+%   - do not reset numbering
+%   - use separate savebox
+\newsavebox{\algocf@hangingbox}
+\newcommand{\algocf@newhanging}{\par\parindent=\wd\algocf@hangingbox}% to put right indentation after a \\ in the KwInput
+\newcommand{\SetKwHangingKw}[2]{%
+  \algocf@newcommand{#1}[1]{%
+    \sbox\algocf@hangingbox{\hbox{\KwSty{#2}\algocf@typo\ }}%
+    {\let\\\algocf@newhanging\hangindent=\wd\algocf@hangingbox\hangafter=1\unhbox\algocf@hangingbox##1\;}%
+  }%
+}%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% Comments macros
+%
+%%%%
+% comment in the text, first argument is the name of the macro, second is
+% the text put before the comment, third is the text put at the end of the
+% comment.
+%
+% first side comment justification
+\newcommand{\SetSideCommentLeft}{\setboolean{algocf@scleft}{true}}%
+\newcommand{\SetSideCommentRight}{\setboolean{algocf@scleft}{false}}%
+\newcommand{\SetNoFillComment}{\setboolean{algocf@optfillcomment}{false}}%
+\newcommand{\SetFillComment}{\setboolean{algocf@optfillcomment}{true}}%
+%
+% next comment and side comment
+%
+\newcommand{\algocf@endmarkcomment}{\relax}%
+\newcommand{\algocf@fillcomment}{%
+  \ifthenelse{\boolean{algocf@optfillcomment}}{\hfill}{\relax}}%
+%
+\newcommand{\algocf@startcomment}{%
+  \hangindent=\wd\algocf@inputbox\hangafter=1\usebox\algocf@inputbox}%
+\newcommand{\algocf@endcomment}{\algocf@fillcomment\algocf@endmarkcomment\ignorespaces\par}%
+\newcommand{\algocf@endstartcomment}{\algocf@endcomment\algocf@startcomment\ignorespaces}%
+%
+\newboolean{algocf@sidecomment}%
+\newboolean{algocf@altsidecomment}\setboolean{algocf@altsidecomment}{false}%
+\newcommand{\algocf@scpar}{\ifthenelse{\boolean{algocf@altsidecomment}}{\relax}{\par}}%
+\newcommand{\algocf@sclfill}{\ifthenelse{\boolean{algocf@scleft}}{\algocf@fillcomment}{\relax}}%
+\newcommand{\algocf@scrfill}{\ifthenelse{\boolean{algocf@scleft}}{\relax}{\hfill}}%
+\newcommand{\algocf@startsidecomment}{\usebox\algocf@inputbox}%
+\newcommand{\algocf@endsidecomment}{\algocf@endmarkcomment\algocf@scpar}%
+\newcommand{\algocf@endstartsidecomment}{%
+  \algocf@sclfill\algocf@endsidecomment%
+  \algocf@scrfill\algocf@startsidecomment\ignorespaces}%
+%
+\newcommand{\SetKwComment}[3]{%
+  \algocf@newcommand{#1}{\@ifstar{\csname algocf@#1@star\endcsname}{\csname algocf@#1\endcsname}}%
+	\algocf@newcommand{algocf@#1}[1]{%
+      \ifthenelse{\boolean{algocf@hangingcomment}}{\relax}{\algocf@seteveryparhanging{\relax}}%
+      \sbox\algocf@inputbox{\CommentSty{\hbox{#2}}}%
+      \ifthenelse{\boolean{algocf@commentsnumbered}}{\relax}{\algocf@seteveryparnl{\relax}}%
+      {\renewcommand{\algocf@endmarkcomment}{#3}%
+        \let\\\algocf@endstartcomment%
+        \algocf@startcomment\CommentSty{%
+          \strut\ignorespaces##1\strut\algocf@fillcomment#3}\par}%
+      \algocf@linesnumbered% reset the numbering of the lines
+      \ifthenelse{\boolean{algocf@hangingcomment}}{\relax}{\algocf@reseteveryparhanging}%
+    }%
+  %%% side comment definitions
+	\algocf@newcommand{algocf@#1@star}[2][]{%
+      \ifArgumentEmpty{##1}\relax{% TODO: Is this even necessary, with all those \ifx's?
+        \ifthenelse{\boolean{algocf@scleft}}{\setboolean{algocf@sidecomment}{true}}{\setboolean{algocf@sidecomment}{false}}%
+        \ifx##1h\setboolean{algocf@altsidecomment}{true}\SetSideCommentLeft\fi%
+        \ifx##1f\setboolean{algocf@altsidecomment}{true}\SetSideCommentRight\fi%
+        \ifx##1l\setboolean{algocf@altsidecomment}{false}\SetSideCommentLeft\fi%
+        \ifx##1r\setboolean{algocf@altsidecomment}{false}\SetSideCommentRight\fi%
+      }%
+      \sbox\algocf@inputbox{\CommentSty{\hbox{#2}}}%
+      \ifthenelse{\boolean{algocf@commentsnumbered}}{\relax}{\algocf@seteveryparnl{\relax}}%
+      {%
+        \renewcommand{\algocf@endmarkcomment}{#3}%
+        \let\\\algocf@endstartsidecomment%
+        % here is the comment
+        \ifthenelse{\boolean{algocf@altsidecomment}}{\relax}{\@endalgocfline\ }%
+        \algocf@scrfill\algocf@startsidecomment\CommentSty{%
+          \strut\ignorespaces##2\strut\algocf@sclfill#3}\algocf@scpar%
+      }%
+      \algocf@linesnumbered% reset the numbering of the lines
+      \ifArgumentEmpty{##1}\relax{%
+        \ifthenelse{\boolean{algocf@sidecomment}}{\setboolean{algocf@scleft}{true}}{\setboolean{algocf@scleft}{false}}%
+        \setboolean{algocf@altsidecomment}{false}%
+      }%
+	}%
+  }%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% KwProg
+%
+\newcommand{\SetKwProg}[4]{%\SetKwProg{Env}{Title}{is}{end} 
+	\algocf@newcmdside@koif{#1}{\KwSty{#2}\ifArgumentEmpty{#2}\relax{\ }\ProgSty{##2}\KwSty{#3}\ifArgumentEmpty{##1}\relax{ ##1}\algocf@block{##3}{#4}{##4}}%
+    \algocf@newcommand{l#1}{\@ifstar{\csname algocf@l#1star\endcsname}{\csname algocf@l#1\endcsname}}%
+	\algocf@newcmdside{algocf@l#1}{3}{\KwSty{#2} \ProgSty{##2}\KwSty{#3}\algocf@bgroupcode\ ##3\algocf@egroupcode\@endalgocfline\ifArgumentEmpty{##1}\relax\ {##1}\strut\par}%
+	\algocf@newcmdside{algocf@l#1star}{3}{\KwSty{#2} \ProgSty{##2}\KwSty{#3}\algocf@bgroupcode\ ##3\algocf@egroupcode}%
+}%
+%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% KwProgFn
+%
+\newcommand{\SetKwProgFn}[4]{%\SetKwProg{Env}{Title}{is}{end} 
+	\algocf@newcmdsides{#1}{4}{\KwSty{#2}\ifArgumentEmpty{#2}\relax{\ }{##2}\KwSty{#3}{##3}\ifArgumentEmpty{##1}\relax{ ##1}\algocf@group{##4}\KwSty{#4}}{\relax}{\strut\par}%
+    \algocf@newcommand{l#1}{\@ifstar{\csname algocf@l#1star\endcsname}{\csname algocf@l#1\endcsname}}%
+	\algocf@newcmdside{algocf@l#1}{3}{\KwSty{#2} \ProgSty{##2}\KwSty{#3}\algocf@bgroupcode\ ##3\algocf@egroupcode\@endalgocfline\ifArgumentEmpty{##1}\relax\ {##1}\strut\par}%
+	\algocf@newcmdside{algocf@l#1star}{3}{\KwSty{#2} \ProgSty{##2}\KwSty{#3}\algocf@bgroupcode\ ##3\algocf@egroupcode}%
+}%
+%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% Kw
+%
+\newcommand{\SetKw}[2]{%
+	\algocf@newcommand{@#1}[1]{\KwSty{#2} \ArgSty{##1}}
+	\algocf@newcommand{#1}{\@ifnextchar\bgroup{\csname @#1\endcsname}{\KwSty{#2}\xspace}}%
+}%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% KwFunction
+%
+\newcommand{\SetKwFunction}[2]{%
+%%% use of gdef since newcommand doesn't manage to define the macro when SetKwFunction is used in \algocf@caption@proc
+  \expandafter\gdef\csname @#1\endcsname##1{\FuncSty{#2(}\FuncArgSty{##1}\FuncSty{)}}%
+  \expandafter\gdef\csname#1\endcsname{%
+    \@ifnextchar\bgroup{\csname @#1\endcsname}{\FuncSty{#2}\xspace}}%
+}%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% KwTab
+%
+\newcommand{\SetKwArray}[2]{%
+%%% use of gdef since newcommand doesn't manage to define the macro when SetKwFunction is used in \algocf@caption@proc
+  \expandafter\gdef\csname @#1\endcsname##1{\DataSty{#2[}\ArgSty{##1}\DataSty{]}}%
+  \expandafter\gdef\csname#1\endcsname{%
+    \@ifnextchar\bgroup{\csname @#1\endcsname}{\DataSty{#2}\xspace}}%
+}%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% KwBlock
+%
+\newcommand{\SetKwBlock}[3]{%
+	\algocf@newcmdside@kobe{#1}%
+    {\KwSty{#2}\ifArgumentEmpty{##1}\relax{ ##1}\algocf@block{##2}{#3}{##3}\par}%
+}%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% condition typo
+%
+\newcommand{\algocf@scond}{\ }
+\newcommand{\algocf@econd}{\ }
+\newcommand{\algocf@ucond}{}
+\newcommand{\SetStartEndCondition}[3]{%
+  \renewcommand{\algocf@scond}{#1}\renewcommand{\algocf@econd}{#2}\renewcommand{\algocf@ucond}{#3}}%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% For Switch
+%
+\newcommand{\SetKwSwitch}[9]{% #1=\Switch #2=\Case #3=\Other #4=switch #5=do #6=case #7=otherwise #8=endcase #9=endsw
+%	\algocf@newcmdside{#1}{3}%
+	\algocf@newcmdside@koif{#1}%
+		{\KwSty{#4}\algocf@scond\ArgSty{##2}\algocf@econd\KwSty{#5}\ifArgumentEmpty{##1}\relax{ ##1}\algocf@block{##3}{#9} {##4\relax}}%
+%%%% Case
+	\algocf@newcmdside@koif{#2}{\KwSty{#6}\algocf@scond\ArgSty{##2}\algocf@econd\KwSty{#5}\ifArgumentEmpty{##1}\relax{ ##1}\algocf@block{##3}{#8}{##4\relax}}%
+    %uCase
+	\algocf@newcmdside{u#2}{3}{\KwSty{#6}\algocf@scond\ArgSty{##2}\algocf@econd\KwSty{#5}\ifArgumentEmpty{##1}\relax{ ##1}\algocf@group{##3}}%
+    %lcase
+    \algocf@newcommand{l#2}{\@ifstar{\csname algocf@l#2star\endcsname}{\csname algocf@l#2\endcsname}}%
+	\algocf@newcmdside{algocf@l#2}{3}{\KwSty{#6}\algocf@scond\ArgSty{##2}\algocf@econd\KwSty{#5}\algocf@bgroupcode\ ##3\@endalgocfline\algocf@egroupcode\ifArgumentEmpty{##1}\ \relax{ ##1}\strut\par}%
+	\algocf@newcmdside{algocf@l#2star}{3}{\KwSty{#6}\algocf@scond\ArgSty{##2}\algocf@econd\KwSty{#5}\algocf@bgroupcode\ ##3\algocf@egroupcode}%
+%%%% Other 
+	\algocf@newcmdside@kobe{#3}{\KwSty{#7} \KwSty{#5}\ifArgumentEmpty{##1}\relax{ ##1}\algocf@block{##2}{#8}{##3\relax}}%
+    %lOther
+    \algocf@newcommand{l#3}{\@ifstar{\csname algocf@l#3star\endcsname}{\csname algocf@l#3\endcsname}}%
+	\algocf@newcmdside{algocf@l#3}{2}{\KwSty{#7} \KwSty{#5}\algocf@bgroupcode\ ##2\@endalgocfline\algocf@egroupcode\ifArgumentEmpty{##1}\relax\ {##1}\strut\par}%
+	\algocf@newcmdside{algocf@l#3star}{2}{\KwSty{#7} \KwSty{#5}\algocf@bgroupcode\ ##2\algocf@egroupcode}%
+    %uOther
+	\algocf@newcmdside{u#3}{3}{\KwSty{#7} \KwSty{#5}\ifArgumentEmpty{##1}\relax{ ##1}\algocf@group{##2}}%
+}%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% If macros
+%
+\newcommand{\SetKwIF}[8]{% #1=\If #2=\ElseIf #3=\Else #4=if #5=then #6=elseif #7=else #8=endif
+% 
+% common text
+	\algocf@newcommand{#1@ifthen}[1]{\KwSty{#4}\algocf@scond\ArgSty{##1}\algocf@econd\KwSty{#5}}%
+	\algocf@newcommand{#1@endif} [2]{\algocf@block{##1}{#8}{##2}}%
+	\algocf@newcommand{#1@noend} [1]{\algocf@group{##1}}%
+	\algocf@newcommand{#1@else}  [1]{\algocf@group{##1}\KwSty{#7}}%
+	\algocf@newcommand{#2@elseif}[1]{\KwSty{#6}\algocf@scond\ArgSty{##1}\algocf@econd\KwSty{#5}}%
+	\algocf@newcommand{#3@else}     {\KwSty{#7}}%
+%%%% If then { } endif
+	\algocf@newcmdside@koif{#1}{\csname #1@ifthen\endcsname{##2}\ifArgumentEmpty{##1}\relax{ ##1}\csname #1@endif\endcsname{##3}{##4\relax}}%
+%%%% If then {} else {} endif
+    % first command to handle optional side comment of else (so just after first braces)
+ 	\algocf@newcmdside@kobe{algocf@e#1thenelse}{\ifArgumentEmpty{##1}\relax{ ##1}\csname #1@endif\endcsname{##2}{##3}}%
+    % the definition of if-then-else command using command above 
+	\algocf@newcmdside{e#1}{3}{\csname #1@ifthen\endcsname{##2}\ifArgumentEmpty{##1}\relax{ ##1}\csname #1@else\endcsname{##3}\csname algocf@e#1thenelse\endcsname}%
+    %%% leif
+    \algocf@newcommand{le#1}{\@ifstar{\csname algocf@le#1star\endcsname}{\csname algocf@le#1\endcsname}}%
+    \algocf@newcmdside{algocf@le#1}{4}{\csname #1@ifthen\endcsname{##2} \algocf@bgroupcode##3 \csname #3@else\endcsname\ ##4\@endalgocfline\ \algocf@egroupcode\ifArgumentEmpty{##1}\relax{##1}\strut\par}%
+    \algocf@newcmdside{algocf@le#1star}{4}{\csname #1@ifthen\endcsname{##2} \algocf@bgroupcode##3 \csname #3@else\endcsname\ ##4\algocf@egroupcode}%
+%%%% If then 
+	% \algocf@newcmdside{l#1}{3}{\csname #1@ifthen\endcsname{##2}\algocf@bgroupcode\
+    % ##3\@endalgocfline\algocf@egroupcode\ifArgumentEmpty{##1}\relax\ {##1}\strut\par}%
+    \algocf@newcommand{l#1}{\@ifstar{\csname algocf@l#1star\endcsname}{\csname algocf@l#1\endcsname}}%
+	\algocf@newcmdside{algocf@l#1}{3}{\csname #1@ifthen\endcsname{##2}\algocf@bgroupcode\ ##3\@endalgocfline\algocf@egroupcode\ifArgumentEmpty{##1}\relax\ {##1}\strut\par}%
+	\algocf@newcmdside{algocf@l#1star}{3}{\csname #1@ifthen\endcsname{##2}\algocf@bgroupcode\ ##3\algocf@egroupcode}%
+	\algocf@newcmdside{u#1}{3}{\csname #1@ifthen\endcsname{##2}\ifArgumentEmpty{##1}\relax{ ##1}\csname #1@noend\endcsname{##3}}%
+%%%% ElseIf {} endif
+	\algocf@newcmdside@koif{#2}{\csname #2@elseif\endcsname{##2}\relax\ifArgumentEmpty{##1}\relax{ ##1}\csname #1@endif\endcsname{##3}{##4\relax}}%
+%%%% ElseIf
+    \algocf@newcommand{l#2}{\@ifstar{\csname algocf@l#2star\endcsname}{\csname algocf@l#2\endcsname}}%
+	\algocf@newcmdside{algocf@l#2}{3}{\csname #2@elseif\endcsname{##2}\algocf@bgroupcode\ ##3\@endalgocfline\algocf@egroupcode\ifArgumentEmpty{##1}\relax\ {##1}\strut\par}%
+	\algocf@newcmdside{algocf@l#2star}{3}{\csname #2@elseif\endcsname{##2}\algocf@bgroupcode\ ##3\algocf@egroupcode}%
+	\algocf@newcmdside{u#2}{3}{\csname #2@elseif\endcsname{##2}\relax\ifArgumentEmpty{##1}\relax{##1}\csname #1@noend\endcsname{##3}}%
+%%%% Else {} endif
+	\algocf@newcmdside@kobe{#3}{\csname #3@else\endcsname\ifArgumentEmpty{##1}\relax\ ##1\csname #1@endif\endcsname{##2}{##3\relax}}%
+%%%% Else 
+    \algocf@newcommand{l#3}{\@ifstar{\csname algocf@l#3star\endcsname}{\csname algocf@l#3\endcsname}}%
+	\algocf@newcmdside{algocf@l#3}{2}{\csname #3@else\endcsname\algocf@bgroupcode\ ##2\@endalgocfline\algocf@egroupcode\ifArgumentEmpty{##1}\relax\ {##1}\strut\par}%
+	\algocf@newcmdside{algocf@l#3star}{2}{\csname #3@else\endcsname\algocf@bgroupcode\ ##2\algocf@egroupcode}%
+	\algocf@newcmdside{u#3}{2}{\csname #3@else\endcsname\ifArgumentEmpty{##1}\relax\ {##1\relax}\csname #1@noend\endcsname{##2}}%
+}% 
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% For macros
+%
+\newcommand{\SetKwFor}[4]{%
+	\algocf@newcmdside@koif{#1}{\KwSty{#2}\algocf@scond\ArgSty{##2}\algocf@econd\KwSty{#3}\ifArgumentEmpty{##1}\relax{ ##1}\algocf@block{##3}{#4}{##4\relax}}%
+    \algocf@newcommand{l#1}{\@ifstar{\csname algocf@l#1star\endcsname}{\csname algocf@l#1\endcsname}}%
+	\algocf@newcmdside{algocf@l#1}{3}{\KwSty{#2}\algocf@scond\ArgSty{##2}\algocf@econd\KwSty{#3}\algocf@bgroupcode\ ##3\@endalgocfline\algocf@egroupcode\ifArgumentEmpty{##1}\relax\ {##1}\strut\par}%
+	\algocf@newcmdside{algocf@l#1star}{3}{\KwSty{#2}\algocf@scond\ArgSty{##2}\algocf@econd\KwSty{#3}\algocf@bgroupcode\ ##3\algocf@egroupcode}%
+}%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% Repeat macros
+%
+\newsavebox{\algocf@untilbox}% to handle width of until keyword needed to have good skip
+  % for line numbers
+\newskip\algocf@skipuntil
+\newcommand{\SetKwRepeat}[3]{%
+	\algocf@newcmdsides{#1}{3}{%
+      \sbox\algocf@untilbox{\KwSty{#3}\algocf@scond}\algocf@skipuntil=\wd\algocf@untilbox%
+      \KwSty{#2}\ifArgumentEmpty{##1}\relax{##1}\algocf@group{##3}%
+      \KwSty{#3}\algocf@scond% until keyword and start condition typo
+      %\advance\skiptotal by\algocf@skipuntil%
+      \ArgSty{##2}%
+      %\advance\skiptotal by-\algocf@skipuntil%
+      \algocf@ucond%
+      \algocf@skipuntil=0pt% reset counter
+    }{\@endalgocfline}{\strut\par}%
+    \algocf@newcommand{l#1}{\@ifstar{\csname algocf@l#1star\endcsname}{\csname algocf@l#1\endcsname}}%
+	\algocf@newcmdside{algocf@l#1}{3}{\KwSty{#2}\algocf@bgroupcode\ ##3\algocf@egroupcode\ \KwSty{#3}\algocf@scond\ArgSty{##2}\algocf@ucond\@endalgocfline\ifArgumentEmpty{##1}\relax{ ##1}\strut\par}%
+	\algocf@newcmdside{algocf@l#1star}{3}{\KwSty{#2}\algocf@bgroupcode\ ##3\algocf@egroupcode\ \KwSty{#3}\algocf@scond\ArgSty{##2}\algocf@ucond}%
+}%
+%
+% 
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%%%%%%%%%%%%%%%%%%%%        Environments definitions     %%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+%%
+%% Caption management
+%%
+% for the following macros:
+% #1 is given by caption and is equal to fnum@algocf
+% #2 is the text given in argument by the user in the \caption macro
+%
+%%%%% text of caption
+\newcommand{\algocf@captionlayout}[1]{#1}%
+\newcommand{\SetAlgoCaptionLayout}[1]{%
+  \renewcommand{\algocf@captionlayout}[1]{\csname #1\endcsname{##1}}}%
+\newcommand{\algocf@capseparator}{:}%
+\newcommand{\SetAlgoCaptionSeparator}[1]{\renewcommand{\algocf@capseparator}{#1}}%
+\newcommand{\algocf@captiontext}[2]{%
+  \algocf@captionlayout{\AlCapSty{\AlCapFnt #1\algocf@typo\algocf@capseparator}\nobreakspace%
+    \AlCapNameSty{\AlCapNameFnt{}#2\endgraf}}}% text of caption
+%
+%%%%% default caption of algorithm: used if no specific style caption is defined
+\newcommand{\algocf@makecaption}[2]{%
+  \addtolength{\hsize}{\algomargin}%
+  \sbox\@tempboxa{\algocf@captiontext{#1}{#2}}%
+  \ifdim\wd\@tempboxa >\hsize%     % if caption is longer than a line
+    \hskip .5\algomargin%
+    \parbox[t]{\hsize}{\algocf@captiontext{#1}{#2}}% then caption is not centered
+  \else%
+    \global\@minipagefalse%
+    \hbox to\hsize{\hfil\box\@tempboxa\hfil}% else caption is centered
+  \fi%
+  \addtolength{\hsize}{-\algomargin}%
+}%
+%
+\newsavebox\algocf@capbox%
+\newcommand{\algocf@makecaption@plain}[2]{%
+  \global\sbox\algocf@capbox{\algocf@makecaption{#1}{#2}}}%
+\newcommand{\algocf@makecaption@boxed}[2]{%
+  \addtolength{\hsize}{-\algomargin}%
+  \global\sbox\algocf@capbox{\algocf@makecaption{#1}{#2}}%
+  \addtolength{\hsize}{\algomargin}%
+ }%
+%
+\newlength{\algocf@lcaptionbox}%
+\newcommand{\algocf@makecaption@plainruled}[2]{\algocf@makecaption@plain{#1}{#2}}%
+\newcommand{\algocf@makecaption@tworuled}[2]{\algocf@makecaption@ruled{#1}{#2}}%
+\newcommand{\algocf@makecaption@algoruled}[2]{\algocf@makecaption@ruled{#1}{#2}}%
+\newcommand{\algocf@makecaption@boxruled}[2]{\algocf@makecaption@ruled{#1}{#2}}%
+\newcommand{\algocf@makecaption@ruled}[2]{%
+  \global\sbox\algocf@capbox{\hskip\AlCapHSkip% .5\algomargin%
+    \setlength{\algocf@lcaptionbox}{\hsize}\addtolength{\algocf@lcaptionbox}{-\AlCapHSkip}%
+    \parbox[t]{\algocf@lcaptionbox}{\algocf@captiontext{#1}{#2}}}% then caption is not centered
+}%
+%
+\newlength{\algoheightruledefault}\setlength{\algoheightruledefault}{0.8pt}%
+\newlength{\algoheightrule}\setlength{\algoheightrule}{\algoheightruledefault}%
+\newlength{\algotitleheightruledefault}\setlength{\algotitleheightruledefault}{0.8pt}%
+\newlength{\algotitleheightrule}\setlength{\algotitleheightrule}{\algotitleheightruledefault}%
+\newcommand{\algocf@caption@plain}{\vskip\AlCapSkip\box\algocf@capbox}%
+\newcommand{\algocf@caption@plainruled}{\algocf@caption@plain}%
+\newcommand{\algocf@caption@boxed}{\vskip\AlCapSkip\box\algocf@capbox}%
+\newcommand{\algocf@caption@ruled}{\box\algocf@capbox\kern\interspacetitleruled\hrule
+  width\algocf@ruledwidth height\algotitleheightrule depth0pt\kern\interspacealgoruled}%
+\newcommand{\algocf@caption@tworuled}{\box\algocf@capbox\hrule  height0pt depth0pt\kern\interspacealgoruled}%
+\newcommand{\algocf@caption@algoruled}{\algocf@caption@ruled}%
+\newcommand{\algocf@caption@boxruled}{%
+  \hbox{%
+    \vrule%
+    \vbox{%
+      \addtolength{\hsize}{-0.8pt}%
+      \hrule\vskip\interspacetitleboxruled%
+      \hbox to\hsize{\unhbox\algocf@capbox\hfill}\vskip\interspacetitleboxruled%
+      \addtolength{\hsize}{0.8pt}%
+    }% 
+    \vrule%
+  }\nointerlineskip%
+}%
+%
+%
+%%%% set caption for the environment
+\newcommand{\algocf@captionref}{%
+  \renewcommand{\fnum@algocf}[1]{\AlCapSty{\AlCapFnt\algorithmcfname\nobreakspace\algocf@algocfref}}%
+  \addtocounter{algocf}{-1}% \caption do a refstepcounter, so we restore the precedent value
+  \let\old@thealgocf=\thealgocf\renewcommand{\thealgocf}{{\relsize{\algocf@refrelsize}\algocf@algocfref}}%
+  \gdef\@currentlabel{\algocf@algocfref}% let the label use the new ref
+}%
+%
+% Unfortunatly, we also need our own caption to set some specific stuff for special references. But after these
+% settings, we call the original caption.
+%
+\long\def\algocf@caption@algo#1[#2]#3{%
+  \ifthenelse{\equal{\algocf@algocfref}{\relax}}{}{\algocf@captionref}%
+  \@ifundefined{hyper@refstepcounter}{\relax}{% if hyper@refstepcounter undefind, no hyperref, else...
+    \ifthenelse{\equal{\algocf@algocfref}{\relax}}{\renewcommand{\theHalgocf}{\thealgocf}}{% take algocf as Href
+      \renewcommand{\theHalgocf}{\algocf@algocfref}}%else if SetAlgoRefName done, take this name as ref.
+    \hyper@refstepcounter{algocf}%set algocf as category of ref
+  }%
+   \algocf@latexcaption{#1}[{#2}]{{#3}}% call original caption
+}%
+%
+% beamer define is own caption overrinding latex caption!
+% as we need it, we have put here the original definition
+% to handle manual ref, unfortunately we have to add one line to handle algocf@algocfref
+\long\def\algocf@latexcaption#1[#2]#3{% original definition of caption
+  \par%
+  \addcontentsline{\csname ext@#1\endcsname}{#1}%
+  {\protect\numberline{\csname the#1\endcsname}{\ignorespaces #2}}%
+  \begingroup%
+  \@parboxrestore%
+  \if@minipage%
+    \@setminipage%
+  \fi%
+  \normalsize%
+  \@makecaption{\csname fnum@#1\endcsname}{\ignorespaces #3}\par%
+  \endgroup%
+}%
+%
+% \ifx\beamer@makecaption\undefined%
+% \else% beamer detected
+\ifx\@makecaption\undefined%
+\newcommand{\@makecaption}[2]{\relax}%
+\fi%
+%%
+
+%
+% more and more packages redefine \@caption instead of just \@makecaption which makes algorithm2e
+% caption not works since based on standard \@caption. So we force the definition of \@caption to be
+% the standard one (the one from LaTeX) inside algorithm environment.
+%
+% unfortunately, makecaption is called with \ignorespace #3 so 
+% we can't do the @currentlabel definition inside \algocf@captionproctext
+\long\def\algocf@caption@proc#1[#2]#3{%
+  \ifthenelse{\boolean{algocf@nokwfunc}}{\relax}{%
+    \SetKwFunction{\algocf@captname#3@}{\algocf@captname#3@}%
+  }%
+  % we tell hyperref to use algocfproc as category and to take the appropriate ref.
+  \ifthenelse{\boolean{algocf@func}}{\def\@proc@func{algocffunc}}{\def\@proc@func{algocfproc}}%
+  \@ifundefined{hyper@refstepcounter}{\relax}{% if hyper@refstepcounter undefind, no hyperref, else...
+    \ifthenelse{\boolean{algocf@procnumbered}}{% 
+      \expandafter\def\csname theH\@proc@func\endcsname{\thealgocf}%if procnumbered, take \thealgocf as ref
+    }{%
+      \expandafter\def\csname theH\@proc@func\endcsname{\algocf@captname#3@}%else take procedure or function name
+    }%
+    \hyper@refstepcounter{\@proc@func}%
+  }%
+  \ifthenelse{\boolean{algocf@procnumbered}}{\relax}{%
+    \addtocounter{algocf}{-1}% \caption do a refstepcounter, so we restore the precedent value
+    \gdef\@currentlabel{\algocf@captname#3@}% let the label be the name of the function, not the counter
+  }%
+  \ifthenelse{\equal{\algocf@captparam#2@}{\arg@e}}{% if no paramater, we remove the ()
+    \algocf@latexcaption{#1}[\algocf@procname\nobreakspace\algocf@captname#2@]{#3}%
+  }{%                                                 else we give the complete name
+    \algocf@latexcaption{#1}[\algocf@procname\nobreakspace#2]{#3}%
+  }%
+}%
+%%
+%%% setcaption
+\newcommand{\algocf@setcaption}{%
+  \ifthenelse{\boolean{algocf@procenvironment}}{% if proc environment, caption text must be changed
+    \let\algocf@oldcaptiontext=\algocf@captiontext%
+    \renewcommand{\algocf@captiontext}[2]{%
+      \algocf@captionproctext{##1}{##2}%
+    }%
+  }{}%
+  \let\algocf@savecaption=\@caption%
+  \ifthenelse{\boolean{algocf@procenvironment}}{\let\@caption=\algocf@caption@proc}{\let\@caption=\algocf@caption@algo}%
+  \let\algocf@oldmakecaption=\@makecaption%
+  \renewcommand{\@makecaption}[2]{%
+    \expandafter\csname algocf@makecaption@\algocf@style\endcsname{##1}{##2}%
+  }%
+}%
+%
+%%%%% reset caption
+%
+% since we have force the LaTeX caption for algorithm environment, we must go back to the caption
+% used in the text.
+\newcommand{\algocf@resetcaption}{%
+  \ifthenelse{\boolean{algocf@procenvironment}}{% if proc environment
+    \let\thealgocf=\old@thealgocf% restore normal counter printing
+    \let\algocf@captiontext=\algocf@oldcaptiontext% restore normal caption text
+  }{}%
+  \let\@caption=\algocf@savecaption% now restore caption outside algo/proc/func environment
+  \let\@makecaption=\algocf@oldmakecaption% and restore makecaption outside outside algo/proc/func environment
+  \algocf@resetfnum%
+}%
+%
+%%%%% nocaptionofalgo and restorecaptionofalgo --
+\newcommand{\NoCaptionOfAlgo}{%
+  \let\@old@algocf@captiontext=\algocf@captiontext%
+  \renewcommand{\algocf@captiontext}[2]{\AlCapNameSty{\AlCapNameFnt{}##2}}%
+}%
+\newcommand{\RestoreCaptionOfAlgo}{%
+  \let\algocf@captiontext=\@old@algocf@captiontext%
+}%
+%
+% ----------------------  algocf environment
+%
+\newcounter{algocfline}%                    % new counter to make lines numbers be internally 
+\setcounter{algocfline}{0}%                 % different in different algorithms
+\newcounter{algocfproc}% counter to count all algo environment (proc, func), just used by hyperref to avoir "same
+\setcounter{algocfproc}{0}% identifier" error caused by algocf being set to '-' for procedure or function or not
+  % changed if no caption is given.
+%
+\expandafter\ifx\csname algocf@within\endcsname\relax% if \algocf@within doesn't exist
+\newcounter{algocf}%                        % just define a new counter
+\renewcommand{\thealgocf}{\@arabic\c@algocf}% and the way it is printed
+\else%                                     else
+\newcounter{algocf}[\algocf@within]%        % counter is numbered within \algocf@within
+\renewcommand\thealgocf{\csname the\algocf@within\endcsname.\@arabic\c@algocf}%
+\fi%
+%
+\def\fps@algocf{htbp}%        % default
+\def\ftype@algocf{10}%        % float type
+\def\ext@algocf{\algocf@list} % loa by default, lof if figure option used
+\newcommand{\fnum@algocf}{\AlCapSty{\AlCapFnt\algorithmcfname\nobreakspace\thealgocf}}%
+\newcommand{\algocf@resetfnum}{\renewcommand{\fnum@algocf}{\AlCapSty{\AlCapFnt\algorithmcfname\nobreakspace\thealgocf}}}%
+\newenvironment{algocf}%      % float environment for algorithms
+               {\@float{algocf}}%
+               {\end@float}%
+\newenvironment{algocf*}%     % float* environment for algorithms
+               {\@dblfloat{algocf}}%
+               {\end@dblfloat}%
+%
+\def\algocf@seclistalgo{}%
+\ifx\l@chapter\undefined\let\algocf@seclistalgo=\section\else\let\algocf@seclistalgo=\chapter\fi%
+\@ifundefined{if@restonecol}{\newif\if@restonecol}\relax%
+\newcommand\listofalgocfs{%
+     \ifx\algocf@seclistalgo\chapter%
+      \if@twocolumn\@restonecoltrue\onecolumn\else\@restonecolfalse\fi%
+    \fi%
+     \algocf@seclistalgo*{\listalgorithmcfname}%
+       \@mkboth{\MakeUppercase\listalgorithmcfname}%
+               {\MakeUppercase\listalgorithmcfname}%
+     \@starttoc{loa}%
+    \ifx\algocf@seclistalgo\chapter%
+      \if@restonecol\twocolumn\fi%
+    \fi%
+}
+%
+\newcommand*\l@algocf{\@dottedtocline{1}{1em}{2.3em}}% line of the list
+%
+% ----------------------  algorithm environment
+%
+%%%%%%%
+%%
+%% Algorithm environment definition
+%%
+%%%%%%%
+%%
+%
+\newsavebox\algocf@algoframe%
+\def\@algocf@pre@plain{\relax}%  action to be done before printing the algo.
+\def\@algocf@post@plain{\relax}% action to be done after printing the algo.
+\def\@algocf@capt@plain{bottom}% where the caption should be localized.
+\def\@algocf@pre@boxed{\noindent\begin{lrbox}{\algocf@algoframe}}
+\def\@algocf@post@boxed{\end{lrbox}\framebox[\hsize]{\box\algocf@algoframe}\par}%
+\def\@algocf@capt@boxed{under}%
+\def\@algocf@pre@ruled{\hrule width\algocf@ruledwidth height\algoheightrule depth0pt\kern\interspacetitleruled}%
+\def\@algocf@post@ruled{\kern\interspacealgoruled\hrule width\algocf@ruledwidth height\algoheightrule\relax}%
+\def\@algocf@capt@ruled{top}%
+\def\@algocf@pre@algoruled{\hrule width\algocf@ruledwidth height\algoheightrule depth0pt\kern\interspacetitleruled}%
+\def\@algocf@post@algoruled{\kern\interspacealgoruled\hrule width\algocf@ruledwidth height\algoheightrule \relax}%
+\def\@algocf@capt@algoruled{top}%
+\def\@algocf@pre@tworuled{\hrule height\algoheightrule depth0pt\kern\interspacetitleruled}%
+\def\@algocf@post@tworuled{\kern\interspacealgoruled\hrule height\algoheightrule\relax}%
+\def\@algocf@capt@tworuled{top}%
+\def\@algocf@pre@boxruled{\noindent\begin{lrbox}{\algocf@algoframe}}%
+\def\@algocf@post@boxruled{\end{lrbox}\framebox[\hsize]{\box\algocf@algoframe}\par}%
+\def\@algocf@capt@boxruled{above}%
+\def\@algocf@pre@plainruled{\@algocf@pre@ruled}%  action to be done before printing the algo.
+\def\@algocf@post@plainruled{\@algocf@post@ruled\kern\interspacealgoruled}%  action to be done before printing the algo.
+\def\@algocf@capt@plainruled{under}%
+%
+\newcommand{\noalgocaption}{\def\@algocf@capt@ruled{none}}
+%
+%% before algocf environment (not figure environment)
+\newcommand{\@algocf@init@caption}{%
+  \ifthenelse{\boolean{algocf@procenvironment}}{% if we are inside a procedure/function environment
+    \@algocf@proctitleofalgo% set Titleofalgo to Procedure: or Function:
+                            % accordingly to the environment
+    \let\old@thealgocf=\thealgocf\ifthenelse{\boolean{algocf@procnumbered}}{\relax}{%
+      \renewcommand{\thealgocf}{-}}%
+  }{% else inside environment algorithm
+    \@algocf@algotitleofalgo% fix name for \Titleofalgo to \algorithmcfname
+  }%
+  \algocf@setcaption%       set caption to our caption style
+}%
+%
+\newcommand{\@algofloatboxreset}{\@setminipage}
+\newcommand{\@algocf@init}{%
+  \refstepcounter{algocfline}%
+  \stepcounter{algocfproc}%to have a different counter for each environment and being abble to make the difference
+    %between href of algoline in different algorithms.
+  \ifthenelse{\boolean{algocf@optnoend}}{%
+      \renewcommand{\algocf@block}[3]{\algocf@group{##1}}%
+    }{%
+      \renewcommand{\algocf@block}[3]{\algocf@@block{##1}{##2}{##3}}%
+    }%
+}%
+%% after the end of algocf or figure environment
+\newcommand{\@algocf@term@caption}{%
+  \algocf@resetcaption% restore original caption
+}%
+%
+\newcommand{\@algocf@term}{%
+  \setboolean{algocf@algoH}{false}% no H by default
+  \ifthenelse{\boolean{algocf@optnoend}}{%
+    \renewcommand{\algocf@block}[3]{\algocf@@block{##1}{##2}{##3}}%
+  }{%
+    \renewcommand{\algocf@block}[2]{\algocf@group{##1}}%
+  }%
+  \SetAlgoRefName{\relax}%
+}%
+%
+%%%%%%%%%%%%%%%%%
+%% makethealgo: macro which print effectively the algo in its box
+%% 
+\newsavebox\algocf@algobox%
+\newcommand{\algocf@makethealgo}{%
+  \vtop{%
+    % place caption above if needed  bye the style
+    \ifthenelse{\equal{\csname @algocf@capt@\algocf@style\endcsname}{above}}%
+    {\csname algocf@caption@\algocf@style\endcsname}{}%
+    %
+    % precommand according to the style
+    \csname @algocf@pre@\algocf@style\endcsname%
+    % place caption at top if needed  bye the style
+     \ifthenelse{\equal{\csname @algocf@capt@\algocf@style\endcsname}{top}}%
+     {\csname algocf@caption@\algocf@style\endcsname}{}%
+    %
+    \box\algocf@algobox% the algo
+    % place caption at bottom if needed  bye the style
+     \ifthenelse{\equal{\csname @algocf@capt@\algocf@style\endcsname}{bottom}}%
+     {\csname algocf@caption@\algocf@style\endcsname}{}%
+    % postcommand according to the style
+    \csname @algocf@post@\algocf@style\endcsname%
+    % place caption under if needed  bye the style
+     \ifthenelse{\equal{\csname @algocf@capt@\algocf@style\endcsname}{under}}%
+     {\csname algocf@caption@\algocf@style\endcsname}{}%
+  }%
+}%
+%%%%%%%%%%%%%%%%%%%
+%
+%% at the beginning of algocf or figure environment
+\newenvironment{algomathdisplay}{\[}{\@endalgocfline\]\ifthenelse{\boolean{algocf@linesnumbered}}{\nl}{\relax}}%
+\newcommand{\@algocf@start}{%
+  \@algoskip%
+  \begin{lrbox}{\algocf@algobox}%
+  \setlength{\algowidth}{\hsize}%
+  \vbox\bgroup% save all the algo in a box
+  \hbox to\algowidth\bgroup\hbox to \algomargin{\hfill}\vtop\bgroup%
+  \ifthenelse{\boolean{algocf@slide}}{\parskip 0.5ex\color{black}}{}%
+  % initialization
+  \addtolength{\hsize}{-\algomargin}\addtolength{\hsize}{-1.5em}% 1.5em to let space for line numbering
+  \let\@mathsemicolon=\;\def\;{\ifmmode\@mathsemicolon\else\@endalgoln\fi}%
+  \raggedright%
+  \AlFnt{}%
+  \ifthenelse{\boolean{algocf@slide}}{\IncMargin{\skipalgocfslide}}{}%
+  \@algoinsideskip%
+%   \let\@emathdisplay=\]\def\]{\algocf@endline\@emathdisplay\nl}%
+}%
+%
+%% at the end of algocf or figure environment
+\newcommand{\@algocf@finish}{%
+  \@algoinsideskip%
+  \egroup%end of vtop which contain all the text
+  \hfill\egroup%end of hbox wich contains [margin][vtop]
+  \ifthenelse{\boolean{algocf@slide}}{\DecMargin{\skipalgocfslide}}{}%
+  %
+  \egroup%end of main vbox
+  \end{lrbox}%
+  \algocf@makethealgo% print the algo
+  \@algoskip%
+  % restore dimension and macros
+  \setlength{\hsize}{\algowidth}%
+  \lineskip\normallineskip\setlength{\skiptotal}{\@defaultskiptotal}%
+  \let\;=\@mathsemicolon%  
+  \let\]=\@emathdisplay%
+}%
+%
+%%%%%%%%%%%%%%%%%%%%
+%% basic definition of the environment algorithm
+%%
+%
+\newboolean{algocf@procenvironment}\setboolean{algocf@procenvironment}{false}%
+\newboolean{algocf@func}\setboolean{algocf@func}{false}%
+\newboolean{algocf@algoH}\setboolean{algocf@algoH}{false}%
+\newboolean{algocf@algostar}\setboolean{algocf@algostar}{false}%
+%
+%%% environment for {algorithm}[H]
+\newenvironment{algocf@Here}{\noindent%
+  \def\@captype{algocf}% if not defined, caption exit with an error
+  \begin{minipage}{\hsize}%
+}{%
+  \end{minipage}%\par%
+}%
+%%% real algorithm environment which manages H and * option
+%    \let\algocf@originalfloatboxreset=\@floatboxreset%
+%    \let\@floatboxreset=\@algofloatboxreset%
+\newenvironment{algocf@algorithm}[1][htbp]{%
+   \@algocf@init%
+   \ifthenelse{\equal{\algocf@float}{figure}}{% if option figure set
+     \ifthenelse{\boolean{algocf@algostar}}{% if algorithm* with figure option
+       \begin{figure*}[#1]% call figure*
+         \ifthenelse{\boolean{algocf@customruledwidth}}{\relax}{\setlength{\algocf@ruledwidth}{\linewidth}}%
+         \let\algocf@oldeverypar=\everypar%
+         \algocf@seteverypar%
+         \addtolength{\linewidth}{-\algomargin}% caption package use \linewidth as basic width of caption
+     }{% else algorithm environment with figure option
+       \begin{figure}[#1]%  call figure
+         \ifthenelse{\boolean{algocf@customruledwidth}}{\relax}{\setlength{\algocf@ruledwidth}{\linewidth}}%
+          \let\algocf@oldeverypar=\everypar%
+         \algocf@seteverypar%
+         \addtolength{\linewidth}{-\algomargin}% so now \linewidth==\hsize. Needed by caption package that uses \linewidth as basic width of caption
+     }%
+   }{% else normal algorithm environment
+     \@algocf@init@caption%
+     \ifthenelse{\equal{#1}{H}}{% if [H] algorithm
+       \if@twocolumn\@latex@error{[H] in two columns mode is not allowed for algorithms}\fi% TODO: SCREAM if H in two colums!
+       \setboolean{algocf@algoH}{true}\begin{algocf@Here}% call corresponding environment
+         \ifthenelse{\boolean{algocf@customruledwidth}}{\relax}{\setlength{\algocf@ruledwidth}{\linewidth}}%
+         \let\algocf@oldeverypar=\everypar%
+         \algocf@seteverypar%
+     }{% else floating algorithm environment
+       \ifthenelse{\boolean{algocf@algostar}}{% if algorithm*
+         \begin{algocf*}[#1]% call algocf*
+           \ifthenelse{\boolean{algocf@customruledwidth}}{\relax}{\setlength{\algocf@ruledwidth}{\linewidth}}%
+           \let\algocf@oldeverypar=\everypar%
+           \algocf@seteverypar%
+       }{% else algorithm environment
+         \begin{algocf}[#1]%  call algocf
+           \ifthenelse{\boolean{algocf@customruledwidth}}{\relax}{\setlength{\algocf@ruledwidth}{\linewidth}}%
+           \let\algocf@oldeverypar=\everypar%
+           \algocf@seteverypar%
+       }%
+     }%
+   }% fin test option figure ou pas
+   \@algocf@start% 
+   \@ResetCounterIfNeeded%
+   \algocf@linesnumbered\ignorespaces%
+}{%
+  \@algocf@finish%
+  \ifthenelse{\equal{\algocf@float}{figure}}{%
+     \ifthenelse{\boolean{algocf@algostar}}{% if algorithm* with figure option
+       \let\everypar=\algocf@oldeverypar%
+       \end{figure*}% call figure*
+     }{% else algorithm environment with figure option
+       \let\everypar=\algocf@oldeverypar%
+       \end{figure}%  call figure
+     }%
+  }{%
+    \@algocf@term@caption%
+    \ifthenelse{\boolean{algocf@algoH}}{% if [H] algorithm
+      \let\everypar=\algocf@oldeverypar%
+      \end{algocf@Here}\par% call corresponding environment
+     }{% else floating algorithm environment
+       \ifthenelse{\boolean{algocf@algostar}}{% if algorithm*
+         \let\everypar=\algocf@oldeverypar%
+         \end{algocf*}% call algocf*
+       }{% else algorithm environment
+         \let\everypar=\algocf@oldeverypar%
+         \end{algocf}%  call algocf
+       }%
+     }%
+  }%
+  \@algocf@term\ignorespacesafterend%
+}%
+%
+%%% user algorithm environment
+\newenvironment{\algocf@envname}[1][htbp]{%
+  \setboolean{algocf@algostar}{false}%
+  \setboolean{algocf@procenvironment}{false}\gdef\algocfautorefname{\algorithmautorefname}%
+  \begin{algocf@algorithm}[#1]\ignorespaces%
+}{%
+  \end{algocf@algorithm}\ignorespacesafterend%
+}%
+%%% user algorithm* environment
+\newenvironment{\algocf@envname*}[1][htbp]{%
+  \setboolean{algocf@algostar}{true}%
+  \setboolean{algocf@procenvironment}{false}\gdef\algocfautorefname{\algorithmautorefname}%
+  \begin{algocf@algorithm}[#1]\ignorespaces%
+}{%
+  \end{algocf@algorithm}\ignorespacesafterend%
+}%
+%
+%%%%%%%%%%%%%%%%%%%%%%%
+%%%
+%
+\expandafter\newcommand\csname\algocf@listofalgorithms\endcsname{%
+  \ifthenelse{\equal{\algocf@float}{figure}}{\listoffigures}{\listofalgocfs}%
+}%
+%%%
+%%%
+%
+% ----------------------  procedure and function environments
+%
+%
+% -- new style (used in particular in the caption of function and procedure environments)
+%
+% three macros to extract parts of the caption
+\gdef\algocf@captname#1(#2)#3@{#1}  % keep characters before the first brace
+\gdef\algocf@captparam#1(#2)#3@{#2} % keep character in between the braces
+\gdef\algocf@captother#1(#2)#3@{#3} % keep character after the braces
+%
+%%% Text of caption for Procedure or Function
+\newcommand{\algocf@captionproctext}[2]{%
+  {%
+    \ProcSty{\ProcFnt\algocf@procname\ifthenelse{\boolean{algocf@procnumbered}}{\nobreakspace\thealgocf\algocf@typo\algocf@capseparator}{\relax}}%
+    \nobreakspace\ProcNameSty{\ProcNameFnt\algocf@captname #2@}% Name of the procedure in ProcName Style. 
+    \ifthenelse{\equal{\algocf@captparam #2@}{\arg@e}}{}{% if no argument, write nothing
+      \ProcNameSty{\ProcNameFnt(}\ProcArgSty{\ProcArgFnt\algocf@captparam #2@}\ProcNameSty{\ProcNameFnt)}%else put arguments in ProcArgSty:
+    }% endif
+    \algocf@captother #2@%
+  }%
+}%
+%
+%
+% -- procedure and function environments are defined from algocf@algorithm environment
+%
+\newenvironment{procedure}[1][htbp]{%
+  \setboolean{algocf@algostar}{false}%
+  \setboolean{algocf@procenvironment}{true}\setboolean{algocf@func}{false}%
+  \newcommand{\algocf@procname}{\@algocf@procname}\gdef\algocfprocautorefname{\procedureautorefname}%
+  \begin{algocf@algorithm}[#1]\ignorespaces%
+}{%
+  \end{algocf@algorithm}\ignorespacesafterend%
+}%
+\newenvironment{function}[1][htbp]{%
+  \setboolean{algocf@algostar}{false}%
+  \setboolean{algocf@procenvironment}{true}\setboolean{algocf@func}{true}%
+  \newcommand{\algocf@procname}{\@algocf@funcname}\gdef\algocffuncautorefname{\functionautorefname}%
+  \begin{algocf@algorithm}[#1]\ignorespaces%
+}{%
+  \end{algocf@algorithm}\ignorespacesafterend%
+}%
+%
+\newenvironment{procedure*}[1][htbp]{%
+  \setboolean{algocf@algostar}{true}%
+  \setboolean{algocf@procenvironment}{true}\setboolean{algocf@func}{false}%
+  \newcommand{\algocf@procname}{\@algocf@procname}\gdef\algocfprocautorefname{\procedureautorefname}%
+  \begin{algocf@algorithm}[#1]\ignorespaces%
+}{%
+  \end{algocf@algorithm}\ignorespacesafterend%
+}%
+\newenvironment{function*}[1][htbp]{%
+  \setboolean{algocf@algostar}{true}%
+  \setboolean{algocf@procenvironment}{true}\setboolean{algocf@func}{true}%
+  \newcommand{\algocf@procname}{\@algocf@funcname}\gdef\algocffuncautorefname{\functionautorefname}%
+  \begin{algocf@algorithm}[#1]\ignorespaces%
+}{%
+  \end{algocf@algorithm}\ignorespacesafterend%
+}%
+%
+%
+%%%%%%%%%%%%%%%%%%%%
+%% definition of algondfloat environment
+%%
+\ifthenelse{\boolean{algocf@endfloat}}{% if endfloat option then
+\newcommand{\algoplace}{% macro which is used to writhe algorithm about there
+   \begin{center}%
+     [\algorithmcfname~\thepostfig\ about here.]%
+   \end{center}%
+}%
+\newcommand{\algoendfloat}{% use as a \begin{algoendfloat} environment to start scanning of line
+%  \immediate\openout\@mainfff\jobname.fff%
+  \efloat@condopen{fff}
+  \efloat@iwrite{fff}{\string\begin{\algocf@envname}}%
+    \if@domarkers%
+       \ifthenelse{\equal{\algocf@list}{lof}}{%
+         \addtocounter{postfig}{1}%
+       }{%
+         \addtocounter{postalgo}{1}%
+       }%
+       \algoplace%
+    \fi%
+    \bgroup%
+    \let\do\ef@makeinnocent\dospecials%
+    \ef@makeinnocent\^^L% and whatever other special cases
+    \endlinechar`\^^M \catcode`\^^M=12 \ef@xalgocfendfloat}%
+}{\relax}%%%% end of endfloat option ifthenelse
+%% some macros useful for endfloat option that cannot be defined inside the ifthenelse
+%scan algoendfloat algorithm and write the text into .fff file
+{\catcode`\^^M=12 \endlinechar=-1 %
+ \gdef\ef@xalgocfendfloat#1^^M{% scan the lines inside algoendfloat environment being read by latex
+   \def\test{#1}% test is the line being currently scan by latex
+   \ifx\test\ef@endalgocftest% if it is \end{algoendfloat}
+     \def\next{% define next as to not continue the scan and write \end{algorithm} into .fff file
+       \egroup\end{algoendfloat}%
+       \efloat@iwrite{fff}{\string\end{\algocf@envname}}%
+       \efloat@iwrite{fff}{\string\efloatseparator}%
+       \efloat@iwrite{fff}{ }%
+     }%
+     \else% else write the current line being scanned by latex and set next to continue the scan
+       \efloat@iwrite{fff}{#1}%
+       \let\next\ef@xalgocfendfloat%
+     \fi% endif
+     \next}% next is continue if it was else condition, else it does not continue the scan and write end to file
+}%
+% test if the scan is finish by looking at the string \end{algoendfloat}
+{\escapechar=-1%
+ \xdef\ef@endalgocftest{\string\\end\string\{algoendfloat\string\}}%
+}%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% 
+\newcommand{\TitleOfAlgo}[1]{\@titleprefix\ 
+  \TitleSty{#1}\par\smallskip}%
+%
+\newcommand{\SetAlgorithmName}[3]{%
+  \renewcommand{\listalgorithmcfname}{#3}%
+  \renewcommand{\algorithmcfname}{#1}%
+  \renewcommand{\algorithmautorefname}{#2}%
+}%
+%
+\newcommand{\algocf@refrelsize}{-2}\newcommand{\SetAlgoRefRelativeSize}[1]{\renewcommand{\algocf@refrelsize}{#1}}%
+\newcommand{\SetAlgoRefName}[1]{%
+  \renewcommand{\algocf@algocfref}{#1}%
+}%
+%
+%
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+% 
+% -------------------------   Default Definitions
+%
+%%
+%%
+%
+\SetKwComment{tcc}{/* }{ */}%
+\SetKwComment{tcp}{// }{}%
+%
+%\newcommand{\algocf@defaults@common}{
+%
+%
+% english keywords (default)
+%
+\SetKwHangingKw{KwHData}{Data$\rightarrow$}
+\SetKwInput{KwIn}{Input}%
+\SetKwInput{KwOut}{Output}%
+\SetKwInput{KwData}{Data}%
+\SetKwInput{KwResult}{Result}%
+\SetKw{KwTo}{to}
+\SetKw{KwRet}{return}%
+\SetKw{Return}{return}%
+\SetKwBlock{Begin}{begin}{end}%
+\SetKwRepeat{Repeat}{repeat}{until}%
+%
+\SetKwIF{If}{ElseIf}{Else}{if}{then}{else if}{else}{end if}%
+\SetKwSwitch{Switch}{Case}{Other}{switch}{do}{case}{otherwise}{end case}{end switch}%
+\SetKwFor{For}{for}{do}{end for}%
+\SetKwFor{ForPar}{for}{do in parallel}{end forpar}
+\SetKwFor{ForEach}{foreach}{do}{end foreach}%
+\SetKwFor{ForAll}{forall}{do}{end forall}%
+\SetKwFor{While}{while}{do}{end while}%
+%
+% French keywords
+%
+\ifthenelse{\boolean{algocf@localkw@french}\OR\equal{\algocf@languagechoosen}{french}}{%
+%\SetKwInOut{AlgDonnees}{Donn\'ees}\SetKwInOut{AlgRes}{R\'esultat}
+\SetKwHangingKw{HDonnees}{Donnees$\rightarrow$}
+\SetKwInput{Donnees}{Donn\'ees}%
+\SetKwInput{Res}{R\'esultat}%
+\SetKwInput{Entree}{Entr\'ees}%
+\SetKwInput{Sortie}{Sorties}%
+\SetKw{KwA}{\`a}%
+\SetKw{Retour}{retourner}%
+\SetKwBlock{Deb}{d\'ebut}{fin}%
+\SetKwRepeat{Repeter}{r\'ep\'eter}{jusqu'\`a}%
+%
+\SetKwIF{Si}{SinonSi}{Sinon}{si}{alors}{sinon si}{sinon}{fin si}%
+\SetKwSwitch{Suivant}{Cas}{Autre}{suivant}{faire}{cas o\`u}{autres cas}{fin cas}{fin d'alternative}%
+\SetKwFor{Pour}{pour}{faire}{fin pour}%
+\SetKwFor{PourPar}{pour}{faire en parall\`ele}{fin pour}%
+\SetKwFor{PourCh}{pour chaque}{faire}{fin pour chaque}%
+\SetKwFor{PourTous}{pour tous les}{faire}{fin pour tous}%
+\SetKwFor{Tq}{tant que}{faire}{fin tq}%
+}{}%
+%
+% --- German keywords
+%
+\ifthenelse{\boolean{algocf@localkw@german}\OR\equal{\algocf@languagechoosen}{german}}{%
+\SetKwInput{Ein}{Eingabe}%KwIn
+\SetKwInput{Aus}{Ausgabe}%KwOut
+\SetKwInput{Daten}{Daten}%KwData
+\SetKwInput{Ergebnis}{Ergebnis}%KwResult
+\SetKw{Bis}{bis}%KwTo
+\SetKw{KwZurueck}{zur\"uck}%KwRet
+\SetKw{Zurueck}{zur\"uck}%Return
+\SetKwBlock{Beginn}{Beginn}{Ende}%Begin
+\SetKwRepeat{Wiederh}{wiederhole}{bis}%Repeat
+%
+\SetKwIF{Wenn}{SonstWenn}{Sonst}{wenn}{dann}{sonst wenn}{sonst}{Ende wenn}%gIf
+\SetKwSwitch{Unterscheide}{Fall}{Anderes}{unterscheide}{tue}{Fall}{sonst}{Ende Fall}{Ende Unt.}%Switch
+\SetKwFor{Fuer}{f\"ur}{tue}{Ende f\"ur}%For
+\SetKwFor{FuerPar}{f\"ur}{tue gleichzeitig}{Ende gleichzeitig}%ForPar
+\SetKwFor{FuerJedes}{f\"ur jedes}{tue}{Ende f\"ur}%ForEach
+\SetKwFor{FuerAlle}{f\"ur alle}{tue}{Ende f\"ur}%ForAll
+\SetKwFor{Solange}{solange}{tue}{Ende solange}%While
+}{}%
+%
+% --- Czech keywords
+%
+\ifthenelse{\boolean{algocf@localkw@czech}\OR\equal{\algocf@languagechoosen}{czech}}{%
+\SetKwInput{Vst}{Vstup}%
+\SetKwInput{Vyst}{V\'{y}stup}%
+\SetKwInput{Vysl}{V\'{y}sledek}%
+}{}%
+%
+% --- Portuguese keywords
+%
+\ifthenelse{\boolean{algocf@localkw@portuguese}\OR\equal{\algocf@languagechoosen}{portuguese}}{%
+\SetKwInput{Entrada}{Entrada}%
+\SetKwInput{Saida}{Sa\'{i}da}%
+\SetKwInput{Dados}{Dados}%
+\SetKwInput{Resultado}{Resultado}%
+\SetKw{Ate}{at\'{e}}
+\SetKw{KwRetorna}{retorna}%
+\SetKw{Retorna}{retorna}%
+\SetKwBlock{Inicio}{in\'{i}cio}{fim}%
+\SetKwRepeat{Repita}{repita}{at\'{e}}%
+%
+\SetKwIF{Se}{SenaoSe}{Senao}{se}{ent\~{a}o}{sen\~{a}o se}{sen\~{a}o}{fim se}%
+\SetKwSwitch{Selec}{Caso}{Outro}{selecione}{fa\c{c}a}{caso}{sen\~{a}o}{fim caso}{fim selec}%
+\SetKwFor{Para}{para}{fa\c{c}a}{fim para}%
+\SetKwFor{ParaPar}{para}{fa\c{c}a em paralelo}{fim para}
+\SetKwFor{ParaCada}{para cada}{fa\c{c}a}{fim para cada}%
+\SetKwFor{ParaTodo}{para todo}{fa\c{c}a}{fim para todo}%
+\SetKwFor{Enqto}{enquanto}{fa\c{c}a}{fim enqto}%
+}{}%
+%
+% --- Italian keywords
+%
+\ifthenelse{\boolean{algocf@localkw@italiano}\OR\equal{\algocf@languagechoosen}{italiano}}{%
+\SetKwInput{KwIng}{Ingresso}%
+\SetKwInput{KwUsc}{Uscita}%
+\SetKwInput{KwDati}{Dati}%
+\SetKwInput{KwRisult}{Risultato}%
+\SetKw{KwA}{a}%
+\SetKw{KwRitorna}{ritorna}%
+\SetKw{Ritorna}{ritorna}%
+\SetKwBlock{Inizio}{inizio}{fine}%
+\SetKwRepeat{Ripeti}{ripeti}{finch\'e}%
+%
+\SetKwIF{Sea}{AltSe}{Altrimenti}{se}{allora}{altrimenti se}{allora}{fine se}%
+\SetKwSwitch{Switch}{Case}{Other}{switch}{do}{case}{otherwise}{end case}{endsw}%
+\SetKwFor{Per}{per}{fai}{fine per}%
+\SetKwFor{PerPar}{per}{fai in parallelo}{fine per}%
+\SetKwFor{PerCiascun}{per ciascun}{fai}{fine per ciascun}%
+\SetKwFor{PerTutti}{per tutti i}{fai}{fine per tutti}%
+\SetKwFor{Finche}{finch\'e}{fai}{fine finch\'e}%
+}{}%
+%
+% --- Spanish keywords
+%
+\ifthenelse{\boolean{algocf@localkw@spanish}\OR\equal{\algocf@languagechoosen}{spanish}}{%
+\SetKwInput{Datos}{Datos}
+\SetKwInput{Resultado}{Resultado}
+\SetKwInput{Entrada}{Entrada}
+\SetKwInput{Salida}{Salida}
+\SetKw{KwA}{a}
+\SetKw{KwDevolver}{devolver}
+\SetKw{Devolver}{devolver}
+\SetKwBlock{Inicio}{inicio}{fin}
+\SetKwIF{SSi}{EnOtroCasoSi}{EnOtroCaso}{si}{entonces}{sin\'o, si}{sin\'o}{fin si}
+\SetKwSwitch{Seleccionar}{Caso}{Otro}{seleccionar}{hacer}{caso}{sin\'o}{fin caso}{fin seleccionar}
+\SetKwFor{Para}{para}{hacer}{fin para}
+\SetKwFor{ParaPara}{par}{hacer en paralelo}{fin para}
+\SetKwFor{EnParalelo}{para}{hacer en paralelo}{fin para}
+\SetKwFor{Mientras}{mientras}{hacer}{fin mientras}
+\SetKwFor{ParaCada}{para cada}{hacer}{fin para cada}
+\SetKwFor{ParaTodo}{para todo}{hacer}{fin para todo}
+\SetKwRepeat{Repetir}{repetir}{hasta que}
+}{}%
+%
+% Croatian keywords
+%
+\ifthenelse{\boolean{algocf@optonelanguage}\AND\equal{\algocf@languagechoosen}{croatian}}{%
+\SetKwInput{KwUlaz}{Ulaz}%KwIn
+\SetKwInput{KwIzlaz}{Izlaz}%KwOut
+\SetKwInput{KwPodatci}{Podatci}%KwData
+\SetKwInput{KwRezultat}{Rezultat}%KwResult
+\SetKw{KwDo}{do}%KwTo
+\SetKw{KwVrati}{vrati}%KwRet
+\SetKw{Vrati}{vrati}%Return
+\SetKwBlock{Pocetak}{po\v{c}etak}{kraj}%Begin
+\SetKwRepeat{Ponavljaj}{ponavljaj}{dok ne bude}%Repeat
+%
+\SetKwIF{Ako}{InaceAko}{Inace}{ako}{onda}{ina\v{c}e ako}{ina\v{c}e}{kraj ako}%gIf
+\SetKwSwitch{Granaj}{Slucaj}{OstaliSlucajevi}{granaj}{\v{c}ini}{slu\v{c}aj}{ostali slu\v{c}ajevi}{kraj slu\v{c}aj}{kraj granaj}%Switch
+\SetKwFor{Za}{za}{\v{c}ini}{kraj za}%For
+\SetKwFor{ZaPar}{za}{\v{c}ini paralelno}{kraj za paralelno}%ForPar
+\SetKwFor{ZaSvaki}{za svaki}{\v{c}ini}{kraj za svaki}%mForEach
+\SetKwFor{ZaSvaku}{za svaku}{\v{c}ini}{kraj za svaku}%fForEach
+\SetKwFor{ZaSvako}{za svako}{\v{c}ini}{kraj za svako}%nForEach
+\SetKwFor{ZaSve}{za sve}{\v{c}ini}{kraj za sve}%ForAll
+\SetKwFor{Dok}{dok}{\v{c}ini}{kraj dok}%While
+}{}%
+%
+%
+% --- Turkish keywords
+%
+\ifthenelse{\boolean{algocf@localkw@turkish}\OR\equal{\algocf@languagechoosen}{turkish}}{%
+\SetKwInput{KwIn}{Girdi}%
+\SetKwInput{KwOut}{\c{C}{\i}kt{\i}}%
+\SetKwInput{KwData}{Veri}%
+\SetKwInput{KwResult}{Sonu\c{c}}%
+\SetKw{KwTo}{to}
+\SetKw{KwRet}{return}%
+\SetKw{Return}{return}%
+\SetKwBlock{Begin}{begin}{end}%
+\SetKwRepeat{Repeat}{repeat}{until}%
+% %
+\SetKwIF{If}{ElseIf}{Else}{if}{then}{else if}{else}{end if}%
+\SetKwSwitch{Switch}{Case}{Other}{switch}{do}{case}{otherwise}{end case}{end switch}%
+\SetKwFor{For}{for}{do}{end for}%
+\SetKwFor{ForPar}{for}{do in parallel}{end forpar}
+\SetKwFor{ForEach}{foreach}{do}{end foreach}%
+\SetKwFor{ForAll}{forall}{do}{end forall}%
+\SetKwFor{While}{while}{do}{end while}%
+}{}%
+%
+% --- End 
+%}
+%
+%\algocf@defaults@common
+%
+% option onelanguage redefinition
+%
+\ifthenelse{\boolean{algocf@optonelanguage}\AND\equal{\algocf@languagechoosen}{french}}{%
+\SetKwInput{KwIn}{Entr\'ees}%
+\SetKwInput{KwOutSortie}{Sorties}%
+\SetKwInput{KwData}{Donn\'ees}%
+\SetKwInput{KwResult}{R\'esultat}%
+\SetKw{KwTo}{\`a}%
+\SetKw{KwRet}{retourner}%
+\SetKw{Return}{retourner}%
+\SetKwBlock{Begin}{d\'ebut}{fin}%
+\SetKwRepeat{Repeat}{r\'ep\'eter}{jusqu'\`a}%
+%
+\SetKwIF{If}{ElseIf}{Else}{si}{alors}{sinon si}{sinon}{fin si}%
+\SetKwSwitch{Switch}{Case}{Other}{suivant}{faire}{cas o\`u}{autres cas}{fin cas}{fin d'alternative}%
+\SetKwFor{For}{pour}{faire}{fin pour}%
+\SetKwFor{ForPar}{pour}{faire en parall\`ele}{fin pour}%
+\SetKwFor{ForEach}{pour chaque}{faire}{fin pour chaque}%
+\SetKwFor{ForAll}{pour tous}{faire}{fin pour tous}%
+\SetKwFor{While}{tant que}{faire}{fin tq}%
+}{}%
+\ifthenelse{\boolean{algocf@optonelanguage}\AND\equal{\algocf@languagechoosen}{german}}{%
+\SetKwInput{KwIn}{Eingabe}%KwIn
+\SetKwInput{KwOut}{Ausgabe}%KwOut
+\SetKwInput{KwData}{Daten}%KwData
+\SetKwInput{KwResult}{Ergebnis}%KwResult
+\SetKw{KwTo}{bis}%KwTo
+\SetKw{KwRet}{zur\"uck}%KwRet
+\SetKw{Return}{zur\"uck}%Return
+\SetKwBlock{Begin}{Beginn}{Ende}%Begin
+\SetKwRepeat{Repeat}{wiederhole}{bis}%Repeat
+%
+\SetKwIF{If}{ElseIf}{Else}{wenn}{dann}{sonst wenn}{sonst}{Ende wenn}%gIf
+\SetKwSwitch{Switch}{Case}{Other}{unterscheide}{tue}{Fall}{sonst}{Ende Fall}{Ende Unt.}%Switch
+\SetKwFor{For}{f\"ur}{tue}{Ende f\"ur}%For
+\SetKwFor{ForPar}{f\"ur}{tue gleichzeitig}{Ende gleichzeitig}%ForPar
+\SetKwFor{ForEach}{f\"ur jedes}{tue}{Ende f\"ur}%ForEach
+\SetKwFor{ForAll}{f\"ur alle}{tue}{Ende f\"ur}%ForAll
+\SetKwFor{While}{solange}{tue}{Ende solange}%While
+}{}%
+\ifthenelse{\boolean{algocf@optonelanguage}\AND\equal{\algocf@languagechoosen}{portuguese}}{%
+\SetKwInput{KwIn}{Entrada}%
+\SetKwInput{KwOut}{Sa\'{i}da}%
+\SetKwInput{KwData}{Dados}%
+\SetKwInput{KwResult}{Resultado}%
+\SetKw{KwTo}{at\'{e}}
+\SetKw{KwRet}{retorna}%
+\SetKw{Return}{retorna}%
+\SetKwBlock{Begin}{in\'{i}cio}{fim}%
+\SetKwRepeat{Repeat}{repita}{at\'{e}}%
+%
+\SetKwIF{If}{ElseIf}{Else}{se}{ent\~{a}o}{sen\~{a}o se}{sen\~{a}o}{fim se}%
+\SetKwSwitch{Switch}{Case}{Other}{selecione}{fa\c{c}a}{caso}{sen\~{a}o}{fim caso}{fim selec}%
+\SetKwFor{For}{para}{fa\c{c}a}{fim para}%
+\SetKwFor{ForPar}{para}{fa\c{c}a em paralelo}{fim para}
+\SetKwFor{ForEach}{para cada}{fa\c{c}a}{fim para cada}%
+\SetKwFor{ForAll}{para todo}{fa\c{c}a}{fim para todo}%
+\SetKwFor{While}{enquanto}{fa\c{c}a}{fim enqto}%
+}{}%
+\ifthenelse{\boolean{algocf@optonelanguage}\AND\equal{\algocf@languagechoosen}{italiano}}{%
+\SetKwInput{KwIn}{Ingresso}%
+\SetKwInput{KwOut}{Uscita}%
+\SetKwInput{KwData}{Dati}%
+\SetKwInput{KwResult}{Risultato}%
+\SetKw{KwTo}{a}%
+\SetKw{KwRet}{ritorna}%
+\SetKw{Return}{ritorna}%
+\SetKwBlock{Begin}{inizio}{fine}%
+\SetKwRepeat{Repeat}{ripeti}{finch\'e}%
+%
+\SetKwIF{If}{ElseIf}{Else}{se}{allora}{altrimenti se}{allora}{fine se}%
+\SetKwSwitch{Switch}{Case}{Other}{switch}{do}{case}{otherwise}{end case}{endsw}%
+\SetKwFor{For}{per}{fai}{fine per}%
+\SetKwFor{ForPar}{per}{fai in parallelo}{fine per}%
+\SetKwFor{ForEach}{per ciascun}{fai}{fine per ciascun}%
+\SetKwFor{ForAll}{per tutti i}{fai}{fine per tutti}%
+\SetKwFor{While}{finch\'e}{fai}{fine finch\'e}%
+}{}%
+\ifthenelse{\boolean{algocf@optonelanguage}\AND\equal{\algocf@languagechoosen}{spanish}}{%
+\SetKwInput{KwIn}{Entrada}%
+\SetKwInput{KwOut}{Salida}%
+\SetKwInput{KwData}{Datos}%
+\SetKwInput{KwResult}{Resultado}%
+\SetKw{KwTo}{a}%
+\SetKw{KwRet}{devolver}%
+\SetKw{Return}{devolver}%
+\SetKwBlock{Begin}{inicio}{fin}%
+\SetKwRepeat{Repeat}{repetir}{hasta que}%
+%
+\SetKwIF{If}{ElseIf}{Else}{si}{entonces}{si no, si}{en otro caso}{fin si}
+\SetKwSwitch{Switch}{Case}{Other}{seleccionar}{hacer}{caso}{si no}{fin caso}{fin seleccionar}
+\SetKwFor{For}{para}{hacer}{fin para}%
+\SetKwFor{ForPar}{para}{hacer in paralelo}{fin para}%
+\SetKwFor{ForEach}{para cada}{hacer}{fin para cada}
+\SetKwFor{ForAll}{para todo}{hacer}{fin para todo}
+\SetKwFor{While}{mientras}{hacer}{fin mientras}
+}{}%
+%
+\ifthenelse{\boolean{algocf@optonelanguage}\AND\equal{\algocf@languagechoosen}{croatian}}{%
+\SetKwInput{KwIn}{Ulaz}%KwIn
+\SetKwInput{KwOut}{Izlaz}%KwOut
+\SetKwInput{KwData}{Podatci}%KwData
+\SetKwInput{KwResult}{Rezultat}%KwResult
+\SetKw{KwTo}{do}%KwTo
+\SetKw{KwRet}{vrati}%KwRet
+\SetKw{Return}{vrati}%Return
+\SetKwBlock{Begin}{po\v{c}etak}{kraj}%Begin
+\SetKwRepeat{Repeat}{ponavljaj}{dok ne bude}%Repeat
+%
+\SetKwIF{If}{ElseIf}{Else}{ako}{onda}{ina\v{c}e ako}{ina\v{c}e}{kraj ako}%gIf
+\SetKwSwitch{Switch}{Case}{Other}{granaj}{\v{c}ini}{slu\v{c}aj}{ostali slu\v{c}ajevi}{kraj slu\v{c}aj}{kraj granaj}%Switch
+\SetKwFor{For}{za}{\v{c}ini}{kraj za}%For
+\SetKwFor{ForPar}{za}{\v{c}ini paralelno}{kraj za paralelno}%ForPar
+\SetKwFor{ForEach}{za svaki}{\v{c}ini}{kraj za svaki}%ForEach
+\SetKwFor{ForAll}{za sve}{\v{c}ini}{kraj za sve}%ForAll
+\SetKwFor{While}{dok}{\v{c}ini}{kraj dok}%While
+}{}%
+%
+\ifthenelse{\boolean{algocf@optonelanguage}\AND\equal{\algocf@languagechoosen}{turkish}}{%
+%
+\SetKwInput{KwIn}{Girdi}%
+\SetKwInput{KwOut}{\c{C}{\i}kt{\i}}%
+\SetKwInput{KwData}{Veri}%
+\SetKwInput{KwResult}{Sonu\c{c}}%
+\SetKw{KwTo}{to}
+\SetKw{KwRet}{return}%
+\SetKw{Return}{return}%
+\SetKwBlock{Begin}{begin}{end}%
+\SetKwRepeat{Repeat}{repeat}{until}%
+%
+\SetKwIF{If}{ElseIf}{Else}{if}{then}{else if}{else}{end if}%
+\SetKwSwitch{Switch}{Case}{Other}{switch}{do}{case}{otherwise}{end switch}%
+\SetKwFor{For}{for}{do}{end for}%
+\SetKwFor{ForPar}{for}{do in parallel}{end forpar}
+\SetKwFor{ForEach}{foreach}{do}{end foreach}%
+\SetKwFor{ForAll}{forall}{do}{end forall}%
+\SetKwFor{While}{while}{do}{end while}%
+}{}%
+%
+%
+%%%% old commands compatibility
+%
+\ifthenelse{\boolean{algocf@oldcommands}}{%
+\newcommand{\SetNoLine}{\SetAlgoNoLine}%
+\newcommand{\SetNoline}{\SetAlgoNoLine}%
+\newcommand{\SetVline}{\SetAlgoVlined}%
+\newcommand{\SetLine}{\SetAlgoLined}%
+%
+\newcommand{\dontprintsemicolon}{\DontPrintSemicolon}%
+\newcommand{\printsemicolon}{\PrintSemicolon}%
+\newcommand{\incmargin}[1]{\IncMargin{#1}}%
+\newcommand{\decmargin}[1]{\DecMargin{-#1}}%
+\newcommand{\setnlskip}[1]{\SetNlSkip{#1}}%
+\newcommand{\Setnlskip}[1]{\SetNlSkip{#1}}%
+\newcommand{\setalcapskip}[1]{\SetAlCapSkip{#1}}%
+\newcommand{\setalcaphskip}[1]{\SetAlCapHSkip{#1}}%
+\newcommand{\nlSty}[1]{\NlSty{#1}}%
+\newcommand{\Setnlsty}[3]{\SetNlSty{#1}{#2}{#3}}%
+\newcommand{\linesnumbered}{\LinesNumbered}%
+\newcommand{\linesnotnumbered}{\LinesNotNumbered}%
+\newcommand{\linesnumberedhidden}{\LinesNumberedHidden}%
+\newcommand{\showln}{\ShowLn}%
+\newcommand{\showlnlabel}[1]{\ShowLnLabel{#1}}%
+\newcommand{\nocaptionofalgo}{\NoCaptionOfAlgo}%
+\newcommand{\restorecaptionofalgo}{\RestoreCaptionOfAlgo}%
+\newcommand{\restylealgo}[1]{\RestyleAlgo{#1}}%
+%
+\newcommand{\Titleofalgo}[1]{\TitleOfAlgo{#1}}%
+% \SetKwIF{If}{ElseIf}{Else}{if}{then}{else if}{else}{endif}
+\newcommand{\SetKwIf}[6]{\SetKwIF{#1}{#2#1}{#2}{#3}{#4}{#5 #1}{#5}{#6}}
+%
+\SetKwIF{gSi}{gSinonSi}{gSinon}{si}{alors}{sinon si}{sinon}{fin si}%
+\SetKwIF{gIf}{gElsIf}{gElse}{if}{then}{else if}{else}{end if}%
+\SetKwIF{gIf}{gElseIf}{gElse}{if}{then}{else if}{else}{end if}%
+\SetKwIF{gWenn}{gSonstWenn}{gSonst}{wenn}{dann}{sonst wenn}{sonst}{Ende wenn}%gIf
+\SetKwIF{gSe}{gSenaoSe}{gSenao}{se}{ent\~{a}o}{sen\~{a}o se}{sen\~{a}o}{fim se}%
+\SetKwIF{gSea}{gAltSe}{gAltrimenti}{se}{allora}{altrimenti se}{allora}{fine se}%
+\SetKw{Ret}{return}%
+\SetKwInput{Data}{Data}%
+\SetKwInput{Result}{Result}%
+}{%
+  \relax%
+}%
+%
+%
+%
+%%
+%%%
+%%%% END
diff --git a/docs/datasheet/bytefield.sty b/docs/datasheet/bytefield.sty
new file mode 100644
index 0000000..d19fb33
--- /dev/null
+++ b/docs/datasheet/bytefield.sty
@@ -0,0 +1,491 @@
+%%
+%% This is file `bytefield.sty',
+%% generated with the docstrip utility.
+%%
+%% The original source files were:
+%%
+%% bytefield.dtx  (with options: `package')
+%% 
+%% This is a generated file.
+%% 
+%% Copyright (C) 2011 by Scott Pakin <scott+bf@pakin.org>
+%% 
+%% This file may be distributed and/or modified under the conditions of
+%% the LaTeX Project Public License, either version 1.3a of this license
+%% or (at your option) any later version.  The latest version of this
+%% license is in:
+%% 
+%%    http://www.latex-project.org/lppl.txt
+%% 
+%% and version 1.3c or later is part of all distributions of LaTeX version
+%% 2006/05/20 or later.
+%% 
+\NeedsTeXFormat{LaTeX2e}[1999/12/01]
+\ProvidesPackage{bytefield}
+    [2011/06/19 v2.1 Network protocol diagrams]
+\RequirePackage{calc}[1998/07/07]
+\RequirePackage{keyval}
+\def\bf@newdimen#1{\advance\count11 by 1
+  \ch@ck1\insc@unt\dimen
+  \allocationnumber=\count11
+  \dimendef#1=\allocationnumber
+  \wlog{\string#1=\string\dimen\the\allocationnumber\space (locally)}%
+}
+\AtBeginDocument{%
+  \begingroup\expandafter\expandafter\expandafter\endgroup
+  \expandafter\ifx\csname locdimen\endcsname\relax
+  \else
+    \let\bf@newdimen\locdimen
+  \fi
+}
+\newlength{\bytefield@height}
+\newif\ifcounting@words
+\newlength{\bytefield@height@increment}
+\DeclareRobustCommand{\inc@bytefield@height}[1]{%
+  \setlength{\bytefield@height@increment}{#1}%
+  \global\advance\bytefield@height by \bytefield@height@increment}
+\newsavebox{\entire@bytefield@picture}
+\newenvironment{bytefield}[2][]{%
+  \bf@bytefieldsetup{#1}%
+  \def\bits@wide{#2}%
+  \let\old@nl=\\%
+  \let\amp=&%
+  \catcode`\&=10
+  \openup -1pt
+  \setlength{\bytefield@height}{0pt}%
+  \setlength{\unitlength}{1pt}%
+  \global\counting@wordstrue
+  \begin{lrbox}{\entire@bytefield@picture}%
+  \renewcommand{\\}[1][0pt]{%
+    \unskip
+    \vspace{##1}%
+    \amp\show@wordlabelr\cr
+    \ignorespaces\global\counting@wordstrue\make@lspace\amp}%
+  \vbox\bgroup\ialign\bgroup##\amp##\amp##\cr\amp
+}{%
+  \amp\show@wordlabelr\cr\egroup\egroup
+  \end{lrbox}%
+  \usebox{\entire@bytefield@picture}}
+\newcommand*{\bf@bitformatting}{\tiny}
+\newcommand*{\bf@boxformatting}{\centering}
+\newlength{\bf@bitwidth}
+\settowidth{\bf@bitwidth}{\bf@bitformatting{99i}}
+\newlength{\bf@bitheight}
+\setlength{\bf@bitheight}{4ex}
+\newlength{\units@wide}
+\newlength{\units@tall}
+\DeclareRobustCommand{\bitbox}[3][lrtb]{%
+  \setlength{\units@wide}{\bf@bitwidth * #2}%
+  \bf@parse@bitbox@arg{#1}%
+  \draw@bit@picture{\strip@pt\units@wide}{\strip@pt\bf@bitheight}{#3}}
+\DeclareRobustCommand{\wordbox}[3][lrtb]{%
+  \setlength{\units@wide}{\bf@bitwidth * \bits@wide}%
+  \setlength{\units@tall}{\bf@bitheight * #2}%
+  \bf@parse@bitbox@arg{#1}%
+  \draw@bit@picture{\strip@pt\units@wide}{\strip@pt\units@tall}{#3}}
+\DeclareRobustCommand{\draw@bit@picture}[3]{%
+  \begin{picture}(#1,#2)%
+    \put(0,0){\makebox(#1,#2){\parbox{#1\unitlength}{%
+      \bf@newdimen\height
+      \bf@newdimen\depth
+      \bf@newdimen\totalheight
+      \bf@newdimen\width
+      \height=#2\unitlength
+      \depth=0pt%
+      \totalheight=#2\unitlength
+      \width=#1\unitlength
+      \def\widthunits{#1}%
+      \def\heightunits{#2}%
+      \bf@boxformatting{#3\par}}}}%
+    \ifbitbox@top
+      \put(0,#2){\line(1,0){#1}}
+    \fi
+    \ifbitbox@bottom
+      \put(0,0){\line(1,0){#1}}
+    \fi
+    \ifbitbox@left
+      \put(0,0){\line(0,1){#2}}
+    \fi
+    \ifbitbox@right
+      \put(#1,0){\line(0,1){#2}}
+    \fi
+  \end{picture}%
+  \ifcounting@words
+    \inc@bytefield@height{\unitlength * \real{#2}}%
+    \global\counting@wordsfalse
+  \fi
+  \ignorespaces}
+\newif\ifbitbox@top
+\newif\ifbitbox@bottom
+\newif\ifbitbox@left
+\newif\ifbitbox@right
+\def\bf@parse@bitbox@arg#1{%
+  \bitbox@topfalse
+  \bitbox@bottomfalse
+  \bitbox@leftfalse
+  \bitbox@rightfalse
+  \bf@parse@bitbox@sides#1X}
+\def\bf@parse@bitbox@sides#1{%
+  \ifx#1X%
+  \else
+    \ifx#1t%
+      \bitbox@toptrue
+    \else
+      \ifx#1b%
+        \bitbox@bottomtrue
+      \else
+        \ifx#1l%
+          \bitbox@lefttrue
+        \else
+          \ifx#1r%
+            \bitbox@righttrue
+          \fi
+        \fi
+      \fi
+    \fi
+    \expandafter\bf@parse@bitbox@sides
+  \fi}
+\newlength{\units@high}
+\DeclareRobustCommand{\skippedwords}[1][2ex]{%
+  \setlength{\units@wide}{\bf@bitwidth * \bits@wide}%
+  \setlength{\units@high}{1pt * \ratio{\units@wide}{6.0pt}}%
+  \setlength{\units@tall}{#1 + \units@high}%
+  \edef\num@wide{\strip@pt\units@wide}%
+  \edef\num@tall{\strip@pt\units@tall}%
+  \edef\num@high{\strip@pt\units@high}%
+  \begin{picture}(\num@wide,\num@tall)
+    \put(0,\num@tall){\line(6,-1){\num@wide}}
+    \put(\num@wide,0){\line(-6,1){\num@wide}}
+    \put(0,0){\line(0,1){\num@high}}
+    \put(\num@wide,\num@tall){\line(0,-1){\num@high}}
+  \end{picture}%
+  \ifcounting@words
+    \inc@bytefield@height{\unitlength * \real{\num@tall}}%
+    \global\counting@wordsfalse
+  \fi}
+\newcommand*{\bf@bit@endianness}{l}
+\newcommand*{\bf@first@bit}{0}
+\DeclareRobustCommand{\bitheader}[2][]{%
+  \bf@parse@bitbox@arg{lrtb}%
+  \setlength{\units@wide}{\bf@bitwidth * \bits@wide}%
+  \setlength{\units@tall}{\heightof{\bf@bitformatting{1234567890}}}%
+  \setlength{\units@high}{\units@tall * -1}%
+  \bf@process@bitheader@opts{#1}%
+  \begin{picture}(\strip@pt\units@wide,\strip@pt\units@tall)%
+                 (0,\strip@pt\units@high)
+    \bf@parse@range@list#2,X,
+  \end{picture}%
+  \ifcounting@words
+    \inc@bytefield@height{\unitlength * \real{\strip@pt\units@tall}}%
+    \global\counting@wordsfalse
+  \fi
+  \ignorespaces}
+\def\bf@parse@range@list#1,{%
+  \ifx X#1
+  \else
+    \bf@parse@range#1-#1-#1\relax
+    \expandafter\bf@parse@range@list
+  \fi}
+\newlength{\header@xpos}
+\newcounter{header@val}
+\newcounter{max@header@val}
+\def\bf@parse@range#1-#2-#3\relax{%
+  \setcounter{header@val}{#1}
+  \setcounter{max@header@val}{#2 + 1}
+  \loop
+    \ifnum\value{header@val}<\value{max@header@val}%
+      \if\bf@bit@endianness b%
+        \setlength{\header@xpos}{%
+          \bf@bitwidth * (\bits@wide - \value{header@val} + \bf@first@bit - 1)}%
+      \else
+        \setlength{\header@xpos}{\bf@bitwidth * (\value{header@val} - \bf@first@bit)}%
+      \fi
+      \put(\strip@pt\header@xpos,0){%
+        \makebox(\strip@pt\bf@bitwidth,\strip@pt\units@tall){%
+          \bf@bitformatting{\theheader@val}}}
+      \addtocounter{header@val}{1}
+  \repeat}
+\newcommand*{\bf@process@bitheader@opts}{%
+  \let\KV@bytefield@l=\KV@bitheader@l
+  \let\KV@bytefield@b=\KV@bitheader@b
+  \let\KV@bytefield@l@default=\KV@bitheader@l@default
+  \let\KV@bytefield@b@default=\KV@bitheader@b@default
+  \setkeys{bytefield}%
+}
+\define@key{bitheader}{l}[true]{%
+  \expandafter\ifx\csname curlyshrinkage\endcsname\relax
+    \PackageWarning{bytefield}{%
+      The "l" argument to \protect\bitheader\space is deprecated.\MessageBreak
+      Instead, please use "endianness=little", which can\MessageBreak
+      even be declared globally for the entire document.\MessageBreak
+      This warning occurred}%
+  \fi
+  \def\bf@bit@endianness{l}%
+}
+\define@key{bitheader}{b}[true]{%
+  \expandafter\ifx\csname curlyshrinkage\endcsname\relax
+    \PackageWarning{bytefield}{%
+      The "b" argument to \protect\bitheader\space is deprecated.\MessageBreak
+      Instead, please use "endianness=big", which can\MessageBreak
+      even be declared globally for the entire document.\MessageBreak
+      This warning occurred}%
+  \fi
+  \def\bf@bit@endianness{b}%
+}
+\def\bf@leftcurlyshrinkage{5pt}
+\def\bf@rightcurlyshrinkage{5pt}
+\def\bf@leftcurlyspace{1ex}
+\def\bf@rightcurlyspace{1ex}
+\def\bf@leftlabelspace{0.5ex}
+\def\bf@rightlabelspace{0.5ex}
+\let\bf@leftcurly=\{
+\let\bf@rightcurly=\}
+\newbox{\curly@box}
+\def\store@rcurly#1#2{%
+  \begingroup
+    \bf@newdimen\curly@height
+    \setlength{\curly@height}{#2 - \bf@rightcurlyshrinkage}%
+    \bf@newdimen\half@curly@height
+    \setlength{\half@curly@height}{0.5\curly@height}%
+    \bf@newdimen\curly@shift
+    \setlength{\curly@shift}{\bf@rightcurlyshrinkage}%
+    \setlength{\curly@shift}{\half@curly@height + 0.5\curly@shift}%
+    \global\sbox{#1}{\raisebox{\curly@shift}{%
+      $\xdef\old@axis{\the\fontdimen22\textfont2}$%
+      $\fontdimen22\textfont2=0pt%
+       \left.
+       \vrule height\half@curly@height
+              width 0pt
+              depth\half@curly@height\right\bf@rightcurly$%
+      $\fontdimen22\textfont2=\old@axis$}}%
+  \endgroup
+}
+\def\store@lcurly#1#2{%
+  \begingroup
+    \bf@newdimen\curly@height
+    \setlength{\curly@height}{#2 - \bf@leftcurlyshrinkage}%
+    \bf@newdimen\half@curly@height
+    \setlength{\half@curly@height}{0.5\curly@height}%
+    \bf@newdimen\curly@shift
+    \setlength{\curly@shift}{\bf@leftcurlyshrinkage}%
+    \setlength{\curly@shift}{\half@curly@height + 0.5\curly@shift}%
+    \global\sbox{#1}{\raisebox{\curly@shift}{%
+      $\xdef\old@axis{\the\fontdimen22\textfont2}$%
+      $\fontdimen22\textfont2=0pt%
+       \left\bf@leftcurly
+       \vrule height\half@curly@height
+              width 0pt
+              depth\half@curly@height\right.$%
+      $\fontdimen22\textfont2=\old@axis$}}%
+  \endgroup
+}
+\def\show@wordlabelr{}
+\newlength{\wordlabelr@start}
+\newlength{\wordlabelr@end}
+\newenvironment{rightwordgroup}[1]{%
+  \endgroup
+  \global\wordlabelr@start=\bytefield@height
+  \gdef\wordlabelr@text{#1}%
+  \ignorespaces
+}{%
+  \begingroup
+  \global\wordlabelr@end=\bytefield@height
+  \gdef\show@wordlabelr{%
+    \sbox{\word@label@box}{%
+      \begin{tabular}[b]{@{}l@{}}\wordlabelr@text\end{tabular}}%
+    \settowidth{\label@box@width}{\usebox{\word@label@box}}%
+    \setlength{\label@box@height}{\wordlabelr@end-\wordlabelr@start}%
+    \store@rcurly{\curly@box}{\label@box@height}%
+    \bf@newdimen\total@box@width
+    \setlength{\total@box@width}{%
+      \bf@rightcurlyspace +
+      \widthof{\usebox{\curly@box}} +
+      \bf@rightlabelspace +
+      \label@box@width}%
+    \begin{picture}(\strip@pt\total@box@width,0)
+      \put(0,0){%
+        \hspace*{\bf@rightcurlyspace}%
+        \usebox{\curly@box}%
+        \hspace*{\bf@rightlabelspace}%
+        \makebox(\strip@pt\label@box@width,\strip@pt\label@box@height){%
+          \usebox{\word@label@box}}}
+    \end{picture}%
+    \gdef\show@wordlabelr{}}%
+  \def\@currenvir{rightwordgroup}%
+  \ignorespaces
+}
+\newlength{\wordlabell@start}
+\newlength{\wordlabell@end}
+\newlength{\total@lbox@width}
+\gdef\make@lspace{}
+\newenvironment{leftwordgroup}[1]{%
+  \endgroup
+  \global\wordlabell@start=\bytefield@height
+  \gdef\wordlabell@text{#1}%
+  \sbox{\word@label@box}{%
+    \begin{tabular}[b]{@{}l@{}}\wordlabell@text\end{tabular}}%
+  \settowidth{\label@box@width}{\usebox{\word@label@box}}%
+  \store@lcurly{\curly@box}{5cm}%
+  \setlength{\total@lbox@width}{%
+    \bf@leftcurlyspace +
+    \widthof{\usebox{\curly@box}} +
+    \bf@leftlabelspace +
+    \label@box@width}%
+  \global\total@lbox@width=\total@lbox@width
+  \gdef\make@lspace{%
+    \hspace*{\total@lbox@width}%
+    \gdef\make@lspace{}}%
+  \ignorespaces
+}{%
+  \begingroup
+  \global\wordlabell@end=\bytefield@height
+  \bf@newdimen\starting@point
+  \setlength{\starting@point}{%
+    -\total@lbox@width - \bf@bitwidth*\bits@wide}%
+  \sbox{\word@label@box}{%
+    \begin{tabular}[b]{@{}l@{}}\wordlabell@text\end{tabular}}%
+  \settowidth{\label@box@width}{\usebox{\word@label@box}}%
+  \setlength{\label@box@height}{\wordlabell@end-\wordlabell@start}%
+  \store@lcurly{\curly@box}{\label@box@height}%
+  \begin{picture}(0,0)
+    \put(\strip@pt\starting@point,0){%
+      \makebox(\strip@pt\label@box@width,\strip@pt\label@box@height){%
+        \usebox{\word@label@box}}%
+      \hspace*{\bf@leftlabelspace}%
+      \usebox{\curly@box}%
+      \hspace*{\bf@leftcurlyspace}}
+  \end{picture}%
+  \def\@currenvir{leftwordgroup}%
+  \ignorespaces}
+\newlength{\label@box@width}
+\newlength{\label@box@height}
+\newsavebox{\word@label@box}
+\newcommand{\bf@enter@compatibility@mode@i}{%
+  \PackageInfo{bytefield}{Entering version 1 compatibility mode}%
+  \newlength{\bitwidth}%
+  \newlength{\byteheight}%
+  \newlength{\curlyspace}%
+  \newlength{\labelspace}%
+  \newlength{\curlyshrinkage}%
+  \settowidth{\bitwidth}{\tiny 99i}%
+  \setlength{\byteheight}{4ex}%
+  \setlength{\curlyspace}{1ex}%
+  \setlength{\labelspace}{0.5ex}%
+  \setlength{\curlyshrinkage}{5pt}%
+  \let\newbytefield=\bytefield
+  \let\endnewbytefield=\endbytefield
+  \renewenvironment{bytefield}[1]{%
+    \begin{newbytefield}[%
+      bitwidth=\bitwidth,
+      bitheight=\byteheight,
+      curlyspace=\curlyspace,
+      labelspace=\labelspace,
+      curlyshrinkage=\curlyshrinkage]{##1}%
+  }{%
+    \end{newbytefield}%
+  }
+  \def\wordgroupr{\begin{rightwordgroup}}
+  \def\endwordgroupr{\end{rightwordgroup}}
+  \def\wordgroupl{\begin{leftwordgroup}}
+  \def\endwordgroupl{\end{leftwordgroup}}
+  \renewcommand{\bytefieldsetup}[1]{%
+    \PackageError{bytefield}{%
+      The \protect\bytefieldsetup\space macro is not available in\MessageBreak
+      version 1 compatibility mode%
+    }{%
+      Remove [compat1] from the \protect\usepackage{bytefield} line to
+      make \protect\bytefieldsetup\MessageBreak
+      available to this document.\space\space (The document may also need
+      to be modified to use\MessageBreak
+      the new bytefield interface.)
+    }%
+  }%
+}
+\newcommand{\wordgroupr}{%
+  \PackageError{bytefield}{%
+    Macros \protect\wordgroupr, \protect\wordgroupl, \protect\endwordgroupr,
+    \MessageBreak
+    and \protect\endwordgroupl\space no longer exist%
+  }{%
+    Starting with version 2.0, bytefield uses \protect\begin{wordgroupr}...
+    \MessageBreak
+    \protect\end{wordgroupr} and \protect\begin{wordgroupl}...%
+    \protect\end{wordgroupl}\MessageBreak
+    to specify word groups and a new \protect\bytefieldsetup\space macro to
+    \MessageBreak
+    change bytefield's various formatting parameters.%
+  }%
+}
+\let\endwordgroupr=\wordgroupr
+\let\wordgroupl=\wordgroupr
+\let\endwordgroupl=\wordgroupr
+\define@key{bytefield}{bitwidth}{%
+  \def\bf@bw@arg{#1}%
+  \def\bf@auto{auto}%
+  \ifx\bf@bw@arg\bf@auto
+    \settowidth{\bf@bitwidth}{\bf@bitformatting{99i}}%
+  \else
+    \setlength{\bf@bitwidth}{#1}%
+  \fi
+}
+\define@key{bytefield}{bitheight}{\setlength{\bf@bitheight}{#1}}
+\define@key{bytefield}{bitformatting}{\def\bf@bitformatting{#1}}
+\define@key{bytefield}{boxformatting}{\def\bf@boxformatting{#1}}
+\define@key{bytefield}{leftcurly}{\def\bf@leftcurly{#1}}
+\define@key{bytefield}{rightcurly}{\def\bf@rightcurly{#1}}
+\define@key{bytefield}{leftcurlyspace}{\def\bf@leftcurlyspace{#1}}
+\define@key{bytefield}{rightcurlyspace}{\def\bf@rightcurlyspace{#1}}
+\define@key{bytefield}{curlyspace}{%
+  \def\bf@leftcurlyspace{#1}%
+  \def\bf@rightcurlyspace{#1}%
+}
+\define@key{bytefield}{leftlabelspace}{\def\bf@leftlabelspace{#1}}
+\define@key{bytefield}{rightlabelspace}{\def\bf@rightlabelspace{#1}}
+\define@key{bytefield}{labelspace}{%
+  \def\bf@leftlabelspace{#1}%
+  \def\bf@rightlabelspace{#1}%
+}
+\define@key{bytefield}{leftcurlyshrinkage}{\def\bf@leftcurlyshrinkage{#1}}
+\define@key{bytefield}{rightcurlyshrinkage}{\def\bf@rightcurlyshrinkage{#1}}
+\define@key{bytefield}{curlyshrinkage}{%
+  \def\bf@leftcurlyshrinkage{#1}%
+  \def\bf@rightcurlyshrinkage{#1}%
+}
+\define@key{bytefield}{endianness}{\bf@parse@endianness{#1}}
+\newcommand{\bf@parse@endianness}[1]{%
+  \def\bf@little{little}%
+  \def\bf@big{big}%
+  \def\bf@arg{#1}%
+  \ifx\bf@arg\bf@little
+    \def\bf@bit@endianness{l}%
+  \else
+    \ifx\bf@arg\bf@big
+      \def\bf@bit@endianness{b}%
+    \else
+      \PackageError{bytefield}{%
+        Invalid argument "#1" to the endianness option%
+      }{%
+        The endianness option must be set to either "little" or
+        "big".\MessageBreak
+        Please specify either endianness=little or endianness=big.
+      }%
+    \fi
+  \fi
+}
+\define@key{bytefield}{lsb}{\def\bf@first@bit{#1}}
+\newcommand{\bf@bytefieldsetup}{\setkeys{bytefield}}
+\let\bytefieldsetup=\bf@bytefieldsetup
+\DeclareOption{compat1}{\bf@enter@compatibility@mode@i}
+\def\bf@package@options{}
+\DeclareOption*{%
+  \edef\next{%
+    \noexpand\g@addto@macro\noexpand\bf@package@options{,\CurrentOption}%
+  }%
+  \next
+}
+\ProcessOptions\relax
+\expandafter\bf@bytefieldsetup\expandafter{\bf@package@options}
+\endinput
+%%
+%% End of file `bytefield.sty'.
+
diff --git a/docs/datasheet/datasheet.aux b/docs/datasheet/datasheet.aux
new file mode 100644
index 0000000..f58ebfa
--- /dev/null
+++ b/docs/datasheet/datasheet.aux
@@ -0,0 +1,188 @@
+\relax 
+\providecommand \oddpage@label [2]{}
+\select@language{english}
+\@writefile{toc}{\select@language{english}}
+\@writefile{lof}{\select@language{english}}
+\@writefile{lot}{\select@language{english}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {1}Overview}{5}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces \textsc  {RI5CY}\xspace  Overview.}}{5}}
+\newlabel{fig:ri5cy_overview}{{1.1}{5}}
+\@writefile{toc}{\contentsline {section}{\numberline {1.1}Supported Instruction Set}{5}}
+\@writefile{toc}{\contentsline {section}{\numberline {1.2}ASIC Synthesis}{6}}
+\@writefile{toc}{\contentsline {section}{\numberline {1.3}FPGA Synthesis}{6}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {2}Instruction Fetch}{7}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:if}{{2}{7}}
+\@writefile{lot}{\contentsline {table}{\numberline {2.1}{\ignorespaces Instruction Fetch Signals}}{7}}
+\newlabel{tab:instr_signals}{{2.1}{7}}
+\@writefile{toc}{\contentsline {section}{\numberline {2.1}Protocol}{7}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {3}Load-Store-Unit (LSU)}{8}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:lsu}{{3}{8}}
+\@writefile{lot}{\contentsline {table}{\numberline {3.1}{\ignorespaces LSU Signals}}{8}}
+\newlabel{tab:lsu_signals}{{3.1}{8}}
+\@writefile{toc}{\contentsline {section}{\numberline {3.1}Misaligned Accesses}{8}}
+\@writefile{toc}{\contentsline {section}{\numberline {3.2}Protocol}{8}}
+\newlabel{sec:lsu_protocol}{{3.2}{8}}
+\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces Basic Memory Transaction}}{9}}
+\newlabel{fig:lsu_trans_basic}{{3.1}{9}}
+\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces Back to Back Memory Transaction}}{9}}
+\newlabel{fig:lsu_trans_b2b}{{3.2}{9}}
+\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces Slow Answer Memory Transaction}}{9}}
+\newlabel{fig:lsu_trans_slow}{{3.3}{9}}
+\@writefile{toc}{\contentsline {section}{\numberline {3.3}Post-Incrementing Load and Store Instructions}{10}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.1}lb rD, imm(rs1!)}{10}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.2}lh rD, imm(rs1!)}{10}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.3}lw rD, imm(rs1!)}{10}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.4}lbu rD, imm(rs1!)}{11}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.5}lhu rD, imm(rs1!)}{11}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.6}lb rD, rs2(rs1!)}{11}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.7}lh rD, rs2(rs1!)}{11}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.8}lw rD, rs2(rs1!)}{12}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.9}lbu rD, rs2(rs1!)}{12}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.10}lhu rD, rs2(rs1!)}{12}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.11}sb rs2, imm(rs1!)}{12}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.12}sh rs2, imm(rs1!)}{13}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.13}sw rs2, imm(rs1!)}{13}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.14}sb rs2, rs3(rs1!)}{13}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.15}sh rs2, rs3(rs1!)}{13}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.16}sw rs2, rs3(rs1!)}{14}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {4}Multiply-Accumulate}{15}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:mac}{{4}{15}}
+\@writefile{toc}{\contentsline {section}{\numberline {4.1}Instructions}{15}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.1}p.mul rD, rs1, rs2}{15}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.2}p.mac rD, rs1, rs2}{16}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.3}p.mul\{s,hhs,u,hhu\} rD, rs1, rs2}{16}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.4}p.mac\{s,hhs,u,hhu\} rD, rs1, rs2}{16}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {5}PULP ALU Extensions}{17}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:aluext}{{5}{17}}
+\@writefile{toc}{\contentsline {section}{\numberline {5.1}Instructions}{17}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.1}p.avg rD, rs1, rs2}{17}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.2}p.avgu rD, rs1, rs2}{17}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.3}p.slet rD, rs1, rs2}{17}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.4}p.sletu rD, rs1, rs2}{18}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.5}p.min rD, rs1, rs2}{18}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.6}p.minu rD, rs1, rs2}{18}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.7}p.max rD, rs1, rs2}{18}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.8}p.maxu rD, rs1, rs2}{19}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.9}p.abs rD, rs1}{19}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.10}p.ror rD, rs1, rs2}{19}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.11}p.exths rD, rs1}{19}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.12}p.exthz rD, rs1}{19}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.13}p.extbs rD, rs1}{20}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.14}p.extbz rD, rs1}{20}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.15}p.ff1 rD, rs1}{20}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.16}p.fl1 rD, rs1}{20}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.17}p.clb rD, rs1}{21}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.18}p.cnt rD, rs1}{21}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {6}PULP Hardware Loop Extensions}{22}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:hwloop}{{6}{22}}
+\@writefile{toc}{\contentsline {section}{\numberline {6.1}Instructions}{22}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.1}lp.starti L, uimmL}{22}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.2}lp.endi L, uimmL}{23}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.3}lp.count L, rs1}{23}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.4}lp.counti L, uimmL}{23}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.5}lp.setup L, rs1, uimmL}{23}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.6}lp.setupi L, uimmS, uimmL}{24}}
+\@writefile{toc}{\contentsline {section}{\numberline {6.2}CSR Mapping}{24}}
+\@writefile{lot}{\contentsline {table}{\numberline {6.1}{\ignorespaces Control and Status Register Map}}{24}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {7}Pipeline}{25}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:pipeline}{{7}{25}}
+\@writefile{lof}{\contentsline {figure}{\numberline {7.1}{\ignorespaces \textsc  {RI5CY}\xspace  Pipeline.}}{25}}
+\newlabel{fig:pipeline}{{7.1}{25}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {8}Register File}{27}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:rf}{{8}{27}}
+\@writefile{toc}{\contentsline {section}{\numberline {8.1}Latch-based Register File}{27}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {9}Control and Status Registers}{28}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:csr}{{9}{28}}
+\@writefile{lot}{\contentsline {table}{\numberline {9.1}{\ignorespaces Control and Status Register Map}}{29}}
+\newlabel{tab:csr_map}{{9.1}{29}}
+\@writefile{toc}{\contentsline {section}{\numberline {9.1}Register Description}{30}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {9.1.1}MSTATUS}{30}}
+\@writefile{lof}{\contentsline {figure}{\numberline {9.1}{\ignorespaces MSTATUS}}{30}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {9.1.2}MESTATUS}{30}}
+\@writefile{lof}{\contentsline {figure}{\numberline {9.2}{\ignorespaces MESTATUS}}{30}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {9.1.3}MEPC}{30}}
+\@writefile{lof}{\contentsline {figure}{\numberline {9.3}{\ignorespaces MEPC}}{31}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {9.1.4}MCAUSE}{31}}
+\@writefile{lof}{\contentsline {figure}{\numberline {9.4}{\ignorespaces MCAUSE}}{31}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {9.1.5}MCPUID}{31}}
+\@writefile{lof}{\contentsline {figure}{\numberline {9.5}{\ignorespaces MCPUID}}{31}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {9.1.6}MIMPID}{31}}
+\@writefile{lof}{\contentsline {figure}{\numberline {9.6}{\ignorespaces MIMPID}}{31}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {9.1.7}MHARTID}{32}}
+\@writefile{lof}{\contentsline {figure}{\numberline {9.7}{\ignorespaces MHARTID}}{32}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {10}Performance Counters}{33}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:perf_count}{{10}{33}}
+\@writefile{toc}{\contentsline {section}{\numberline {10.1}Performance Counter Mode Register (PCMR)}{33}}
+\@writefile{lof}{\contentsline {figure}{\numberline {10.1}{\ignorespaces PCMR}}{33}}
+\@writefile{toc}{\contentsline {section}{\numberline {10.2}Performance Counter Event Register (PCER)}{33}}
+\@writefile{lof}{\contentsline {figure}{\numberline {10.2}{\ignorespaces PCER}}{33}}
+\@writefile{toc}{\contentsline {section}{\numberline {10.3}Performance Counter Counter Registers (PCCR0-31)}{34}}
+\@writefile{lof}{\contentsline {figure}{\numberline {10.3}{\ignorespaces PCCR0-31}}{34}}
+\@writefile{lof}{\contentsline {figure}{\numberline {10.4}{\ignorespaces Events and PCCR, PCMR and PCER on the ASIC.}}{36}}
+\newlabel{fig:events}{{10.4}{36}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {11}Exceptions and Interrupts}{37}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:exceptions}{{11}{37}}
+\@writefile{lot}{\contentsline {table}{\numberline {11.1}{\ignorespaces Interrupt/exception offset vector table}}{37}}
+\newlabel{tab:exc_table}{{11.1}{37}}
+\@writefile{toc}{\contentsline {section}{\numberline {11.1}Interrupts}{37}}
+\@writefile{toc}{\contentsline {section}{\numberline {11.2}Exceptions}{37}}
+\@writefile{toc}{\contentsline {section}{\numberline {11.3}Handling}{38}}
+\@writefile{toc}{\contentsline {chapter}{\numberline {12}Debug}{39}}
+\@writefile{lof}{\addvspace {10\p@ }}
+\@writefile{lot}{\addvspace {10\p@ }}
+\@writefile{lol}{\addvspace {10\p@ }}
+\@writefile{loa}{\addvspace {10\p@ }}
+\newlabel{chap:debug}{{12}{39}}
+\@writefile{lot}{\contentsline {table}{\numberline {12.1}{\ignorespaces Debug Signals}}{39}}
+\newlabel{tab:debug_signals}{{12.1}{39}}
+\@writefile{toc}{\contentsline {section}{\numberline {12.1}Debug Address Map}{39}}
+\@writefile{lot}{\contentsline {table}{\numberline {12.2}{\ignorespaces Control and Status Register Map}}{39}}
+\newlabel{tab:debug_map}{{12.2}{39}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {12.1.1}Debug Register: DMR1}{40}}
+\@writefile{lof}{\contentsline {figure}{\numberline {12.1}{\ignorespaces DMR1}}{40}}
+\@writefile{toc}{\contentsline {subsection}{\numberline {12.1.2}Debug Register: DSR}{40}}
+\@writefile{lof}{\contentsline {figure}{\numberline {12.2}{\ignorespaces DMR1}}{40}}
diff --git a/docs/datasheet/datasheet.log b/docs/datasheet/datasheet.log
new file mode 100644
index 0000000..e112544
--- /dev/null
+++ b/docs/datasheet/datasheet.log
@@ -0,0 +1,3602 @@
+This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013) (format=pdflatex 2017.7.19)  15 AUG 2017 15:43
+entering extended mode
+ restricted \write18 enabled.
+ %&-line parsing enabled.
+**datasheet.tex
+(./datasheet.tex
+LaTeX2e <2011/06/27>
+Babel <v3.8m> and hyphenation patterns for english, dumylang, nohyphenation, uk
+rainian, russian, bulgarian, loaded.
+(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrbook.cls
+Document Class: scrbook 2012/07/29 v3.11b KOMA-Script document class (book)
+(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrkbase.sty
+Package: scrkbase 2012/07/29 v3.11b KOMA-Script package (KOMA-Script-dependent 
+basics and keyval usage)
+
+(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrbase.sty
+Package: scrbase 2012/07/29 v3.11b KOMA-Script package (KOMA-Script-independent
+ basics and keyval usage)
+
+(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
+Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
+\KV@toks@=\toks14
+)
+(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrlfile.sty
+Package: scrlfile 2012/06/15 v3.12 KOMA-Script package (loading files)
+
+Package scrlfile, 2012/06/15 v3.12 KOMA-Script package (loading files)
+                  Copyright (C) Markus Kohm
+
+))) (/usr/share/texlive/texmf-dist/tex/latex/koma-script/tocbasic.sty
+Package: tocbasic 2012/04/04 v3.10b KOMA-Script package (handling toc-files)
+)
+Package tocbasic Info: omitting babel extension for `toc'
+(tocbasic)             because of feature `nobabel' available
+(tocbasic)             for `toc' on input line 117.
+Package tocbasic Info: omitting babel extension for `lof'
+(tocbasic)             because of feature `nobabel' available
+(tocbasic)             for `lof' on input line 118.
+Package tocbasic Info: omitting babel extension for `lot'
+(tocbasic)             because of feature `nobabel' available
+(tocbasic)             for `lot' on input line 119.
+Class scrbook Info: You've used standard option `oneside'.
+(scrbook)           This is correct!
+(scrbook)           Internally I'm using `twoside=false'.
+(scrbook)           If you'd like to set the option with \KOMAoptions,
+(scrbook)           you'd have to use `twoside=false' there
+(scrbook)           instead of `oneside', too.
+Class scrbook Info: You've used standard option `openany'.
+(scrbook)           This is correct!
+(scrbook)           Internally I'm using `open=any'.
+(scrbook)           If you'd like to set the option with \KOMAoptions,
+(scrbook)           you'd have to use `open=any' there
+(scrbook)           instead of `openany', too.
+
+
+Class scrbook Warning: You've used obsolete option `halfparskip'.
+(scrbook)              Usage of this option indicates an old document and
+(scrbook)              changes compatibility level using
+(scrbook)              `parskip=half,version=first'.
+(scrbook)              If you don't want this, you should simply replace
+(scrbook)              usage of option `halfparskip' by `parskip=half'.
+
+Class scrbook Info: Switching compatibility level to `first'.
+Class scrbook Info: File `scrsize11pt.clo' used instead of
+(scrbook)           file `scrsize11.clo' to setup font sizes on input line 1368
+.
+(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrsize11pt.clo
+File: scrsize11pt.clo 2012/07/29 v3.11b KOMA-Script font size class option (11p
+t)
+)
+(/usr/share/texlive/texmf-dist/tex/latex/koma-script/typearea.sty
+Package: typearea 2012/07/29 v3.11b KOMA-Script package (type area)
+
+Package typearea, 2012/07/29 v3.11b KOMA-Script package (type area)
+                  Copyright (C) Frank Neukam, 1992-1994
+                  Copyright (C) Markus Kohm, 1994-
+
+\ta@bcor=\skip41
+\ta@div=\count79
+Package typearea Info: You've used standard option `oneside'.
+(typearea)             This is correct!
+(typearea)             Internally I'm using `twoside=false'.
+(typearea)             If you'd like to set the option with \KOMAoptions,
+(typearea)             you'd have to use `twoside=false' there
+(typearea)             instead of `oneside', too.
+\ta@hblk=\skip42
+\ta@vblk=\skip43
+\ta@temp=\skip44
+Package typearea Info: These are the values describing the layout:
+(typearea)             DIV  = 10
+(typearea)             BCOR = 0.0pt
+(typearea)             \paperwidth      = 597.50793pt
+(typearea)              \textwidth      = 418.25555pt
+(typearea)              DIV departure   = -6%
+(typearea)              \evensidemargin = 17.3562pt
+(typearea)              \oddsidemargin  = 17.3562pt
+(typearea)             \paperheight     = 845.04694pt
+(typearea)              \textheight     = 595.80026pt
+(typearea)              \topmargin      = -25.16531pt
+(typearea)              \headheight     = 17.0pt
+(typearea)              \headsep        = 20.40001pt
+(typearea)              \topskip        = 11.0pt
+(typearea)              \footskip       = 47.60002pt
+(typearea)              \baselineskip   = 13.6pt
+(typearea)              on input line 1213.
+)
+\c@part=\count80
+\c@chapter=\count81
+\c@section=\count82
+\c@subsection=\count83
+\c@subsubsection=\count84
+\c@paragraph=\count85
+\c@subparagraph=\count86
+\abovecaptionskip=\skip45
+\belowcaptionskip=\skip46
+\c@pti@nb@sid@b@x=\box26
+\c@figure=\count87
+\c@table=\count88
+\bibindent=\dimen102
+) (./preamble/preamble.tex
+(/usr/share/texlive/texmf-dist/tex/latex/base/inputenc.sty
+Package: inputenc 2008/03/30 v1.1d Input encoding file
+\inpenc@prehook=\toks15
+\inpenc@posthook=\toks16
+
+(/usr/share/texlive/texmf-dist/tex/latex/base/utf8.def
+File: utf8.def 2008/04/05 v1.1m UTF-8 support for inputenc
+Now handling font encoding OML ...
+... no UTF-8 mapping file for font encoding OML
+Now handling font encoding T1 ...
+... processing UTF-8 mapping file for font encoding T1
+
+(/usr/share/texlive/texmf-dist/tex/latex/base/t1enc.dfu
+File: t1enc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
+   defining Unicode char U+00A1 (decimal 161)
+   defining Unicode char U+00A3 (decimal 163)
+   defining Unicode char U+00AB (decimal 171)
+   defining Unicode char U+00BB (decimal 187)
+   defining Unicode char U+00BF (decimal 191)
+   defining Unicode char U+00C0 (decimal 192)
+   defining Unicode char U+00C1 (decimal 193)
+   defining Unicode char U+00C2 (decimal 194)
+   defining Unicode char U+00C3 (decimal 195)
+   defining Unicode char U+00C4 (decimal 196)
+   defining Unicode char U+00C5 (decimal 197)
+   defining Unicode char U+00C6 (decimal 198)
+   defining Unicode char U+00C7 (decimal 199)
+   defining Unicode char U+00C8 (decimal 200)
+   defining Unicode char U+00C9 (decimal 201)
+   defining Unicode char U+00CA (decimal 202)
+   defining Unicode char U+00CB (decimal 203)
+   defining Unicode char U+00CC (decimal 204)
+   defining Unicode char U+00CD (decimal 205)
+   defining Unicode char U+00CE (decimal 206)
+   defining Unicode char U+00CF (decimal 207)
+   defining Unicode char U+00D0 (decimal 208)
+   defining Unicode char U+00D1 (decimal 209)
+   defining Unicode char U+00D2 (decimal 210)
+   defining Unicode char U+00D3 (decimal 211)
+   defining Unicode char U+00D4 (decimal 212)
+   defining Unicode char U+00D5 (decimal 213)
+   defining Unicode char U+00D6 (decimal 214)
+   defining Unicode char U+00D8 (decimal 216)
+   defining Unicode char U+00D9 (decimal 217)
+   defining Unicode char U+00DA (decimal 218)
+   defining Unicode char U+00DB (decimal 219)
+   defining Unicode char U+00DC (decimal 220)
+   defining Unicode char U+00DD (decimal 221)
+   defining Unicode char U+00DE (decimal 222)
+   defining Unicode char U+00DF (decimal 223)
+   defining Unicode char U+00E0 (decimal 224)
+   defining Unicode char U+00E1 (decimal 225)
+   defining Unicode char U+00E2 (decimal 226)
+   defining Unicode char U+00E3 (decimal 227)
+   defining Unicode char U+00E4 (decimal 228)
+   defining Unicode char U+00E5 (decimal 229)
+   defining Unicode char U+00E6 (decimal 230)
+   defining Unicode char U+00E7 (decimal 231)
+   defining Unicode char U+00E8 (decimal 232)
+   defining Unicode char U+00E9 (decimal 233)
+   defining Unicode char U+00EA (decimal 234)
+   defining Unicode char U+00EB (decimal 235)
+   defining Unicode char U+00EC (decimal 236)
+   defining Unicode char U+00ED (decimal 237)
+   defining Unicode char U+00EE (decimal 238)
+   defining Unicode char U+00EF (decimal 239)
+   defining Unicode char U+00F0 (decimal 240)
+   defining Unicode char U+00F1 (decimal 241)
+   defining Unicode char U+00F2 (decimal 242)
+   defining Unicode char U+00F3 (decimal 243)
+   defining Unicode char U+00F4 (decimal 244)
+   defining Unicode char U+00F5 (decimal 245)
+   defining Unicode char U+00F6 (decimal 246)
+   defining Unicode char U+00F8 (decimal 248)
+   defining Unicode char U+00F9 (decimal 249)
+   defining Unicode char U+00FA (decimal 250)
+   defining Unicode char U+00FB (decimal 251)
+   defining Unicode char U+00FC (decimal 252)
+   defining Unicode char U+00FD (decimal 253)
+   defining Unicode char U+00FE (decimal 254)
+   defining Unicode char U+00FF (decimal 255)
+   defining Unicode char U+0102 (decimal 258)
+   defining Unicode char U+0103 (decimal 259)
+   defining Unicode char U+0104 (decimal 260)
+   defining Unicode char U+0105 (decimal 261)
+   defining Unicode char U+0106 (decimal 262)
+   defining Unicode char U+0107 (decimal 263)
+   defining Unicode char U+010C (decimal 268)
+   defining Unicode char U+010D (decimal 269)
+   defining Unicode char U+010E (decimal 270)
+   defining Unicode char U+010F (decimal 271)
+   defining Unicode char U+0110 (decimal 272)
+   defining Unicode char U+0111 (decimal 273)
+   defining Unicode char U+0118 (decimal 280)
+   defining Unicode char U+0119 (decimal 281)
+   defining Unicode char U+011A (decimal 282)
+   defining Unicode char U+011B (decimal 283)
+   defining Unicode char U+011E (decimal 286)
+   defining Unicode char U+011F (decimal 287)
+   defining Unicode char U+0130 (decimal 304)
+   defining Unicode char U+0131 (decimal 305)
+   defining Unicode char U+0132 (decimal 306)
+   defining Unicode char U+0133 (decimal 307)
+   defining Unicode char U+0139 (decimal 313)
+   defining Unicode char U+013A (decimal 314)
+   defining Unicode char U+013D (decimal 317)
+   defining Unicode char U+013E (decimal 318)
+   defining Unicode char U+0141 (decimal 321)
+   defining Unicode char U+0142 (decimal 322)
+   defining Unicode char U+0143 (decimal 323)
+   defining Unicode char U+0144 (decimal 324)
+   defining Unicode char U+0147 (decimal 327)
+   defining Unicode char U+0148 (decimal 328)
+   defining Unicode char U+014A (decimal 330)
+   defining Unicode char U+014B (decimal 331)
+   defining Unicode char U+0150 (decimal 336)
+   defining Unicode char U+0151 (decimal 337)
+   defining Unicode char U+0152 (decimal 338)
+   defining Unicode char U+0153 (decimal 339)
+   defining Unicode char U+0154 (decimal 340)
+   defining Unicode char U+0155 (decimal 341)
+   defining Unicode char U+0158 (decimal 344)
+   defining Unicode char U+0159 (decimal 345)
+   defining Unicode char U+015A (decimal 346)
+   defining Unicode char U+015B (decimal 347)
+   defining Unicode char U+015E (decimal 350)
+   defining Unicode char U+015F (decimal 351)
+   defining Unicode char U+0160 (decimal 352)
+   defining Unicode char U+0161 (decimal 353)
+   defining Unicode char U+0162 (decimal 354)
+   defining Unicode char U+0163 (decimal 355)
+   defining Unicode char U+0164 (decimal 356)
+   defining Unicode char U+0165 (decimal 357)
+   defining Unicode char U+016E (decimal 366)
+   defining Unicode char U+016F (decimal 367)
+   defining Unicode char U+0170 (decimal 368)
+   defining Unicode char U+0171 (decimal 369)
+   defining Unicode char U+0178 (decimal 376)
+   defining Unicode char U+0179 (decimal 377)
+   defining Unicode char U+017A (decimal 378)
+   defining Unicode char U+017B (decimal 379)
+   defining Unicode char U+017C (decimal 380)
+   defining Unicode char U+017D (decimal 381)
+   defining Unicode char U+017E (decimal 382)
+   defining Unicode char U+200C (decimal 8204)
+   defining Unicode char U+2013 (decimal 8211)
+   defining Unicode char U+2014 (decimal 8212)
+   defining Unicode char U+2018 (decimal 8216)
+   defining Unicode char U+2019 (decimal 8217)
+   defining Unicode char U+201A (decimal 8218)
+   defining Unicode char U+201C (decimal 8220)
+   defining Unicode char U+201D (decimal 8221)
+   defining Unicode char U+201E (decimal 8222)
+   defining Unicode char U+2030 (decimal 8240)
+   defining Unicode char U+2031 (decimal 8241)
+   defining Unicode char U+2039 (decimal 8249)
+   defining Unicode char U+203A (decimal 8250)
+   defining Unicode char U+2423 (decimal 9251)
+)
+Now handling font encoding OT1 ...
+... processing UTF-8 mapping file for font encoding OT1
+
+(/usr/share/texlive/texmf-dist/tex/latex/base/ot1enc.dfu
+File: ot1enc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
+   defining Unicode char U+00A1 (decimal 161)
+   defining Unicode char U+00A3 (decimal 163)
+   defining Unicode char U+00B8 (decimal 184)
+   defining Unicode char U+00BF (decimal 191)
+   defining Unicode char U+00C5 (decimal 197)
+   defining Unicode char U+00C6 (decimal 198)
+   defining Unicode char U+00D8 (decimal 216)
+   defining Unicode char U+00DF (decimal 223)
+   defining Unicode char U+00E6 (decimal 230)
+   defining Unicode char U+00EC (decimal 236)
+   defining Unicode char U+00ED (decimal 237)
+   defining Unicode char U+00EE (decimal 238)
+   defining Unicode char U+00EF (decimal 239)
+   defining Unicode char U+00F8 (decimal 248)
+   defining Unicode char U+0131 (decimal 305)
+   defining Unicode char U+0141 (decimal 321)
+   defining Unicode char U+0142 (decimal 322)
+   defining Unicode char U+0152 (decimal 338)
+   defining Unicode char U+0153 (decimal 339)
+   defining Unicode char U+2013 (decimal 8211)
+   defining Unicode char U+2014 (decimal 8212)
+   defining Unicode char U+2018 (decimal 8216)
+   defining Unicode char U+2019 (decimal 8217)
+   defining Unicode char U+201C (decimal 8220)
+   defining Unicode char U+201D (decimal 8221)
+)
+Now handling font encoding OMS ...
+... processing UTF-8 mapping file for font encoding OMS
+
+(/usr/share/texlive/texmf-dist/tex/latex/base/omsenc.dfu
+File: omsenc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
+   defining Unicode char U+00A7 (decimal 167)
+   defining Unicode char U+00B6 (decimal 182)
+   defining Unicode char U+00B7 (decimal 183)
+   defining Unicode char U+2020 (decimal 8224)
+   defining Unicode char U+2021 (decimal 8225)
+   defining Unicode char U+2022 (decimal 8226)
+)
+Now handling font encoding OMX ...
+... no UTF-8 mapping file for font encoding OMX
+Now handling font encoding U ...
+... no UTF-8 mapping file for font encoding U
+   defining Unicode char U+00A9 (decimal 169)
+   defining Unicode char U+00AA (decimal 170)
+   defining Unicode char U+00AE (decimal 174)
+   defining Unicode char U+00BA (decimal 186)
+   defining Unicode char U+02C6 (decimal 710)
+   defining Unicode char U+02DC (decimal 732)
+   defining Unicode char U+200C (decimal 8204)
+   defining Unicode char U+2026 (decimal 8230)
+   defining Unicode char U+2122 (decimal 8482)
+   defining Unicode char U+2423 (decimal 9251)
+))
+(/usr/share/texlive/texmf-dist/tex/latex/base/fontenc.sty
+Package: fontenc 2005/09/27 v1.99g Standard LaTeX package
+
+(/usr/share/texlive/texmf-dist/tex/latex/base/t1enc.def
+File: t1enc.def 2005/09/27 v1.99g Standard LaTeX file
+LaTeX Font Info:    Redeclaring font encoding T1 on input line 43.
+))
+(/usr/share/texlive/texmf-dist/tex/generic/babel/babel.sty
+Package: babel 2008/07/08 v3.8m The Babel package
+
+(/usr/share/texlive/texmf-dist/tex/generic/babel/english.ldf
+Language: english 2005/03/30 v3.3o English support from the babel system
+
+(/usr/share/texlive/texmf-dist/tex/generic/babel/babel.def
+File: babel.def 2008/07/08 v3.8m Babel common definitions
+\babel@savecnt=\count89
+\U@D=\dimen103
+)
+\l@british = a dialect from \language\l@english 
+\l@UKenglish = a dialect from \language\l@english 
+\l@canadian = a dialect from \language\l@american 
+\l@australian = a dialect from \language\l@british 
+\l@newzealand = a dialect from \language\l@british 
+))
+(/usr/share/texlive/texmf-dist/tex/latex/tools/tabularx.sty
+Package: tabularx 1999/01/07 v2.07 `tabularx' package (DPC)
+
+(/usr/share/texlive/texmf-dist/tex/latex/tools/array.sty
+Package: array 2008/09/09 v2.4c Tabular extension package (FMi)
+\col@sep=\dimen104
+\extrarowheight=\dimen105
+\NC@list=\toks17
+\extratabsurround=\skip47
+\backup@length=\skip48
+)
+\TX@col@width=\dimen106
+\TX@old@table=\dimen107
+\TX@old@col=\dimen108
+\TX@target=\dimen109
+\TX@delta=\dimen110
+\TX@cols=\count90
+\TX@ftn=\toks18
+)
+(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
+Package: graphicx 1999/02/16 v1.0f Enhanced LaTeX Graphics (DPC,SPQR)
+
+(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
+Package: graphics 2009/02/05 v1.0o Standard LaTeX Graphics (DPC,SPQR)
+
+(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
+Package: trig 1999/03/16 v1.09 sin cos tan (DPC)
+)
+(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg
+File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
+)
+Package graphics Info: Driver file: pdftex.def on input line 91.
+
+(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
+File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX
+
+(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/infwarerr.sty
+Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
+)
+(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
+Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
+)
+\Gread@gobject=\count91
+))
+\Gin@req@height=\dimen111
+\Gin@req@width=\dimen112
+)
+(./algorithm2e.sty
+Package: algorithm2e 2017/07/18 v5.2 algorithms environments
+\c@AlgoLine=\count92
+ (/usr/share/texlive/texmf-dist/tex/latex/base/ifthen.sty
+Package: ifthen 2001/05/26 v1.1c Standard LaTeX ifthen package (DPC)
+)
+\algocf@hangindent=\skip49
+
+(/usr/share/texlive/texmf-dist/tex/latex/ifoddpage/ifoddpage.sty
+Package: ifoddpage 2011/09/13 v1.0 Conditionals for odd/even page detection
+\c@checkoddpage=\count93
+)
+(/usr/share/texlive/texmf-dist/tex/latex/tools/xspace.sty
+Package: xspace 2009/10/20 v1.13 Space after command names (DPC,MH)
+) (./relsize.sty
+Package: relsize 2013/03/29 ver 4.1
+)
+\skiptotal=\skip50
+\skiplinenumber=\skip51
+\skiprule=\skip52
+\skiphlne=\skip53
+\skiptext=\skip54
+\skiplength=\skip55
+\algomargin=\skip56
+\skipalgocfslide=\skip57
+\algowidth=\dimen113
+\inoutsize=\dimen114
+\inoutindent=\dimen115
+\interspacetitleruled=\dimen116
+\interspacealgoruled=\dimen117
+\interspacetitleboxruled=\dimen118
+\algocf@ruledwidth=\skip58
+\algocf@inoutbox=\box27
+\algocf@inputbox=\box28
+\AlCapSkip=\skip59
+\AlCapHSkip=\skip60
+\algoskipindent=\skip61
+\algocf@nlbox=\box29
+\algocf@hangingbox=\box30
+\algocf@untilbox=\box31
+\algocf@skipuntil=\skip62
+\algocf@capbox=\box32
+\algocf@lcaptionbox=\skip63
+\algoheightruledefault=\skip64
+\algoheightrule=\skip65
+\algotitleheightruledefault=\skip66
+\algotitleheightrule=\skip67
+\c@algocfline=\count94
+\c@algocfproc=\count95
+\c@algocf=\count96
+\algocf@algoframe=\box33
+\algocf@algobox=\box34
+)
+(/usr/share/texlive/texmf-dist/tex/latex/setspace/setspace.sty
+Package: setspace 2011/12/19 v6.7a set line spacing
+)
+(/usr/share/texlive/texmf-dist/tex/latex/xcolor/xcolor.sty
+Package: xcolor 2007/01/21 v2.11 LaTeX color extensions (UK)
+
+(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
+File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
+)
+Package xcolor Info: Driver file: pdftex.def on input line 225.
+Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1337.
+Package xcolor Info: Model `hsb' substituted by `rgb' on input line 1341.
+Package xcolor Info: Model `RGB' extended on input line 1353.
+Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1355.
+Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1356.
+Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1357.
+Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1358.
+Package xcolor Info: Model `Gray' substituted by `gray' on input line 1359.
+Package xcolor Info: Model `wave' substituted by `hsb' on input line 1360.
+)
+(/usr/share/texlive/texmf-dist/tex/latex/booktabs/booktabs.sty
+Package: booktabs 2005/04/14 v1.61803 publication quality tables
+\heavyrulewidth=\dimen119
+\lightrulewidth=\dimen120
+\cmidrulewidth=\dimen121
+\belowrulesep=\dimen122
+\belowbottomsep=\dimen123
+\aboverulesep=\dimen124
+\abovetopsep=\dimen125
+\cmidrulesep=\dimen126
+\cmidrulekern=\dimen127
+\defaultaddspace=\dimen128
+\@cmidla=\count97
+\@cmidlb=\count98
+\@aboverulesep=\dimen129
+\@belowrulesep=\dimen130
+\@thisruleclass=\count99
+\@lastruleclass=\count100
+\@thisrulewidth=\dimen131
+)
+(/usr/share/texlive/texmf-dist/tex/latex/float/float.sty
+Package: float 2001/11/08 v1.3d Float enhancements (AL)
+\c@float@type=\count101
+\float@exts=\toks19
+\float@box=\box35
+\@float@everytoks=\toks20
+\@floatcapt=\box36
+)
+(/usr/share/texlive/texmf-dist/tex/latex/listings/listings.sty
+\lst@mode=\count102
+\lst@gtempboxa=\box37
+\lst@token=\toks21
+\lst@length=\count103
+\lst@currlwidth=\dimen132
+\lst@column=\count104
+\lst@pos=\count105
+\lst@lostspace=\dimen133
+\lst@width=\dimen134
+\lst@newlines=\count106
+\lst@lineno=\count107
+\lst@maxwidth=\dimen135
+
+(/usr/share/texlive/texmf-dist/tex/latex/listings/lstmisc.sty
+File: lstmisc.sty 2007/02/22 1.4 (Carsten Heinz)
+\c@lstnumber=\count108
+\lst@skipnumbers=\count109
+\lst@framebox=\box38
+)
+(/usr/share/texlive/texmf-dist/tex/latex/listings/listings.cfg
+File: listings.cfg 2007/02/22 1.4 listings configuration
+))
+Package: listings 2007/02/22 1.4 (Carsten Heinz)
+
+(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsmath.sty
+Package: amsmath 2013/01/14 v2.14 AMS math features
+\@mathmargin=\skip68
+
+For additional information on amsmath, use the `?' option.
+(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty
+Package: amstext 2000/06/29 v2.01
+
+(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty
+File: amsgen.sty 1999/11/30 v2.0
+\@emptytoks=\toks22
+\ex@=\dimen136
+))
+(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsbsy.sty
+Package: amsbsy 1999/11/29 v1.2d
+\pmbraise@=\dimen137
+)
+(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsopn.sty
+Package: amsopn 1999/12/14 v2.01 operator names
+)
+\inf@bad=\count110
+LaTeX Info: Redefining \frac on input line 210.
+\uproot@=\count111
+\leftroot@=\count112
+LaTeX Info: Redefining \overline on input line 306.
+\classnum@=\count113
+\DOTSCASE@=\count114
+LaTeX Info: Redefining \ldots on input line 378.
+LaTeX Info: Redefining \dots on input line 381.
+LaTeX Info: Redefining \cdots on input line 466.
+\Mathstrutbox@=\box39
+\strutbox@=\box40
+\big@size=\dimen138
+LaTeX Font Info:    Redeclaring font encoding OML on input line 566.
+LaTeX Font Info:    Redeclaring font encoding OMS on input line 567.
+\macc@depth=\count115
+\c@MaxMatrixCols=\count116
+\dotsspace@=\muskip10
+\c@parentequation=\count117
+\dspbrk@lvl=\count118
+\tag@help=\toks23
+\row@=\count119
+\column@=\count120
+\maxfields@=\count121
+\andhelp@=\toks24
+\eqnshift@=\dimen139
+\alignsep@=\dimen140
+\tagshift@=\dimen141
+\tagwidth@=\dimen142
+\totwidth@=\dimen143
+\lineht@=\dimen144
+\@envbody=\toks25
+\multlinegap=\skip69
+\multlinetaggap=\skip70
+\mathdisplay@stack=\toks26
+LaTeX Info: Redefining \[ on input line 2665.
+LaTeX Info: Redefining \] on input line 2666.
+) (./bytefield.sty
+Package: bytefield 2011/06/19 v2.1 Network protocol diagrams
+
+(/usr/share/texlive/texmf-dist/tex/latex/tools/calc.sty
+Package: calc 2007/08/22 v4.3 Infix arithmetic (KKT,FJ)
+\calc@Acount=\count122
+\calc@Bcount=\count123
+\calc@Adimen=\dimen145
+\calc@Bdimen=\dimen146
+\calc@Askip=\skip71
+\calc@Bskip=\skip72
+LaTeX Info: Redefining \setlength on input line 76.
+LaTeX Info: Redefining \addtolength on input line 77.
+\calc@Ccount=\count124
+\calc@Cskip=\skip73
+)
+\bytefield@height=\skip74
+\bytefield@height@increment=\skip75
+\entire@bytefield@picture=\box41
+\bf@bitwidth=\skip76
+\bf@bitheight=\skip77
+\units@wide=\skip78
+\units@tall=\skip79
+\units@high=\skip80
+\header@xpos=\skip81
+\c@header@val=\count125
+\c@max@header@val=\count126
+\curly@box=\box42
+\wordlabelr@start=\skip82
+\wordlabelr@end=\skip83
+\wordlabell@start=\skip84
+\wordlabell@end=\skip85
+\total@lbox@width=\skip86
+\label@box@width=\skip87
+\label@box@height=\skip88
+\word@label@box=\box43
+)
+(/usr/share/texlive/texmf-dist/tex/latex/preprint/fullpage.sty
+Package: fullpage 1999/02/23 1.1 (PWD)
+\FP@margin=\skip89
+)
+(/usr/share/texlive/texmf-dist/tex/latex/enumitem/enumitem.sty
+Package: enumitem 2011/09/28 v3.5.2 Customized lists
+\labelindent=\skip90
+\enit@outerparindent=\dimen147
+\enit@toks=\toks27
+\enit@inbox=\box44
+\enitdp@description=\count127
+)
+(/usr/share/texlive/texmf-dist/tex/latex/tcolorbox/tcolorbox.sty
+Package: tcolorbox 2013/03/13 version 2.02 text color boxes
+
+(/usr/share/texlive/texmf-dist/tex/latex/pgf/basiclayer/pgf.sty
+(/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgfrcs.sty
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-common.tex
+\pgfutil@everybye=\toks28
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-latex.def
+\pgfutil@abb=\box45
+
+(/usr/share/texlive/texmf-dist/tex/latex/ms/everyshi.sty
+Package: everyshi 2001/05/15 v3.00 EveryShipout Package (MS)
+))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfrcs.code.tex
+Package: pgfrcs 2010/10/25 v2.10 (rcs-revision 1.24)
+))
+Package: pgf 2008/01/15 v2.10 (rcs-revision 1.12)
+
+(/usr/share/texlive/texmf-dist/tex/latex/pgf/basiclayer/pgfcore.sty
+(/usr/share/texlive/texmf-dist/tex/latex/pgf/systemlayer/pgfsys.sty
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys.code.tex
+Package: pgfsys 2010/06/30 v2.10 (rcs-revision 1.37)
+
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex
+\pgfkeys@pathtoks=\toks29
+\pgfkeys@temptoks=\toks30
+
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeysfiltered.code.t
+ex
+\pgfkeys@tmptoks=\toks31
+))
+\pgf@x=\dimen148
+\pgf@y=\dimen149
+\pgf@xa=\dimen150
+\pgf@ya=\dimen151
+\pgf@xb=\dimen152
+\pgf@yb=\dimen153
+\pgf@xc=\dimen154
+\pgf@yc=\dimen155
+\w@pgf@writea=\write3
+\r@pgf@reada=\read1
+\c@pgf@counta=\count128
+\c@pgf@countb=\count129
+\c@pgf@countc=\count130
+\c@pgf@countd=\count131
+ (/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgf.cfg
+File: pgf.cfg 2008/05/14  (rcs-revision 1.7)
+)
+Package pgfsys Info: Driver file for pgf: pgfsys-pdftex.def on input line 900.
+
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-pdftex.def
+File: pgfsys-pdftex.def 2009/05/22  (rcs-revision 1.26)
+
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-common-pdf.de
+f
+File: pgfsys-common-pdf.def 2008/05/19  (rcs-revision 1.10)
+)))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsyssoftpath.code.
+tex
+File: pgfsyssoftpath.code.tex 2008/07/18  (rcs-revision 1.7)
+\pgfsyssoftpath@smallbuffer@items=\count132
+\pgfsyssoftpath@bigbuffer@items=\count133
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsysprotocol.code.
+tex
+File: pgfsysprotocol.code.tex 2006/10/16  (rcs-revision 1.4)
+))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcore.code.tex
+Package: pgfcore 2010/04/11 v2.10 (rcs-revision 1.7)
+
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathcalc.code.tex
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathutil.code.tex)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathparser.code.tex
+\pgfmath@dimen=\dimen156
+\pgfmath@count=\count134
+\pgfmath@box=\box46
+\pgfmath@toks=\toks32
+\pgfmath@stack@operand=\toks33
+\pgfmath@stack@operation=\toks34
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.code.tex
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.basic.code
+.tex)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.trigonomet
+ric.code.tex)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.random.cod
+e.tex)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.comparison
+.code.tex)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.base.code.
+tex)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.round.code
+.tex)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.misc.code.
+tex)))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfloat.code.tex
+\c@pgfmathroundto@lastzeros=\count135
+))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepoints.code.te
+x
+File: pgfcorepoints.code.tex 2010/04/09  (rcs-revision 1.20)
+\pgf@picminx=\dimen157
+\pgf@picmaxx=\dimen158
+\pgf@picminy=\dimen159
+\pgf@picmaxy=\dimen160
+\pgf@pathminx=\dimen161
+\pgf@pathmaxx=\dimen162
+\pgf@pathminy=\dimen163
+\pgf@pathmaxy=\dimen164
+\pgf@xx=\dimen165
+\pgf@xy=\dimen166
+\pgf@yx=\dimen167
+\pgf@yy=\dimen168
+\pgf@zx=\dimen169
+\pgf@zy=\dimen170
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathconstruct.
+code.tex
+File: pgfcorepathconstruct.code.tex 2010/08/03  (rcs-revision 1.24)
+\pgf@path@lastx=\dimen171
+\pgf@path@lasty=\dimen172
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathusage.code
+.tex
+File: pgfcorepathusage.code.tex 2008/04/22  (rcs-revision 1.12)
+\pgf@shorten@end@additional=\dimen173
+\pgf@shorten@start@additional=\dimen174
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorescopes.code.te
+x
+File: pgfcorescopes.code.tex 2010/09/08  (rcs-revision 1.34)
+\pgfpic=\box47
+\pgf@hbox=\box48
+\pgf@layerbox@main=\box49
+\pgf@picture@serial@count=\count136
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoregraphicstate.c
+ode.tex
+File: pgfcoregraphicstate.code.tex 2008/04/22  (rcs-revision 1.9)
+\pgflinewidth=\dimen175
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransformation
+s.code.tex
+File: pgfcoretransformations.code.tex 2009/06/10  (rcs-revision 1.11)
+\pgf@pt@x=\dimen176
+\pgf@pt@y=\dimen177
+\pgf@pt@temp=\dimen178
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorequick.code.tex
+File: pgfcorequick.code.tex 2008/10/09  (rcs-revision 1.3)
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreobjects.code.t
+ex
+File: pgfcoreobjects.code.tex 2006/10/11  (rcs-revision 1.2)
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathprocessing
+.code.tex
+File: pgfcorepathprocessing.code.tex 2008/10/09  (rcs-revision 1.8)
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorearrows.code.te
+x
+File: pgfcorearrows.code.tex 2008/04/23  (rcs-revision 1.11)
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreshade.code.tex
+File: pgfcoreshade.code.tex 2008/11/23  (rcs-revision 1.13)
+\pgf@max=\dimen179
+\pgf@sys@shading@range@num=\count137
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreimage.code.tex
+File: pgfcoreimage.code.tex 2010/03/25  (rcs-revision 1.16)
+
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreexternal.code.
+tex
+File: pgfcoreexternal.code.tex 2010/09/01  (rcs-revision 1.17)
+\pgfexternal@startupbox=\box50
+))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorelayers.code.te
+x
+File: pgfcorelayers.code.tex 2010/08/27  (rcs-revision 1.2)
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransparency.c
+ode.tex
+File: pgfcoretransparency.code.tex 2008/01/17  (rcs-revision 1.2)
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepatterns.code.
+tex
+File: pgfcorepatterns.code.tex 2009/07/02  (rcs-revision 1.3)
+)))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmoduleshapes.code.tex
+File: pgfmoduleshapes.code.tex 2010/09/09  (rcs-revision 1.13)
+\pgfnodeparttextbox=\box51
+) (/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmoduleplot.code.tex
+File: pgfmoduleplot.code.tex 2010/10/22  (rcs-revision 1.8)
+)
+(/usr/share/texlive/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version-0-65
+.sty
+Package: pgfcomp-version-0-65 2007/07/03 v2.10 (rcs-revision 1.7)
+\pgf@nodesepstart=\dimen180
+\pgf@nodesepend=\dimen181
+)
+(/usr/share/texlive/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version-1-18
+.sty
+Package: pgfcomp-version-1-18 2007/07/23 v2.10 (rcs-revision 1.1)
+)) (/usr/share/texlive/texmf-dist/tex/latex/tools/verbatim.sty
+Package: verbatim 2003/08/22 v1.5q LaTeX2e package for verbatim enhancements
+\every@verbatim=\toks35
+\verbatim@line=\toks36
+\verbatim@in@stream=\read2
+)
+\tcb@titlebox=\box52
+\tcb@upperbox=\box53
+\tcb@lowerbox=\box54
+\c@tcbbreakpart=\count138
+\tcb@out=\write4
+)
+(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/pdflscape.sty
+Package: pdflscape 2008/08/11 v0.10 Display of landscape pages in PDF (HO)
+
+(/usr/share/texlive/texmf-dist/tex/latex/graphics/lscape.sty
+Package: lscape 2000/10/22 v3.01 Landscape Pages (DPC)
+)
+(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifpdf.sty
+Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
+Package ifpdf Info: pdfTeX in PDF mode is detected.
+)
+Package pdflscape Info: Auto-detected driver: pdftex on input line 80.
+
+(/usr/share/texlive/texmf-dist/tex/generic/ifxetex/ifxetex.sty
+Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
+))
+(./tikz-timing.sty
+(/usr/share/texlive/texmf-dist/tex/latex/svn-prov/svn-prov.sty
+Package: svn-prov 2010/04/24 v3.1862 Package Date/Version from SVN Keywords
+)
+Package: tikz-timing 2011/01/09 v0.7d Digital Timing Diagrams using TikZ
+
+(/usr/share/texlive/texmf-dist/tex/latex/pgf/frontendlayer/tikz.sty
+(/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgffor.sty
+(/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgfkeys.sty
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgffor.code.tex
+Package: pgffor 2010/03/23 v2.10 (rcs-revision 1.18)
+\pgffor@iter=\dimen182
+\pgffor@skip=\dimen183
+\pgffor@stack=\toks37
+\pgffor@toks=\toks38
+))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/tikz.code.tex
+Package: tikz 2010/10/13 v2.10 (rcs-revision 1.76)
+
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/libraries/pgflibraryplothandlers
+.code.tex
+File: pgflibraryplothandlers.code.tex 2010/05/31 v2.10 (rcs-revision 1.15)
+\pgf@plot@mark@count=\count139
+\pgfplotmarksize=\dimen184
+)
+\tikz@lastx=\dimen185
+\tikz@lasty=\dimen186
+\tikz@lastxsaved=\dimen187
+\tikz@lastysaved=\dimen188
+\tikzleveldistance=\dimen189
+\tikzsiblingdistance=\dimen190
+\tikz@figbox=\box55
+\tikz@tempbox=\box56
+\tikztreelevel=\count140
+\tikznumberofchildren=\count141
+\tikznumberofcurrentchild=\count142
+\tikz@fig@count=\count143
+
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmodulematrix.code.tex
+File: pgfmodulematrix.code.tex 2010/08/24  (rcs-revision 1.4)
+\pgfmatrixcurrentrow=\count144
+\pgfmatrixcurrentcolumn=\count145
+\pgf@matrix@numberofcolumns=\count146
+)
+\tikz@expandcount=\count147
+
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
+zlibrarytopaths.code.tex
+File: tikzlibrarytopaths.code.tex 2008/06/17 v2.10 (rcs-revision 1.2)
+)))
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
+zlibrarycalc.code.tex
+File: tikzlibrarycalc.code.tex 2009/09/04 v2.10 (rcs-revision 1.6)
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
+zlibrarybackgrounds.code.tex
+File: tikzlibrarybackgrounds.code.tex 2010/02/08 v2.10 (rcs-revision 1.2)
+\pgf@layerbox@background=\box57
+\pgf@layerboxsaved@background=\box58
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
+zlibrarydecorations.pathmorphing.code.tex
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
+zlibrarydecorations.code.tex
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmoduledecorations.cod
+e.tex
+\pgfdecoratedcompleteddistance=\dimen191
+\pgfdecoratedremainingdistance=\dimen192
+\pgfdecoratedinputsegmentcompleteddistance=\dimen193
+\pgfdecoratedinputsegmentremainingdistance=\dimen194
+\pgf@decorate@distancetomove=\dimen195
+\pgf@decorate@repeatstate=\count148
+\pgfdecorationsegmentamplitude=\dimen196
+\pgfdecorationsegmentlength=\dimen197
+)
+\tikz@lib@dec@box=\box59
+)
+(/usr/share/texlive/texmf-dist/tex/generic/pgf/libraries/decorations/pgflibrary
+decorations.pathmorphing.code.tex))
+\tikztiming@numint=\count149
+\tikztiming@numfrac=\count150
+\tikztiming@xunit=\skip91
+\tikztiming@yunit=\skip92
+\tikztiming@debug=\count151
+\c@tikztiming@nrows=\count152
+\c@tikztimingrows=\count153
+\c@tikztimingtrans=\count154
+\c@tikztimingtranspos=\count155
+)) (./datasheet.aux)
+\openout1 = `datasheet.aux'.
+
+LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 28.
+LaTeX Font Info:    ... okay on input line 28.
+LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 28.
+LaTeX Font Info:    ... okay on input line 28.
+LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 28.
+LaTeX Font Info:    ... okay on input line 28.
+LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 28.
+LaTeX Font Info:    ... okay on input line 28.
+LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 28.
+LaTeX Font Info:    ... okay on input line 28.
+LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 28.
+LaTeX Font Info:    ... okay on input line 28.
+
+(/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
+[Loading MPS to PDF converter (version 2006.09.02).]
+\scratchcounter=\count156
+\scratchdimen=\dimen198
+\scratchbox=\box60
+\nofMPsegments=\count157
+\nofMParguments=\count158
+\everyMPshowfont=\toks39
+\MPscratchCnt=\count159
+\MPscratchDim=\dimen199
+\MPnumerator=\count160
+\makeMPintoPDFobject=\count161
+\everyMPtoPDFconversion=\toks40
+) (/usr/share/texlive/texmf-dist/tex/generic/oberdiek/pdftexcmds.sty
+Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
+)
+
+(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifluatex.sty
+Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
+Package ifluatex Info: LuaTeX not detected.
+)
+Package pdftexcmds Info: LuaTeX not detected.
+Package pdftexcmds Info: \pdf@primitive is available.
+Package pdftexcmds Info: \pdf@ifprimitive is available.
+Package pdftexcmds Info: \pdfdraftmode found.
+)
+(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
+Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf
+
+(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/grfext.sty
+Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)
+
+(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/kvdefinekeys.sty
+Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
+))
+(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/kvoptions.sty
+Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
+
+(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/kvsetkeys.sty
+Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
+
+(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/etexcmds.sty
+Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
+Package etexcmds Info: Could not find \expanded.
+(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
+(etexcmds)             that some package has redefined \expanded.
+(etexcmds)             In the latter case, load this package earlier.
+)))
+Package grfext Info: Graphics extension search list:
+(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
+G,.JBIG2,.JB2,.eps]
+(grfext)             \AppendGraphicsExtensions on input line 452.
+
+(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
+File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
+e
+))
+\c@lstlisting=\count162
+
+ABD: EveryShipout initializing macros (./content/title.tex
+<figures/ri5cy_overview.pdf, id=4, 597.23125pt x 302.12875pt>
+File: figures/ri5cy_overview.pdf Graphic file (type pdf)
+
+<use figures/ri5cy_overview.pdf>
+Package pdftex.def Info: figures/ri5cy_overview.pdf used on input line 17.
+(pdftex.def)             Requested size: 449.95453pt x 227.62204pt.
+ [1
+
+
+{/usr/share/texlive/texmf/fonts/map/pdftex/updmap/pdftex.map} <./figures/ri5cy_
+overview.pdf>])
+LaTeX Font Info:    Try loading font information for T1+cmss on input line 32.
+
+(/usr/share/texlive/texmf-dist/tex/latex/base/t1cmss.fd
+File: t1cmss.fd 1999/05/25 v2.5h Standard LaTeX font definitions
+) (./datasheet.toc
+[2
+
+] [3])
+\tf@toc=\write5
+\openout5 = `datasheet.toc'.
+
+ (./content/overview.tex [4]
+Chapter 1.
+
+Class scrbook Warning: \float@addtolists detected!
+(scrbook)              You should use the features of package `tocbasic'
+(scrbook)              instead of \float@addtolists.
+(scrbook)              Support for \float@addtolists may be removed from
+(scrbook)              `scrbook' soon .
+
+<./figures/ri5cy_overview.pdf, id=36, 597.23125pt x 302.12875pt>
+File: ./figures/ri5cy_overview.pdf Graphic file (type pdf)
+
+<use ./figures/ri5cy_overview.pdf>
+Package pdftex.def Info: ./figures/ri5cy_overview.pdf used on input line 12.
+(pdftex.def)             Requested size: 407.6684pt x 206.23315pt.
+LaTeX Font Info:    Try loading font information for OMS+cmr on input line 23.
+
+(/usr/share/texlive/texmf-dist/tex/latex/base/omscmr.fd
+File: omscmr.fd 1999/05/25 v2.5h Standard LaTeX font definitions
+)
+LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <10.95> not available
+(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 23.
+LaTeX Font Info:    Try loading font information for T1+cmtt on input line 27.
+
+(/usr/share/texlive/texmf-dist/tex/latex/base/t1cmtt.fd
+File: t1cmtt.fd 1999/05/25 v2.5h Standard LaTeX font definitions
+)
+Underfull \hbox (badness 10000) in paragraph at lines 28--30
+
+ []
+
+[5
+
+ <./figures/ri5cy_overview.pdf>]) (./content/if.tex [6]
+Chapter 2.
+
+Underfull \hbox (badness 1087) in paragraph at lines 34--34
+[]|\T1/cmtt/m/n/10.95 instr_rdata_i \T1/cmr/m/n/10.95 is valid now for this cy-
+cle. When
+ []
+
+
+Underfull \hbox (badness 1975) in paragraph at lines 34--34
+[]|\T1/cmr/m/n/10.95 The in-struc-tion cache ac-cepted the re-quest. The
+ []
+
+) (./content/lsu.tex [7
+
+]
+Chapter 3.
+
+Underfull \hbox (badness 1694) in paragraph at lines 23--23
+[]|\T1/cmr/m/n/10.95 Data to be writ-ten to mem-ory, sent to-gether with
+ []
+
+[8
+
+] [9]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+ [10]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+ [11]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+ [12]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+ [13]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+) (./content/mac.tex [14]
+Chapter 4.
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+[15
+
+]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+) (./content/aluext.tex [16]
+Chapter 5.
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+[17
+
+]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+ [18]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+ [19]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+ [20]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+) (./content/hwloop.tex [21]
+Chapter 6.
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+[22
+
+]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Overfull \hbox (28.194pt too wide) in paragraph at lines 148--149
+\T1/cmr/bx/n/10.95 Operation: \T1/cmtt/m/n/10.95 lpstart[L] = pc + 4; lpend[L] 
+= pc + Zext(uimmL[11:0]); lpcount[L] = rs1 
+ []
+
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+[23]
+Overfull \hbox (73.46097pt too wide) in paragraph at lines 174--175
+\T1/cmr/bx/n/10.95 Operation: \T1/cmtt/m/n/10.95 lpstart[L] = pc + 4; lpend[L] 
+= pc + Zext(uimmL[11:0]); lpcount[L] = Zext(uimmS) 
+ []
+
+) (./content/pipeline.tex [24]
+Chapter 7.
+<./figures/pipeline.pdf, id=120, 597.23125pt x 302.12875pt>
+File: ./figures/pipeline.pdf Graphic file (type pdf)
+
+<use ./figures/pipeline.pdf>
+Package pdftex.def Info: ./figures/pipeline.pdf used on input line 32.
+(pdftex.def)             Requested size: 407.6684pt x 206.23315pt.
+
+Overfull \hbox (10.88788pt too wide) in paragraph at lines 44--44
+[] 
+ []
+
+) (./content/rf.tex [25
+
+ <./figures/pipeline.pdf>] [26]
+Chapter 8.
+) (./content/csr.tex [27
+
+]
+Chapter 9.
+[28
+
+] [29
+
+]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 42--42
+
+ []
+
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 60--60
+
+ []
+
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 75--75
+
+ []
+
+[30
+
+]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 90--90
+
+ []
+
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 100--100
+
+ []
+
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 109--109
+
+ []
+
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 119--119
+
+ []
+
+[31]) (./content/perfcounters.tex [32]
+Chapter 10.
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 19--19
+
+ []
+
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 54--54
+
+ []
+
+[33
+
+]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 76--76
+
+ []
+
+[34] <./figures/events.pdf, id=161, 255.95625pt x 292.09125pt>
+File: ./figures/events.pdf Graphic file (type pdf)
+
+<use ./figures/events.pdf>
+Package pdftex.def Info: ./figures/events.pdf used on input line 116.
+(pdftex.def)             Requested size: 226.48398pt x 258.45837pt.
+) (./content/exceptions.tex [35] [36 <./figures/events.pdf>]
+Chapter 11.
+[37
+
+]) (./content/debug.tex [38]
+Chapter 12.
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 52--63
+
+ []
+
+[39
+
+]
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+\height=\dimen200 (locally)
+\depth=\dimen201 (locally)
+\totalheight=\dimen202 (locally)
+\width=\dimen203 (locally)
+
+Underfull \hbox (badness 10000) in paragraph at lines 70--82
+
+ []
+
+) [40] (./datasheet.aux) ) 
+Here is how much of TeX's memory you used:
+ 17800 strings out of 494820
+ 324388 string characters out of 3178049
+ 498031 words of memory out of 3000000
+ 20575 multiletter control sequences out of 15000+200000
+ 16540 words of font info for 39 fonts, out of 3000000 for 9000
+ 198 hyphenation exceptions out of 8191
+ 67i,15n,71p,459b,881s stack positions out of 5000i,500n,10000p,200000b,50000s
+{/usr/share/texlive/texmf-dist/fonts/enc/dvips/cm-sup
+er/cm-super-t1.enc}</usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/c
+m/cmsy10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/cm-super/sfbx109
+5.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/cm-super/sfbx2488.pfb><
+/usr/share/texlive/texmf-dist/fonts/type1/public/cm-super/sfcc1095.pfb></usr/sh
+are/texlive/texmf-dist/fonts/type1/public/cm-super/sfrm0600.pfb></usr/share/tex
+live/texmf-dist/fonts/type1/public/cm-super/sfrm1095.pfb></usr/share/texlive/te
+xmf-dist/fonts/type1/public/cm-super/sfrm1440.pfb></usr/share/texlive/texmf-dis
+t/fonts/type1/public/cm-super/sfss1095.pfb></usr/share/texlive/texmf-dist/fonts
+/type1/public/cm-super/sfsx1095.pfb></usr/share/texlive/texmf-dist/fonts/type1/
+public/cm-super/sfsx1200.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/
+cm-super/sfsx1440.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/cm-supe
+r/sfsx2074.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/cm-super/sftt1
+095.pfb>
+Output written on datasheet.pdf (40 pages, 363738 bytes).
+PDF statistics:
+ 238 PDF objects out of 1000 (max. 8388607)
+ 166 compressed objects within 2 object streams
+ 0 named destinations out of 1000 (max. 500000)
+ 33 words of extra memory for PDF output out of 10000 (max. 10000000)
+
diff --git a/docs/datasheet/datasheet.toc b/docs/datasheet/datasheet.toc
new file mode 100644
index 0000000..7d0e90e
--- /dev/null
+++ b/docs/datasheet/datasheet.toc
@@ -0,0 +1,86 @@
+\select@language {english}
+\contentsline {chapter}{\numberline {1}Overview}{5}
+\contentsline {section}{\numberline {1.1}Supported Instruction Set}{5}
+\contentsline {section}{\numberline {1.2}ASIC Synthesis}{6}
+\contentsline {section}{\numberline {1.3}FPGA Synthesis}{6}
+\contentsline {chapter}{\numberline {2}Instruction Fetch}{7}
+\contentsline {section}{\numberline {2.1}Protocol}{7}
+\contentsline {chapter}{\numberline {3}Load-Store-Unit (LSU)}{8}
+\contentsline {section}{\numberline {3.1}Misaligned Accesses}{8}
+\contentsline {section}{\numberline {3.2}Protocol}{8}
+\contentsline {section}{\numberline {3.3}Post-Incrementing Load and Store Instructions}{10}
+\contentsline {subsection}{\numberline {3.3.1}lb rD, imm(rs1!)}{10}
+\contentsline {subsection}{\numberline {3.3.2}lh rD, imm(rs1!)}{10}
+\contentsline {subsection}{\numberline {3.3.3}lw rD, imm(rs1!)}{10}
+\contentsline {subsection}{\numberline {3.3.4}lbu rD, imm(rs1!)}{11}
+\contentsline {subsection}{\numberline {3.3.5}lhu rD, imm(rs1!)}{11}
+\contentsline {subsection}{\numberline {3.3.6}lb rD, rs2(rs1!)}{11}
+\contentsline {subsection}{\numberline {3.3.7}lh rD, rs2(rs1!)}{11}
+\contentsline {subsection}{\numberline {3.3.8}lw rD, rs2(rs1!)}{12}
+\contentsline {subsection}{\numberline {3.3.9}lbu rD, rs2(rs1!)}{12}
+\contentsline {subsection}{\numberline {3.3.10}lhu rD, rs2(rs1!)}{12}
+\contentsline {subsection}{\numberline {3.3.11}sb rs2, imm(rs1!)}{12}
+\contentsline {subsection}{\numberline {3.3.12}sh rs2, imm(rs1!)}{13}
+\contentsline {subsection}{\numberline {3.3.13}sw rs2, imm(rs1!)}{13}
+\contentsline {subsection}{\numberline {3.3.14}sb rs2, rs3(rs1!)}{13}
+\contentsline {subsection}{\numberline {3.3.15}sh rs2, rs3(rs1!)}{13}
+\contentsline {subsection}{\numberline {3.3.16}sw rs2, rs3(rs1!)}{14}
+\contentsline {chapter}{\numberline {4}Multiply-Accumulate}{15}
+\contentsline {section}{\numberline {4.1}Instructions}{15}
+\contentsline {subsection}{\numberline {4.1.1}p.mul rD, rs1, rs2}{15}
+\contentsline {subsection}{\numberline {4.1.2}p.mac rD, rs1, rs2}{16}
+\contentsline {subsection}{\numberline {4.1.3}p.mul\{s,hhs,u,hhu\} rD, rs1, rs2}{16}
+\contentsline {subsection}{\numberline {4.1.4}p.mac\{s,hhs,u,hhu\} rD, rs1, rs2}{16}
+\contentsline {chapter}{\numberline {5}PULP ALU Extensions}{17}
+\contentsline {section}{\numberline {5.1}Instructions}{17}
+\contentsline {subsection}{\numberline {5.1.1}p.avg rD, rs1, rs2}{17}
+\contentsline {subsection}{\numberline {5.1.2}p.avgu rD, rs1, rs2}{17}
+\contentsline {subsection}{\numberline {5.1.3}p.slet rD, rs1, rs2}{17}
+\contentsline {subsection}{\numberline {5.1.4}p.sletu rD, rs1, rs2}{18}
+\contentsline {subsection}{\numberline {5.1.5}p.min rD, rs1, rs2}{18}
+\contentsline {subsection}{\numberline {5.1.6}p.minu rD, rs1, rs2}{18}
+\contentsline {subsection}{\numberline {5.1.7}p.max rD, rs1, rs2}{18}
+\contentsline {subsection}{\numberline {5.1.8}p.maxu rD, rs1, rs2}{19}
+\contentsline {subsection}{\numberline {5.1.9}p.abs rD, rs1}{19}
+\contentsline {subsection}{\numberline {5.1.10}p.ror rD, rs1, rs2}{19}
+\contentsline {subsection}{\numberline {5.1.11}p.exths rD, rs1}{19}
+\contentsline {subsection}{\numberline {5.1.12}p.exthz rD, rs1}{19}
+\contentsline {subsection}{\numberline {5.1.13}p.extbs rD, rs1}{20}
+\contentsline {subsection}{\numberline {5.1.14}p.extbz rD, rs1}{20}
+\contentsline {subsection}{\numberline {5.1.15}p.ff1 rD, rs1}{20}
+\contentsline {subsection}{\numberline {5.1.16}p.fl1 rD, rs1}{20}
+\contentsline {subsection}{\numberline {5.1.17}p.clb rD, rs1}{21}
+\contentsline {subsection}{\numberline {5.1.18}p.cnt rD, rs1}{21}
+\contentsline {chapter}{\numberline {6}PULP Hardware Loop Extensions}{22}
+\contentsline {section}{\numberline {6.1}Instructions}{22}
+\contentsline {subsection}{\numberline {6.1.1}lp.starti L, uimmL}{22}
+\contentsline {subsection}{\numberline {6.1.2}lp.endi L, uimmL}{23}
+\contentsline {subsection}{\numberline {6.1.3}lp.count L, rs1}{23}
+\contentsline {subsection}{\numberline {6.1.4}lp.counti L, uimmL}{23}
+\contentsline {subsection}{\numberline {6.1.5}lp.setup L, rs1, uimmL}{23}
+\contentsline {subsection}{\numberline {6.1.6}lp.setupi L, uimmS, uimmL}{24}
+\contentsline {section}{\numberline {6.2}CSR Mapping}{24}
+\contentsline {chapter}{\numberline {7}Pipeline}{25}
+\contentsline {chapter}{\numberline {8}Register File}{27}
+\contentsline {section}{\numberline {8.1}Latch-based Register File}{27}
+\contentsline {chapter}{\numberline {9}Control and Status Registers}{28}
+\contentsline {section}{\numberline {9.1}Register Description}{30}
+\contentsline {subsection}{\numberline {9.1.1}MSTATUS}{30}
+\contentsline {subsection}{\numberline {9.1.2}MESTATUS}{30}
+\contentsline {subsection}{\numberline {9.1.3}MEPC}{30}
+\contentsline {subsection}{\numberline {9.1.4}MCAUSE}{31}
+\contentsline {subsection}{\numberline {9.1.5}MCPUID}{31}
+\contentsline {subsection}{\numberline {9.1.6}MIMPID}{31}
+\contentsline {subsection}{\numberline {9.1.7}MHARTID}{32}
+\contentsline {chapter}{\numberline {10}Performance Counters}{33}
+\contentsline {section}{\numberline {10.1}Performance Counter Mode Register (PCMR)}{33}
+\contentsline {section}{\numberline {10.2}Performance Counter Event Register (PCER)}{33}
+\contentsline {section}{\numberline {10.3}Performance Counter Counter Registers (PCCR0-31)}{34}
+\contentsline {chapter}{\numberline {11}Exceptions and Interrupts}{37}
+\contentsline {section}{\numberline {11.1}Interrupts}{37}
+\contentsline {section}{\numberline {11.2}Exceptions}{37}
+\contentsline {section}{\numberline {11.3}Handling}{38}
+\contentsline {chapter}{\numberline {12}Debug}{39}
+\contentsline {section}{\numberline {12.1}Debug Address Map}{39}
+\contentsline {subsection}{\numberline {12.1.1}Debug Register: DMR1}{40}
+\contentsline {subsection}{\numberline {12.1.2}Debug Register: DSR}{40}
diff --git a/docs/datasheet/figures/events.eps b/docs/datasheet/figures/events.eps
new file mode 100644
index 0000000..1de47ee
--- /dev/null
+++ b/docs/datasheet/figures/events.eps
@@ -0,0 +1,1375 @@
+%!PS-Adobe-3.0 EPSF-3.0
+%%BoundingBox: 16 518 271 809
+%%Title: events
+%%CreationDate: Tue Aug 15 15:43:05 2017
+%%Creator: Tgif-4.2.2-QPL written by William Chia-Wei Cheng (bill.cheng@acm.org)
+%%ProducedBy: (unknown)
+%%Pages: 1
+%%DocumentFonts: (atend)
+%%EndComments
+%%BeginPreview: 255 291 1 291
+% 0000000000000000000000000000000000000001ffffc0000000000000000000
+% 00000000000000000000000000000000000003ffffffff000000000000000000
+% 0000000000000000000f00000000000000007ffffffffff80000000000000000
+% 00000000000000003fffffff000000000000fffffffffffc0000000000000000
+% 00000000000003ffffffffffff800000000fffffffffffff8000000000000000
+% 000000000000ffffffffffffffff0000007fffffffffffffe000000000000000
+% 000000000007fffffffffffffffffe0001fffffffffffffff000000000000000
+% 000000000007ffffffffffffffffff8003fffffffffffffff000000000000000
+% 00000000000ffffffffffffffffffffc1ffffffffffffffff800000000000000
+% 00000000000ffffffffffffffffffffffffffffffffffffff8007c0000000000
+% 00000000000ffffffffffffffffffffffffffffffffffffff9fffffffff80000
+% 000000000007ffffffffffffffffffffffffffffffffffffffffffffffff0000
+% 000000000003fffffffffffffffffffffffffffffffffffffffffffffffff000
+% 00001ffff801ffffffffffffffffffffffffffffffffffffffffffffffffff00
+% 000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
+% 003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
+% 01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8
+% 07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc
+% 0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
+% 0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
+% 0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
+% 8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
+% 8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
+% 83fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
+% 81fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
+% 801ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
+% 000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffc
+% 00000000007ffffffffffffffffffffffffffffffffffffffffffffffffffff8
+% 00000000000ffffffffffffffffffffffffffffffffffffffffffffffffffff0
+% 0000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffc0
+% 0000000007fffffffffffffffffffffffffffffffffffffffffffffffffffe00
+% 000000003ffffffffffffffffffffffffffffffffffffffffffffffffffff000
+% 000000007fffffffffffffffffffffffffffffffffffffffffffffffffffc000
+% 00000003fffffffffffffffffffffffffffffffffffffffffffffffffffe0000
+% 0000001fffffffffffffffffffffffffffffffffffffffffffffffffffc00000
+% 0000001ffffffffffffffffffffffffffffffffffbfffffffffffffffc800000
+% 0000001ffffffffffffffffffffffffffffffffff87ffffffffffffff0800000
+% 0000001fffffffffffffffffff3ffffffffffffff000fffffffffffe00800000
+% 0000001ffffffffffffffffffe1fffffffffffffe00003ffffffffe000800000
+% 0000003ffffffffffffffffffc0fffffffffffffc0000041fffff80000800000
+% 0000000ffffffffffffffffff003ffffffffffff800000400000000000800000
+% 00000007ffffffffffffffffe001ffffffffffff000000400000000000800000
+% 00000000ffffffffffffffff00007ffffffffffc000000400000000000800000
+% 0000000007fffffffffffff800001ffffffffff0000000400000000000800000
+% 00000000007fffffffffffe0000001ffffffff80000000400000000000800000
+% 000000000007ffffffffff800000003fffffff00000000400000000000800000
+% 0000000000003fffffffc0000000000000000000000000400000000000800000
+% 0000000000000007fc0000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 00006400000000000000000000000000000000000000004000000000008c0000
+% 0000040000000000000000000000000000000000000000400000000000900000
+% 0000040000000000000000000000000000000000000000400000000000900000
+% 0000840000000000000000000000000000000000000000400000000000900000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000000000400000000000800000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000080000000000000000000000000000000000004000400000020000840000
+% 0000020000000000000000000000000000000000004000400000020000840000
+% 0000010000000000000000000000000000000000004000400000020000840000
+% 0000006000000000000000000000000000000000004000400000020000840000
+% 0000001800000000000000000000000000000000004000400000020000840000
+% 00000018000000000000000001c23dc000000000004000400000020000840000
+% 0000003000000000000000000125802000000000004000400000020000840000
+% 000000c000000000000000000128002000000000004000400000020000840000
+% 00000200000000000000000001c839c000000000004000400000020000840000
+% 0000080000000000000000000108002000000000004000400000020000840000
+% 0000000000000000000000000100802000000000004000400000020000840000
+% 00000000000000000000000001023c2000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 0000000000000000000000000000000000000000004000400000020000840000
+% 00000ffffffffffffffffffffffffffffffffffffffffffffffffffffffc0000
+% 0000000000000000000000000000000000000000000000400000000100800000
+% 0000000000000000000000000000000000000000000000400000000100800000
+% 0000000000000000000000000000000000000000000000400000000100800000
+% 0000000000000000000000000000000000000000000000400000000100800000
+% 0000000000000000000000000000000000000000000000400000000100800000
+% 0000000000000000000000000000000000000000000000400000000100800000
+% 0000000000000000000000000000000000000000000000400000000100800000
+% 0000000000000000000000000000000000000000000000400000000100800000
+% 0000000000000000000000000000000000000000001ffffc3ffff81ffffc0000
+% 0000000000000000000000000000000000000000001000042000080000040000
+% 0000000000000000000000000000000000000000001000042000080000040000
+% 0000000000000000000000000000000000000000001000042000080000040000
+% 0000000000000000000000000000000000000000001000042000080000040000
+% 0000000000000000000000000000000000000000001000042000080000040000
+% 0000000000000000000000000000000000000000001000042000080000040000
+% 0000000000000000000000000004020100000000001000042000080000040000
+% 000000000000000000000000000c060300000000001000042000080000040000
+% 0000000000000000000000000000000000000000001000042000080000040000
+% 0000000000000000000000000000000000000000001000042000080000040000
+% 00000000000000000000000000000000000000000018000420000810000c0000
+% 0000000000000000000000000000000000000000000800000000001000080000
+% 0000000000000000000000000000000000000000000000081000100800000000
+% 0000000000000000000000000000000000000000000400000000200000100000
+% 0000000000000000000000000000000000000000000200100800400400200000
+% 0000000000000000000000000000000000000000000200200400400200200000
+% 0000000000000000000000000000000000000000000080c00101000180800000
+% 000000000000000000000000000000000000000000003e00007c00003e000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 0000000000000000000000000000000000000000000008000010000008000000
+% 000000fc0000000000000000000000000000000000000800001000000f800000
+% 0000008001ff8000000000000000000000000000000008000010ffc000800000
+% 0000008000000003ffe000000000000000000000000003fff000000000800000
+% 0000008000000000001fffffc000000000000000fffffe000000000000800000
+% 0000008000000000000000000000000000000000000000000000000000800000
+% 0000004000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000001000000
+% 0000000000000000000000000000000000000000000000000000000001000000
+% 0000001000000000000000000000000000000000000000000000000006000000
+% 0000000600000000000000000000000000000000000000000000000018000000
+% 00000000c00000000000000000000000000000000000000000000001c0000000
+% 0000000030000000000000000000000000000000000000000000000600000000
+% 0000000003800000000000000000000000000000000000000000006000000000
+% 00000000001c00000000000000000000000000000000000000000c0000000000
+% 0000000000007800000000000000000000000000000000000007800000000000
+% 00000000000001e00000000000000000000000000000000003c0000000000000
+% 000000000000001fe0000000000000000000000000000003fc00000000000000
+% 000000000000000001f000000000000000000000000007c00000000000000000
+% 0000000000000000000007f0000000000000000007f000000000000000000000
+% 0000000000000000000000000ffe000000003ff8000000000000000000000000
+% 0000000000000000000000000001fff003ffc000000000000000000000000000
+% 0000000000000000000000000000000080000000000000000000000000000000
+% 0000000000000000000000000000000080000000000000000000000000000000
+% 0000000000000000000000000032400080000000000000000000000000000000
+% 00000000000000000000000ca324000080000000000000000000000000000000
+% 00000000000000000000000a22a4000080000000000000000000000000000000
+% 00000000000000000000000862a4000080000000000000000000000000000000
+% 0000000000000000000000000020000080000000000000000000000000000000
+% 0000000000000000000000000030400080000000000000000000000000000000
+% 0000000000000000000000000000000080000000000000000000000000000000
+% 0000000000000000000000000000010080000000000000000000000000000000
+% 0000000000000000000000000000010080000000000000000000000000000000
+% 0000000000000000000000000000010080000000000000000000000000000000
+% 0000000000000000000000000000010080000000000000000000000000000000
+% 0000000000000000000000000000010080000000000000000000000000000000
+% 0000000000000000000000000000010080000000000000000000000000000000
+% 0000000000000000000000000000010080000000000000000000000000000000
+% 0000000000000000000000000000010080000000000000000000000000000000
+% 0000000000000000000000000000010080000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 0000000000000000000000000000000004000000000000000000000000000000
+% 000000000000000000000000000010000c000000000000000000000000000000
+% 0000000000000000000000000000100008000000000000000000000000000000
+% 0000000000000000000000000000080000000000000000000000000000000000
+% 0000000000000000000000000000040010000000000000000000000000000000
+% 0000000000000000000000000000040020000000000000000000000000000000
+% 0000000000000000000000000000020040000000000000000000000000000000
+% 0000000000000000000000000000004300000000000000000000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000003ffffffc01ffffffc00100000000000000000
+% 0000000000000000000000000000000000202000000400100000000000000000
+% 0000000000000000000000000000800000100000000800100000000000000000
+% 0000000000000000000000000000000000008000001000100000000000000000
+% 0000000000000000000000000000400000080000000000100000000000000000
+% 0000000000000000000000000000000000010000002000100000000000000000
+% 0000000000000000000000000000200000040000000000100000000000000000
+% 0000000000000000000000000000100000000000000000100000000000000000
+% 0000000000000000000000000000080000000000008000100000000000000000
+% 0000000000000000000000000000000000000000010000100000000000000000
+% 0000000000000000000000000000040000000000000000100000000000000000
+% 0000000000000000000000000000000000000000020000100000000000000000
+% 0000000000000000000000000000000000000000040000100000000000000000
+% 0000000000000000000000000000000000000000040000100000000000000000
+% 0000000000000000000000000000008000020000080000100000000000000000
+% 0000000000000000000000000000000000020000100000100000000000000000
+% 0000000000000000000000000000004000020000000000100000000000000000
+% 0000000000000000000000000000000000020000200000100000000000000000
+% 0000000000000000000000000000002000000000000000100000000000000000
+% 0000000000000000000000000000001000000000000000100000000000000000
+% 0000000000000000000000000000000000000000800000100000000000000000
+% 0000000000000000000000000000000800000000000000100000000000000000
+% 0000000000000000000000000000000400000001000000100000000000000000
+% 0000000000000000000000000000000000000002000000100000000000000000
+% 0000000000000000000000000000000000000004000000100000000000000000
+% 0000000000000000000000000000000100000000000000100000000000000000
+% 0000000000000000000000000000000000000008000000100000000000000000
+% 00000000000000000000000000000000fffffff0000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 0000000000000000000000000000000000020000000000100000000000000000
+% 00000000000000000000000000000000000201ffffc000100000000000000000
+% 0000000000000000000000000000000000020100004000100000000000000000
+% 0000000000000000000000000000000000020100004000100000000000000000
+% 0000000000000000000000000000000000020100004000100000000000000000
+% 0000000000000000000000000000000000020100004000100000000000000000
+% 0000000000000000000000000000000000020100004000100000000000000000
+% 0000000000000000000000000000000000020100004000100000000000000000
+% 0000000000000000000000000000000000020103604000100000000000000000
+% 0000000000000000000000000000000000020104804000100000000000000000
+% 000000000000000000000000000000000003ff04807ffff00000000000000000
+% 0000000000000000000000000000000000000104804000000000000000000000
+% 0000000000000000000000000000000000000107e04000000000000000000000
+% 0000000000000000000000000000000000000100004000000000000000000000
+% 0000000000000000000000000000000000000104204000000000000000000000
+% 0000000000000000000000000000000000000104204000000000000000000000
+% 0000000000000000000000000000000000000104204000000000000000000000
+% 0000000000000000000000000000000000000102204000000000000000000000
+% 0000000000000000000000000000000000000101c04000000000000000000000
+% 0000000000000000000000000000000000000100004000000000000000000000
+% 0000000000000000000000000000000000000102204000000000000000000000
+% 0000000000000000000000000000000000000104204000000000000000000000
+% 0000000000000000000000000000000000000104204000000000000000000000
+% 0000000000000000000000000000000000000102204000000000000000000000
+% 0000000000000000000000000000000000000103e04000000000000000000000
+% 0000000000000000000000000000000000000100004000000000000000000000
+% 0000000000000000000000000000000000000103004000000000000000000000
+% 0000000000000000000000000000000000000104804000000000000000000000
+% 0000000000000000000000000000000000000104804000000000000000000000
+% 0000000000000000000000000000000000000104804000000000000000000000
+% 0000000000000000000000000000000000000107e04000000000000000000000
+% 0000000000000000000000000000000000000100004000000000000000000000
+% 0000000000000000000000000000000000000100004000000000000000000000
+% 0000000000000000000000000000000000000100804000000000000000000000
+% 0000000000000000000000000000000000000100004000000000000000000000
+% 0000000000000000000000000000000000000101404000000000000000000000
+% 0000000000000000000000000000000000000103404000000000000000000000
+% 0000000000000000000000000000000000000102204000000000000000000000
+%%EndImage
+%%EndPreview
+%%BeginProlog
+
+/tgifdict 57 dict def
+tgifdict begin
+
+/tgifellipsedict 6 dict def
+tgifellipsedict /mtrx matrix put
+
+/TGEL % tgifellipse
+ { tgifellipsedict begin
+      /yrad exch def
+      /xrad exch def
+      /y exch def
+      /x exch def
+      /savematrix mtrx currentmatrix def
+      x y translate
+      xrad yrad scale
+      0 0 1 0 360 arc
+      savematrix setmatrix
+   end
+ } def
+
+/tgifarcdict 8 dict def
+tgifarcdict /mtrx matrix put
+
+/TGAN % tgifarcn
+ { tgifarcdict begin
+      /endangle exch def
+      /startangle exch def
+      /yrad exch def
+      /xrad exch def
+      /y exch def
+      /x exch def
+      /savematrix mtrx currentmatrix def
+      x y translate
+      xrad yrad scale
+      0 0 1 startangle endangle arc
+      savematrix setmatrix
+   end
+ } def
+
+/TGAR % tgifarc
+ { tgifarcdict begin
+      /endangle exch def
+      /startangle exch def
+      /yrad exch def
+      /xrad exch def
+      /y exch def
+      /x exch def
+      /savematrix mtrx currentmatrix def
+      x y translate
+      xrad yrad scale
+      0 0 1 startangle endangle arcn
+      savematrix setmatrix
+   end
+ } def
+
+/TGMAX
+ { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
+ } def
+/TGMIN
+ { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
+ } def
+/TGSW { stringwidth pop } def
+/tgifstrw 0 def
+
+/bd { bind def } bind def
+
+/GS { gsave } bd
+/GR { grestore } bd
+/NP { newpath } bd
+/CP { closepath } bd
+/CHP { charpath } bd
+/CT { curveto } bd
+/L { lineto } bd
+/RL { rlineto } bd
+/M { moveto } bd
+/RM { rmoveto } bd
+/S { stroke } bd
+/F { fill } bd
+/TR { translate } bd
+/RO { rotate } bd
+/SC { scale } bd
+/MU { mul } bd
+/DI { div } bd
+/DU { dup } bd
+/NE { neg } bd
+/AD { add } bd
+/SU { sub } bd
+/PO { pop } bd
+/EX { exch } bd
+/CO { concat } bd
+/CL { clip } bd
+/EC { eoclip } bd
+/EF { eofill } bd
+/IM { image } bd
+/IMM { imagemask } bd
+/ARY { array } bd
+/SG { setgray } bd
+/RG { setrgbcolor } bd
+/SD { setdash } bd
+/W { setlinewidth } bd
+/SM { setmiterlimit } bd
+/SLC { setlinecap } bd
+/SLJ { setlinejoin } bd
+/SH { show } bd
+/FF { findfont } bd
+/MS { makefont setfont } bd
+/AR { arcto 4 {pop} repeat } bd
+/CURP { currentpoint } bd
+/FLAT { flattenpath strokepath clip newpath } bd
+/TGSM { tgiforigctm setmatrix } def
+/TGRM { savematrix setmatrix } def
+
+end
+
+%%EndProlog
+%%Page: 1 1
+
+%%PageBoundingBox: 16 518 271 809
+tgifdict begin
+/tgifsavedpage save def
+
+1 SM
+1 W
+
+0 SG
+
+72 0 MU 72 11.602 MU TR
+72 128 DI 100.000 MU 100 DI DU NE SC
+
+GS
+
+/tgiforigctm matrix currentmatrix def
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      356 160 M
+      356 96 L
+   TGSM
+   1 W
+   S
+GR
+
+% BOX
+1 SG
+NP 328 160 M 368 160 L 368 224 L 328 224 L CP F
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      440 160 M
+      440 96 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      396 160 M
+      396 96 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0.941 0.941 0.941 RG
+NP
+   118 74 M
+   99.33 64.67 100.00 58.67 120.00 56.00 CT
+   140.00 53.33 157.83 52.17 173.50 52.50 CT
+   189.17 52.83 201.67 53.50 211.00 54.50 CT
+   220.33 55.50 235.33 58.67
+   256 64 CT
+CP EF
+
+% POLY/OPEN-SPLINE
+0.941 0.941 0.941 RG
+NP
+   366 71 M
+   372.00 66.33 387.50 64.17 412.50 64.50 CT
+   437.50 64.83 455.17 67.00 465.50 71.00 CT
+   475.83 75.00 481.00 79.67 481.00 85.00 CT
+   481.00 90.33 478.67 94.17 474.00 96.50 CT
+   469.33 98.83 464.17 101.00 458.50 103.00 CT
+   452.83 105.00 444.33 107.33 433.00 110.00 CT
+   421.67 112.67 413.17 114.67 407.50 116.00 CT
+   401.83 117.33 391.17 117.67 375.50 117.00 CT
+   359.83 116.33 341.67 113.67
+   321 109 CT
+CP EF
+
+% POLY/OPEN-SPLINE
+0.941 0.941 0.941 RG
+NP
+   321 109 M
+   315.00 117.67 307.33 123.33 298.00 126.00 CT
+   288.67 128.67 274.17 129.17 254.50 127.50 CT
+   234.83 125.83 221.33 120.33
+   214 111 CT
+CP EF
+
+% POLY/OPEN-SPLINE
+0.941 0.941 0.941 RG
+NP
+   214 111 M
+   208.00 119.00 195.83 124.67 177.50 128.00 CT
+   159.17 131.33 139.50 131.50 118.50 128.50 CT
+   97.50 125.50 82.83 121.67 74.50 117.00 CT
+   66.17 112.33 77.67 105.33
+   109 96 CT
+CP EF
+
+% POLY/OPEN-SPLINE
+0.941 0.941 0.941 RG
+NP
+   113 96 M
+   64.33 94.67 38.50 91.67 35.50 87.00 CT
+   32.50 82.33 36.17 78.00 46.50 74.00 CT
+   56.83 70.00 82.33 70.00
+   123 74 CT
+CP EF
+
+% POLY/OPEN-SPLINE
+0.941 0.941 0.941 RG
+NP
+   256 64 M
+   265.33 59.33 274.67 55.50 284.00 52.50 CT
+   293.33 49.50 307.00 48.00 325.00 48.00 CT
+   343.00 48.00 358.17 50.50 370.50 55.50 CT
+   382.83 60.50 381.33 65.67
+   366 71 CT
+CP EF
+
+% BOX
+0.941 0.941 0.941 RG
+NP 118 64 M 312 64 L 312 111 L 118 111 L CP F
+
+% BOX
+0.941 0.941 0.941 RG
+NP 109 81 M 164 81 L 164 101 L 109 101 L CP F
+
+% BOX
+0.941 0.941 0.941 RG
+NP 307 65 M 371 65 L 371 110 L 307 110 L CP F
+
+% BOX
+1 SG
+NP 408 160 M 448 160 L 448 224 L 408 224 L CP F
+
+% BOX
+1 SG
+NP 368 160 M 408 160 L 408 224 L 368 224 L CP F
+
+% BOX
+0 SG
+GS
+   10 SM
+   GS
+      NP 64 160 M 448 160 L 448 224 L 64 224 L CP
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      256 204 M
+      GS
+        GS
+        0
+            /Helvetica FF [34 0 0 -34 0 0] MS
+            (PCER) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica FF [34 0 0 -34 0 0] MS
+            (PCER) SH
+      GR
+   GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      448 156 M
+      GS
+        GS
+        0
+            /Helvetica FF [10 0 0 -10 0 0] MS
+            (0) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica FF [10 0 0 -10 0 0] MS
+            (0) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      408 160 M
+      408 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      368 160 M
+      368 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      64 156 M
+      GS
+        GS
+        0
+            /Helvetica FF [10 0 0 -10 0 0] MS
+            (31) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica FF [10 0 0 -10 0 0] MS
+            (31) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      416 256 M
+      416 240 L
+      448 240 L
+      448 256 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      424 240 M
+      424 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      440 240 M
+      440 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      432 288 M
+      432 272 L
+   TGSM
+   1 W
+   S
+GR
+
+% ARC
+0 SG
+GS
+   GS
+      NP
+         432 256 16 16 0 180 TGAN
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      372 256 M
+      372 240 L
+      404 240 L
+      404 256 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      380 240 M
+      380 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      396 240 M
+      396 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      388 288 M
+      388 272 L
+   TGSM
+   1 W
+   S
+GR
+
+% ARC
+0 SG
+GS
+   GS
+      NP
+         388 256 16 16 0 180 TGAN
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      380 240 M
+      380 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      424 240 M
+      424 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      119 74 M
+      100.33 64.67 100.67 58.67 120.00 56.00 CT
+      139.33 53.33 156.83 52.17 172.50 52.50 CT
+      188.17 52.83 200.67 53.50 210.00 54.50 CT
+      219.33 55.50 234.67 58.67
+      256 64 CT
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      367 71 M
+      371.67 66.33 386.50 64.17 411.50 64.50 CT
+      436.50 64.83 454.33 67.00 465.00 71.00 CT
+      475.67 75.00 481.00 79.67 481.00 85.00 CT
+      481.00 90.33 478.67 94.17 474.00 96.50 CT
+      469.33 98.83 464.00 101.00 458.00 103.00 CT
+      452.00 105.00 443.50 107.33 432.50 110.00 CT
+      421.50 112.67 412.83 114.67 406.50 116.00 CT
+      400.17 117.33 389.67 117.67 375.00 117.00 CT
+      360.33 116.33 342.33 113.67
+      321 109 CT
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      321 109 M
+      315.00 117.67 307.33 123.33 298.00 126.00 CT
+      288.67 128.67 274.00 129.17 254.00 127.50 CT
+      234.00 125.83 220.67 120.33
+      214 111 CT
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      214 111 M
+      208.00 119.00 195.67 124.67 177.00 128.00 CT
+      158.33 131.33 138.67 131.50 118.00 128.50 CT
+      97.33 125.50 83.00 121.67 75.00 117.00 CT
+      67.00 112.33 78.67 105.33
+      110 96 CT
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      115 96 M
+      65.67 94.67 39.33 91.67 36.00 87.00 CT
+      32.67 82.33 36.33 78.00 47.00 74.00 CT
+      57.67 70.00 83.33 70.00
+      124 74 CT
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      256 64 M
+      265.33 59.33 274.67 55.50 284.00 52.50 CT
+      293.33 49.50 307.17 48.00 325.50 48.00 CT
+      343.83 48.00 358.83 50.50 370.50 55.50 CT
+      382.17 60.50 381.00 65.67
+      367 71 CT
+   TGSM
+   1 W
+   S
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      256 102 M
+      GS
+        GS
+        0
+            /Helvetica FF [34 0 0 -34 0 0] MS
+            (Event Sources) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica FF [34 0 0 -34 0 0] MS
+            (Event Sources) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      368 160 M
+      368 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      328 160 M
+      328 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      332 256 M
+      332 240 L
+      364 240 L
+      364 256 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      340 240 M
+      340 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      356 240 M
+      356 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      348 288 M
+      348 272 L
+   TGSM
+   1 W
+   S
+GR
+
+% ARC
+0 SG
+GS
+   GS
+      NP
+         348 256 16 16 0 180 TGAN
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      340 240 M
+      340 224 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      388 280 M
+      388 303 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   [4 12] 0 SD
+   NP
+      440 224 M
+      440 160 L
+   TGSM
+   1 W
+   S
+   [] 0 SD
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   [4 12] 0 SD
+   NP
+      396 224 M
+      396 160 L
+   TGSM
+   1 W
+   S
+   [] 0 SD
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   [4 12] 0 SD
+   NP
+      356 224 M
+      356 160 L
+   TGSM
+   1 W
+   S
+   [] 0 SD
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      256 352 M
+      256 336 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      440 300 M
+      440 308 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      72 300 M
+      72 308 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      440 300 M
+      317.33 308.00 194.67 308.00
+      72 300 CT
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      440 308 M
+      440.00 321.33 378.67 330.67
+      256 336 CT
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      72 308 M
+      72.00 321.33 133.33 330.67
+      256 336 CT
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      432 288 M
+      432 300 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      348 288 M
+      348 304 L
+   TGSM
+   1 W
+   S
+GR
+
+% OVAL
+0 SG
+NP 254 254 2 2 TGEL F
+
+% OVAL
+0 SG
+NP 238 254 2 2 TGEL F
+
+% OVAL
+0 SG
+NP 222 254 2 2 TGEL F
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+NP
+   224 416 M
+   272 416 L
+   280 428 L
+   288 416 L
+   336 416 L
+   304 464 L
+   256 464 L
+CP
+GS
+GR
+GS
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      280 440 M
+      280 448 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      276 444 M
+      284 444 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      64 184 M
+      80 192 L
+      64 200 L
+   TGSM
+   1 W
+   S
+GR
+
+% BOX
+0 SG
+GS
+   10 SM
+   GS
+      NP 296 496 M 328 496 L 328 560 L 296 560 L CP
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+NP
+   308 560 M
+   312 552 L
+   316 560 L
+CP 1 SG EF
+0 SG
+GS
+   NP
+      308 560 M
+      312 552 L
+      316 560 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      280 464 M
+      280 512 L
+      296 512 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      328 512 M
+      360 512 L
+      360 400 L
+      312 400 L
+      312 416 L
+   TGSM
+   1 W
+   S
+GR
+
+% TEXT
+NP
+0 SG
+GS
+   408 594 TR
+   [-0.000 -1.000 1.000 -0.000 -104 -66] CO
+   408 NE 594 NE TR
+GR
+   GS
+      1 W
+      408 594 TR
+      [-0.000 -1.000 1.000 -0.000 -104 -66] CO
+      0 14 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
+            (PCCR) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
+            (PCCR) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      232 384 M
+      232 368 L
+      264 368 L
+      264 384 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      240 368 M
+      240 352 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      256 368 M
+      256 352 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      248 416 M
+      248 400 L
+   TGSM
+   1 W
+   S
+GR
+
+% ARC
+0 SG
+GS
+   GS
+      NP
+         248 384 16 16 0 180 TGAN
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      240 352 M
+      192 352 L
+   TGSM
+   1 W
+   S
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      212 348 M
+      GS
+        GS
+        0
+            /Courier FF [10 0 0 -10 0 0] MS
+            (PCMR[0]) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier FF [10 0 0 -10 0 0] MS
+            (PCMR[0]) SH
+      GR
+   GR
+
+GR
+tgifsavedpage restore
+end
+showpage
+
+%%Trailer
+%MatchingCreationDate: Tue Aug 15 15:43:05 2017
+%%DocumentFonts: Courier
+%%+ Helvetica-Bold
+%%+ Helvetica
+%%EOF
diff --git a/docs/datasheet/figures/pipeline.eps b/docs/datasheet/figures/pipeline.eps
new file mode 100644
index 0000000..739b6aa
--- /dev/null
+++ b/docs/datasheet/figures/pipeline.eps
@@ -0,0 +1,2818 @@
+%!PS-Adobe-3.0 EPSF-3.0
+%%BoundingBox: 5 416 600 717
+%%Title: pipeline
+%%CreationDate: Tue Aug 15 15:43:05 2017
+%%Creator: Tgif-4.2.2-QPL written by William Chia-Wei Cheng (bill.cheng@acm.org)
+%%ProducedBy: (unknown)
+%%Pages: 1
+%%DocumentFonts: (atend)
+%%EndComments
+%%BeginPreview: 595 301 1 903
+% 000000007fffffffffffffffffffffffff800000000000000000000000000000
+% 00000000000000000000000000000000000000000000000fffffffffffffffff
+% fffffffffffffe00000000
+% 0000000100000000000000000000000000100000000000000000000000000000
+% 0000000000000000000000000000000000000000000000200000000000000000
+% 0000000000000080000000
+% 0000000400000000000000000000000000080000000000000000000000000000
+% 0000000000000000000000000000000000000000000000800000000000000000
+% 0000000000000020000000
+% 0000000800000000000000000000000000040000000000000000000000000000
+% 0000000000000000000000000000000000000000000000800000000000000000
+% 0000000000000020000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000001000000000000000000
+% 0000000000000010000000
+% 0000001000000000000000000000000000020000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000010000000000000000000000000000
+% 0000000000000000000000000000000000000000000002000000000000000000
+% 0000000000000008000000
+% 0000002000000000000000000000000000010000000000000000000000000000
+% 0000000000000000000000000000000000000000000006000000000000000000
+% 000000000000000c000000
+% 0000002010030002400081002000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000004c08020400800
+% 0000000000000004000000
+% 00000020153bd59bccf0a9bbf623000000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000044ddc2eeebb89
+% c000000000000004000000
+% 0000002014a345a252d0a52b2255800000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000044284294a88b5
+% 4000000000000004000000
+% 0000002014bb45a252d0a53b2647800000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000044e9c294e8bb1
+% c000000000000004000000
+% 00000020148b45a252d0a5232a54000000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000045a9429488ab5
+% 0000000000000004000000
+% 0000002014b947994cd0a4bb2523000000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000078eda296e8b49
+% c000000000000004000000
+% 0000002000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000000004000000
+% 0000002000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000000004000000
+% 0000002000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000000004000000
+% 0000002000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000000004000000
+% 0000002000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000000004000000
+% 0000002000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000000004000000
+% 0000002000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000000004000000
+% 0000002000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000000004000000
+% 0000002000000002082000008400000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000420000000010000
+% 0000004104000004000000
+% 0000002000000002002000008400000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000420000000010000
+% 0000004004000004000000
+% 000000200003122209200025ad80000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004012d64002d82690000
+% 0062c4412c000004000000
+% 0000002000030ce2092000e4a580000000010000000000000000000000000000
+% 0000000000000000000000000000000000000000000006072524002d0e490000
+% 00429c412400000c000000
+% 0000000000030da209200165ad80000000010000000000000000000000000000
+% 00000000000000000000000000000000000000000000020b2d64002d16494000
+% 00412c412c000008000000
+% 0000001000038cf79cf000b6b5c0000000020000000000000000000000000000
+% 000000000000000000000000000000000000000000000005b4ae003dcbf98000
+% 007116e7b4000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000001000000000c00000000
+% 0000000000000010000000
+% 0000000800000000000000000000000000040000000000000000000000000000
+% 0000000000000000000000000000000000000000000000800000000000000000
+% 0000000000000020000000
+% 0000000600000000000000000000000000080000000000000000000000000000
+% 0000000000000000000000000000000000000000000000400000000000000000
+% 0000000000000040000000
+% 0000000100000000000000000000000000100000000000000000000000000000
+% 0000000000000000000000000000000000000000000000200000000000000000
+% 0000000000000080000000
+% 000000007fffffffffffffffffffffffff800000000000000000000000000000
+% 00000000000000000000000000000000000000000000000fffffffffffffffff
+% fffffffffffffe00000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000180000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000060000000000000
+% 0000001000000000000000
+% 0000000000000008000000380000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000060000000000000
+% 0000001000000000000000
+% 0000000000000008000000380000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000060000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 0000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
+% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
+% ffffffffffffffffffffe0
+% c000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4000000000000008000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000001000000000000000
+% 4001ffffffffffffffffffffffffffffffff0007ffff0007ffffffffffffffff
+% fffffffffffffff000fffff0007fffffffffffffffffffffffffffffe0000000
+% 0000fffffffffffffe0000
+% 4003ffffffffffffffffffffffffffffffff8007ffff000fffffffffffffffff
+% fffffffffffffff800fffff001fffffffffffffffffffffffffffffff0000000
+% 0001ffffffffffffff0000
+% 401ffffffffffffffffffffffffffffffffff007ffff007fffffffffffffffff
+% fffffffffffffffe00fffff007fffffffffffffffffffffffffffffffe000000
+% 000fffffffffffffffc000
+% 403ffffffffffffffffffffffffffffffffff807ffff00ffffffffffffffffff
+% ffffffffffffffff00fffff00fffffffffffffffffffffffffffffffff000000
+% 001fffffffffffffffe000
+% 403ffffffffffffffffffffffffffffffffff807ffff00ffffffffffffffffff
+% ffffffffffffffff80fffff00fffffffffffffffffffffffffffffffff000000
+% 001ffffffffffffffff000
+% 407ffffffffffffffffffffffffffffffffffc07ffff01ffffffffffffffffff
+% ffffffffffffffffc0fffff01fffffffffffffffffffffffffffffffff800000
+% 003ffffffffffffffff000
+% 407ffffffffffffffffffffffffffffffffffc07ffff01ffffffffffffffffff
+% ffffffffffffffffc0fffff03fffffffffffffffffffffffffffffffff800000
+% 003ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40ffffffffffffffffffffffffffffffffffffffffff03ffffffffffffffffff
+% fffffffffffffffffffffff03fffffffffffffffffffffffffffffffffffffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe87ffff03ffffffffffffffffff
+% fffffffffffffffff8fffff03fffffffffffffffffffffffffffffffffd0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffff7ffff03ffffffffffffffffff
+% fffffffffffffffffffffff03ffffffffffffffffffffffffffffffffffeffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffef7ffff03ffffffffffffffffff
+% fffffffffffffffffffffff03fffffffffffffffffffffffffffffffffdeffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe87ffff03ffffffffffffffffff
+% fffffffffffffffff8fffff03fffffffffffffffffffffffffffffffffd0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe07ffff03ffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
+% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
+% fffffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffffffffe00000003ffffffffffffffffff
+% ffffffffffffffffe00000003fffffffffffffffffffffffffffffffffc00000
+% 007ffffffffffffffff800
+% 407ffffffffffffffffffffffffffffffffffc00000001ffffffffffffffffff
+% ffffffffffffffffc00000003fffffffffffffffffffffffffffffffff800000
+% 003ffffffffffffffff800
+% 407ffffffffffffffffffffffffffffffffffc00000001ffffffffffffffffff
+% ffffffffffffffffc00000001fffffffffffffffffffffffffffffffff800000
+% 003ffffffffffffffff000
+% 403ffffffffffffffffffffffffffffffffff800000000ffffffffffffffffff
+% ffffffffffffffff800000000fffffffffffffffffffffffffffffffff000000
+% 001ffffffffffffffff000
+% 403ffffffffffffffffffffffffffffffffff800000000ffffffffffffffffff
+% ffffffffffffffff000000000fffffffffffffffffffffffffffffffff000000
+% 001fffffffffffffffe000
+% 401ffffffffffffffffffffffffffffffffff0000000007fffffffffffffffff
+% ffffffffffffffff0000000007fffffffffffffffffffffffffffffffe000000
+% 000fffffffffffffffe000
+% 4007ffffffffffffffffffffffffffffffffc0000000001fffffffffffffffff
+% fffffffffffffffc0000000003fffffffffffffffffffffffffffffff8000000
+% 0003ffffffffffffff8000
+% 4001ffffffffffffffffffffffffffffffff000000000007ffffffffffffffff
+% fffffffffffffff000000000007fffffffffffffffffffffffffffffe0000000
+% 0000fffffffffffffe0000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+%%EndImage
+%%EndPreview
+%%BeginProlog
+
+/tgifdict 59 dict def
+tgifdict begin
+
+/tgifellipsedict 6 dict def
+tgifellipsedict /mtrx matrix put
+
+/TGEL % tgifellipse
+ { tgifellipsedict begin
+      /yrad exch def
+      /xrad exch def
+      /y exch def
+      /x exch def
+      /savematrix mtrx currentmatrix def
+      x y translate
+      xrad yrad scale
+      0 0 1 0 360 arc
+      savematrix setmatrix
+   end
+ } def
+
+/tgifarrowtipdict 8 dict def
+tgifarrowtipdict /mtrx matrix put
+
+/TGAT % tgifarrowtip
+ { tgifarrowtipdict begin
+      /dy exch def
+      /dx exch def
+      /h exch def
+      /w exch def
+      /y exch def
+      /x exch def
+      /savematrix mtrx currentmatrix def
+      x y translate
+      dy dx atan rotate
+      0 0 moveto
+      w neg h lineto
+      w neg h neg lineto
+      savematrix setmatrix
+   end
+ } def
+
+/tgifarcdict 8 dict def
+tgifarcdict /mtrx matrix put
+
+/TGAN % tgifarcn
+ { tgifarcdict begin
+      /endangle exch def
+      /startangle exch def
+      /yrad exch def
+      /xrad exch def
+      /y exch def
+      /x exch def
+      /savematrix mtrx currentmatrix def
+      x y translate
+      xrad yrad scale
+      0 0 1 startangle endangle arc
+      savematrix setmatrix
+   end
+ } def
+
+/TGAR % tgifarc
+ { tgifarcdict begin
+      /endangle exch def
+      /startangle exch def
+      /yrad exch def
+      /xrad exch def
+      /y exch def
+      /x exch def
+      /savematrix mtrx currentmatrix def
+      x y translate
+      xrad yrad scale
+      0 0 1 startangle endangle arcn
+      savematrix setmatrix
+   end
+ } def
+
+/TGMAX
+ { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
+ } def
+/TGMIN
+ { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
+ } def
+/TGSW { stringwidth pop } def
+/tgifstrw 0 def
+
+/bd { bind def } bind def
+
+/GS { gsave } bd
+/GR { grestore } bd
+/NP { newpath } bd
+/CP { closepath } bd
+/CHP { charpath } bd
+/CT { curveto } bd
+/L { lineto } bd
+/RL { rlineto } bd
+/M { moveto } bd
+/RM { rmoveto } bd
+/S { stroke } bd
+/F { fill } bd
+/TR { translate } bd
+/RO { rotate } bd
+/SC { scale } bd
+/MU { mul } bd
+/DI { div } bd
+/DU { dup } bd
+/NE { neg } bd
+/AD { add } bd
+/SU { sub } bd
+/PO { pop } bd
+/EX { exch } bd
+/CO { concat } bd
+/CL { clip } bd
+/EC { eoclip } bd
+/EF { eofill } bd
+/IM { image } bd
+/IMM { imagemask } bd
+/ARY { array } bd
+/SG { setgray } bd
+/RG { setrgbcolor } bd
+/SD { setdash } bd
+/W { setlinewidth } bd
+/SM { setmiterlimit } bd
+/SLC { setlinecap } bd
+/SLJ { setlinejoin } bd
+/SH { show } bd
+/FF { findfont } bd
+/MS { makefont setfont } bd
+/AR { arcto 4 {pop} repeat } bd
+/CURP { currentpoint } bd
+/FLAT { flattenpath strokepath clip newpath } bd
+/TGSM { tgiforigctm setmatrix } def
+/TGRM { savematrix setmatrix } def
+
+end
+
+%%EndProlog
+%%Page: 1 1
+
+%%PageBoundingBox: 5 416 600 717
+tgifdict begin
+/tgifsavedpage save def
+
+1 SM
+1 W
+
+0 SG
+
+72 0 MU 72 11 MU TR
+72 128 DI 100.000 MU 100 DI DU NE SC
+
+GS
+
+/tgiforigctm matrix currentmatrix def
+
+% BOX
+0.937 0.722 1.000 RG
+NP 288 256 M 320 256 L 320 560 L 288 560 L CP F
+
+% BOX
+0.937 0.722 1.000 RG
+NP 592 256 M 624 256 L 624 560 L 592 560 L CP F
+
+% BOX
+0.937 0.722 1.000 RG
+NP 888 400 M 920 400 L 920 560 L 888 560 L CP F
+
+% RCBOX
+0.941 0.976 0.910 RG
+NP
+   564 256 M
+   580 256 580 616 16 AR
+   580 600 L
+   580 616 332 616 16 AR
+   348 616 L
+   332 616 332 256 16 AR
+   332 272 L
+   332 256 580 256 16 AR
+CP F
+
+% RCBOX
+0.941 0.976 0.910 RG
+NP
+   860 256 M
+   876 256 876 616 16 AR
+   876 600 L
+   876 616 636 616 16 AR
+   652 616 L
+   636 616 636 256 16 AR
+   636 272 L
+   636 256 876 256 16 AR
+CP F
+
+% RCBOX
+0.941 0.976 0.910 RG
+NP
+   1036 256 M
+   1052 256 1052 616 16 AR
+   1052 600 L
+   1052 616 932 616 16 AR
+   948 616 L
+   932 616 932 256 16 AR
+   932 272 L
+   932 256 1052 256 16 AR
+CP F
+
+% RCBOX
+0.941 0.976 0.910 RG
+NP
+   260 256 M
+   276 256 276 616 16 AR
+   276 600 L
+   276 616 24 616 16 AR
+   40 616 L
+   24 616 24 256 16 AR
+   24 272 L
+   24 256 276 256 16 AR
+CP F
+
+% RCBOX
+0.831 0.831 0.824 RG
+GS
+   GS
+      NP
+         260 256 M
+         276 256 276 616 16 AR
+         276 600 L
+         276 616 24 616 16 AR
+         40 616 L
+         24 616 24 256 16 AR
+         24 272 L
+         24 256 276 256 16 AR
+      CP
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      820 280 M
+      -88 0 atan DU cos 8.000 MU 820 exch SU
+      exch sin 8.000 MU 192 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      820 192 8.000 3.000 0 -88 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      820 192 8.000 3.000 0 -88 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      816 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (addr) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (addr) SH
+      GR
+   GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      960 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rvalid) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rvalid) SH
+      GR
+   GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      872 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (grant) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (grant) SH
+      GR
+   GR
+
+% RCBOX
+0.000 0.412 0.706 RG
+GS
+   GS
+      NP
+         1008 136 M
+         1024 136 1024 192 16 AR
+         1024 176 L
+         1024 192 784 192 16 AR
+         800 192 L
+         784 192 784 136 16 AR
+         784 152 L
+         784 136 1024 136 16 AR
+      CP
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      888 160 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Data Interface) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Data Interface) SH
+      GR
+   GR
+
+% BOX
+0 SG
+GS
+   10 SM
+   GS
+      NP 12 224 M 1064 224 L 1064 664 L 12 664 L CP
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      184 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (addr) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (addr) SH
+      GR
+   GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      120 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rvalid) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rvalid) SH
+      GR
+   GR
+
+% RCBOX
+0.000 0.412 0.706 RG
+GS
+   GS
+      NP
+         248 136 M
+         264 136 264 192 16 AR
+         264 176 L
+         264 192 56 192 16 AR
+         72 192 L
+         56 192 56 136 16 AR
+         56 152 L
+         56 136 264 136 16 AR
+      CP
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      160 160 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Instruction Interface) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Instruction Interface) SH
+      GR
+   GR
+
+% BOX
+0.435 0.212 0.498 RG
+GS
+   10 SM
+   GS
+      NP 288 256 M 320 256 L 320 560 L 288 560 L CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+GS
+   294 415 TR
+   [1.000 0.000 0.000 1.023 0 4] CO
+   294 NE 415 NE TR
+GR
+   GS
+      1 W
+      294 415 TR
+      [1.000 0.000 0.000 1.023 0 4] CO
+      0 14 M
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (IF) SH
+      GR
+      0 17 RM
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (ID) SH
+      GR
+   GR
+
+% BOX
+0.435 0.212 0.498 RG
+GS
+   10 SM
+   GS
+      NP 592 256 M 624 256 L 624 560 L 592 560 L CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      598 429 M
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (ID) SH
+      GR
+      0 17 RM
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (EX) SH
+      GR
+   GR
+
+% BOX
+0.435 0.212 0.498 RG
+GS
+   10 SM
+   GS
+      NP 888 400 M 920 400 L 920 560 L 888 560 L CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      894 429 M
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (EX) SH
+      GR
+      0 17 RM
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (WB) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      172 280 M
+      -88 0 atan DU cos 8.000 MU 172 exch SU
+      exch sin 8.000 MU 192 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      172 192 8.000 3.000 0 -88 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      172 192 8.000 3.000 0 -88 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      116 192 M
+      88 0 atan DU cos 8.000 MU 116 exch SU
+      exch sin 8.000 MU 280 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      116 280 8.000 3.000 0 88 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      116 280 8.000 3.000 0 88 TGAT
+   CP F
+GR
+
+% RCBOX
+0.831 0.831 0.824 RG
+GS
+   GS
+      NP
+         564 256 M
+         580 256 580 616 16 AR
+         580 600 L
+         580 616 332 616 16 AR
+         348 616 L
+         332 616 332 256 16 AR
+         332 272 L
+         332 256 580 256 16 AR
+      CP
+      S
+   GR
+GR
+
+% RCBOX
+0.831 0.831 0.824 RG
+GS
+   GS
+      NP
+         860 256 M
+         876 256 876 616 16 AR
+         876 600 L
+         876 616 636 616 16 AR
+         652 616 L
+         636 616 636 256 16 AR
+         636 272 L
+         636 256 876 256 16 AR
+      CP
+      S
+   GR
+GR
+
+% RCBOX
+0.831 0.831 0.824 RG
+GS
+   GS
+      NP
+         1036 256 M
+         1052 256 1052 616 16 AR
+         1052 600 L
+         1052 616 932 616 16 AR
+         948 616 L
+         932 616 932 256 16 AR
+         932 272 L
+         932 256 1052 256 16 AR
+      CP
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0.435 0.212 0.498 RG
+GS
+   NP
+      296 560 M
+      304 548 L
+      312 560 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.435 0.212 0.498 RG
+GS
+   NP
+      600 560 M
+      608 548 L
+      616 560 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.435 0.212 0.498 RG
+GS
+   NP
+      896 560 M
+      904 548 L
+      912 560 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      376 568 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (id_ready) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (id_ready) SH
+      GR
+   GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      680 568 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (ex_ready) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (ex_ready) SH
+      GR
+   GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      980 568 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (wb_ready) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (wb_ready) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      496 384 M
+      496 560 L
+      0 -24 atan DU cos 10.000 MU 472 exch SU
+      exch sin 10.000 MU 560 exch SU L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+GS
+   TGSM
+   NP
+      472 560 10.000 4.000 -24 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      472 560 10.000 4.000 -24 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      728 576 M
+      0 -256 atan DU cos 10.000 MU 472 exch SU
+      exch sin 10.000 MU 576 exch SU L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+GS
+   TGSM
+   NP
+      472 576 10.000 4.000 -256 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      472 576 10.000 4.000 -256 0 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      456 424 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (!stall) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (!stall) SH
+      GR
+   GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      744 416 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (granted) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (granted) SH
+      GR
+   GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      988 416 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rvalid) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rvalid) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      1028 576 M
+      0 -252 atan DU cos 10.000 MU 776 exch SU
+      exch sin 10.000 MU 576 exch SU L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+GS
+   TGSM
+   NP
+      776 576 10.000 4.000 -252 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      776 576 10.000 4.000 -252 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.235 0.353 0.059 RG
+GS
+   NP
+      424 576 M
+      424 608 L
+      464 608 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.235 0.353 0.059 RG
+GS
+   NP
+      448 608 M
+      568 608 L
+      568 520 L
+      0 24 atan DU cos 10.000 MU 592 exch SU
+      exch sin 10.000 MU 520 exch SU L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+GS
+   TGSM
+   NP
+      592 520 10.000 4.000 24 0 TGAT
+   1 SG CP F
+   0.235 0.353 0.059 RG
+   NP
+      592 520 10.000 4.000 24 0 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      520 600 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (id_valid) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (id_valid) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0.235 0.353 0.059 RG
+GS
+   NP
+      728 576 M
+      728 608 L
+      752 608 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.235 0.353 0.059 RG
+GS
+   NP
+      736 608 M
+      864 608 L
+      864 520 L
+      0 24 atan DU cos 10.000 MU 888 exch SU
+      exch sin 10.000 MU 520 exch SU L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+GS
+   TGSM
+   NP
+      888 520 10.000 4.000 24 0 TGAT
+   1 SG CP F
+   0.235 0.353 0.059 RG
+   NP
+      888 520 10.000 4.000 24 0 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      816 600 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (ex_valid) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (ex_valid) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0.235 0.353 0.059 RG
+GS
+   NP
+      40 568 M
+      40 608 L
+      168 608 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.235 0.353 0.059 RG
+GS
+   NP
+      160 608 M
+      256 608 L
+      256 520 L
+      0 32 atan DU cos 10.000 MU 288 exch SU
+      exch sin 10.000 MU 520 exch SU L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+GS
+   TGSM
+   NP
+      288 520 10.000 4.000 32 0 TGAT
+   1 SG CP F
+   0.235 0.353 0.059 RG
+   NP
+      288 520 10.000 4.000 32 0 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      208 600 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (if_valid) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (if_valid) SH
+      GR
+   GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      80 560 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (if_ready) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (if_ready) SH
+      GR
+   GR
+
+% RCBOX
+0.733 0.871 0.506 RG
+NP
+   198 280 M
+   208 280 208 432 10 AR
+   208 422 L
+   208 432 80 432 10 AR
+   90 432 L
+   80 432 80 280 10 AR
+   80 290 L
+   80 280 208 280 10 AR
+CP F
+
+% POLY/OPEN-SPLINE
+0.000 0.565 0.000 RG
+GS
+   NP
+      136 432 M
+      144 420 L
+      152 432 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      144 320 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (Prefetch) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (Prefetch) SH
+      GR
+      0 29 RM
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (Buffer) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (Buffer) SH
+      GR
+   GR
+
+% RCBOX
+0.000 0.565 0.000 RG
+GS
+   GS
+      NP
+         198 280 M
+         208 280 208 432 10 AR
+         208 422 L
+         208 432 80 432 10 AR
+         90 432 L
+         80 432 80 280 10 AR
+         80 290 L
+         80 280 208 280 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0.435 0.212 0.498 RG
+   GS
+      1 W
+      152 472 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (valid) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (valid) SH
+      GR
+   GR
+
+% RCBOX
+0.722 0.800 0.600 RG
+NP
+   550 328 M
+   560 328 560 384 10 AR
+   560 374 L
+   560 384 432 384 10 AR
+   442 384 L
+   432 384 432 328 10 AR
+   432 338 L
+   432 328 560 328 10 AR
+CP F
+GS
+   GS
+      NP
+         550 328 M
+         560 328 560 384 10 AR
+         560 374 L
+         560 384 432 384 10 AR
+         442 384 L
+         432 384 432 328 10 AR
+         432 338 L
+         432 328 560 328 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% RCBOX
+0.235 0.353 0.059 RG
+GS
+   GS
+      NP
+         550 328 M
+         560 328 560 384 10 AR
+         560 374 L
+         560 384 432 384 10 AR
+         442 384 L
+         432 384 432 328 10 AR
+         432 338 L
+         432 328 560 328 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      496 355 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Forwarding) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Forwarding) SH
+      GR
+      0 23 RM
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Control) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Control) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      964 192 M
+      88 0 atan DU cos 8.000 MU 964 exch SU
+      exch sin 8.000 MU 280 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      964 280 8.000 3.000 0 88 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      964 280 8.000 3.000 0 88 TGAT
+   CP F
+GR
+
+% RCBOX
+0.647 0.718 0.839 RG
+NP
+   1030 280 M
+   1040 280 1040 384 10 AR
+   1040 374 L
+   1040 384 768 384 10 AR
+   778 384 L
+   768 384 768 280 10 AR
+   768 290 L
+   768 280 1040 280 10 AR
+CP F
+
+% RCBOX
+0.122 0.251 0.478 RG
+GS
+   GS
+      NP
+         1030 280 M
+         1040 280 1040 384 10 AR
+         1040 374 L
+         1040 384 768 384 10 AR
+         778 384 L
+         768 384 768 280 10 AR
+         768 290 L
+         768 280 1040 280 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      824 312 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (LSU) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (LSU) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   [4 4] 0 SD
+   NP
+      904 280 M
+      904 384 L
+   TGSM
+   2 W
+   S
+   [] 0 SD
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      868 192 M
+      88 0 atan DU cos 8.000 MU 868 exch SU
+      exch sin 8.000 MU 280 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      868 280 8.000 3.000 0 88 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      868 280 8.000 3.000 0 88 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      896 524 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (E) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (E) SH
+      GR
+   GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      600 524 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (E) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (E) SH
+      GR
+   GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      296 524 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (E) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (E) SH
+      GR
+   GR
+
+% ARC
+0 SG
+GS
+   GS
+      NP
+         760 568 16 16 -90 -270 TGAR
+      2 W
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      760 552 M
+      776 552 L
+      776 584 L
+      760 584 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      744 568 M
+      728 568 L
+      728 576 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      792 384 M
+      792 560 L
+      0 -16 atan DU cos 10.000 MU 776 exch SU
+      exch sin 10.000 MU 560 exch SU L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+GS
+   TGSM
+   NP
+      776 560 10.000 4.000 -16 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      776 560 10.000 4.000 -16 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      1028 384 M
+      1028 520 L
+      1028 520 L
+      1028 576 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% ARC
+0 SG
+GS
+   GS
+      NP
+         456 568 16 16 -90 -270 TGAR
+      2 W
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      456 552 M
+      472 552 L
+      472 584 L
+      456 584 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      424 576 M
+      0 -264 atan DU cos 10.000 MU 160 exch SU
+      exch sin 10.000 MU 576 exch SU L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+GS
+   TGSM
+   NP
+      160 576 10.000 4.000 -264 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      160 576 10.000 4.000 -264 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      440 568 M
+      424 568 L
+      424 576 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% ARC
+0 SG
+GS
+   GS
+      NP
+         144 568 16 16 -90 -270 TGAR
+      2 W
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      144 552 M
+      160 552 L
+      160 584 L
+      144 584 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      184 432 M
+      184 560 L
+      0 -24 atan DU cos 10.000 MU 160 exch SU
+      exch sin 10.000 MU 560 exch SU L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+GS
+   TGSM
+   NP
+      160 560 10.000 4.000 -24 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      160 560 10.000 4.000 -24 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      128 568 M
+      40 568 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      600 492 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (C) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (C) SH
+      GR
+   GR
+
+% OVAL
+0.659 0.196 0.176 RG
+GS
+   GS
+      NP 540 496 4 4 TGEL
+      2 W
+      S
+   GR
+GR
+
+% ARC
+0.659 0.196 0.176 RG
+GS
+   GS
+      NP
+         560 488 16 16 -90 90 TGAN
+      2 W
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0.659 0.196 0.176 RG
+GS
+   NP
+      560 472 M
+      544 472 L
+      544 504 L
+      560 504 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.659 0.196 0.176 RG
+GS
+   NP
+      512 576 M
+      512 480 L
+      544 480 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.235 0.353 0.059 RG
+GS
+   NP
+      568 520 M
+      528 520 L
+      528 496 L
+      536 496 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.659 0.196 0.176 RG
+GS
+   NP
+      576 488 M
+      592 488 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% OVAL
+0.659 0.196 0.176 RG
+GS
+   GS
+      NP 836 496 4 4 TGEL
+      2 W
+      S
+   GR
+GR
+
+% ARC
+0.659 0.196 0.176 RG
+GS
+   GS
+      NP
+         856 488 16 16 -90 90 TGAN
+      2 W
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0.659 0.196 0.176 RG
+GS
+   NP
+      856 472 M
+      840 472 L
+      840 504 L
+      856 504 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.659 0.196 0.176 RG
+GS
+   NP
+      808 576 M
+      808 480 L
+      840 480 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.659 0.196 0.176 RG
+GS
+   NP
+      872 488 M
+      888 488 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.235 0.353 0.059 RG
+GS
+   NP
+      864 520 M
+      824 520 L
+      824 496 L
+      832 496 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% OVAL
+0.659 0.196 0.176 RG
+GS
+   GS
+      NP 236 496 4 4 TGEL
+      2 W
+      S
+   GR
+GR
+
+% ARC
+0.659 0.196 0.176 RG
+GS
+   GS
+      NP
+         256 488 16 16 -90 90 TGAN
+      2 W
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0.659 0.196 0.176 RG
+GS
+   NP
+      256 472 M
+      240 472 L
+      240 504 L
+      256 504 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.659 0.196 0.176 RG
+GS
+   NP
+      208 576 M
+      208 480 L
+      240 480 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.659 0.196 0.176 RG
+GS
+   NP
+      272 488 M
+      288 488 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.235 0.353 0.059 RG
+GS
+   NP
+      256 520 M
+      224 520 L
+      224 496 L
+      232 496 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      296 492 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (C) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (C) SH
+      GR
+   GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      896 492 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (C) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
+            (C) SH
+      GR
+   GR
+
+GR
+tgifsavedpage restore
+end
+showpage
+
+%%Trailer
+%MatchingCreationDate: Tue Aug 15 15:43:05 2017
+%%DocumentFonts: Helvetica-Bold
+%%+ Courier-Bold
+%%EOF
diff --git a/docs/datasheet/figures/ri5cy_overview.eps b/docs/datasheet/figures/ri5cy_overview.eps
new file mode 100644
index 0000000..0b15ff1
--- /dev/null
+++ b/docs/datasheet/figures/ri5cy_overview.eps
@@ -0,0 +1,3447 @@
+%!PS-Adobe-3.0 EPSF-3.0
+%%BoundingBox: 5 416 600 717
+%%Title: ri5cy_overview
+%%CreationDate: Tue Aug 15 15:43:05 2017
+%%Creator: Tgif-4.2.2-QPL written by William Chia-Wei Cheng (bill.cheng@acm.org)
+%%ProducedBy: (unknown)
+%%Pages: 1
+%%DocumentFonts: (atend)
+%%EndComments
+%%BeginPreview: 595 301 1 903
+% 0001fffffffffffffffffffffffffe0000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000000fffffffffffffffff
+% fffffffff8000000000000
+% 000400000000000000000000000000c000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000200000000000000000
+% 0000000002000000000000
+% 0010000000000000000000000000002000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000800000000000000000
+% 0000000000800000000000
+% 0020000000000000000000000000001000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000800000000000000000
+% 0000000000800000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000001000000000000000000
+% 0000000000400000000000
+% 0040000000000000000000000000000800000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000400000000000000000000000000000000
+% 0000000000000000000000000000000000000000000002000000000000000000
+% 0000000000200000000000
+% 0080000000000000000000000000000400000000000000000000000000000000
+% 0000000000000000000000000000000000000000000006000000000000000000
+% 0000000000300000000000
+% 0080c00800090002040080000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000004c08020400800
+% 0000000000100000000000
+% 0080dcef564d32c2aeeb988c0000000000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000044ddc2eeebb89
+% c000000000100000000000
+% 0080d28916a94a4294a889540000000000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000044284294a88b5
+% 4000000000100000000000
+% 0080d2e916894a4294e8991c0000000000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000044e9c294e8bb1
+% c000000000100000000000
+% 0080d22916a94a429488a9500000000000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000045a9429488ab5
+% 0000000000100000000000
+% 0080d2e51e45324292e8948c0000000000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000040000078eda296e8b49
+% c000000000100000000000
+% 0080000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000100000000000
+% 0080000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000100000000000
+% 0080000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000100000000000
+% 0080000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000100000000000
+% 0080000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000100000000000
+% 0080000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000100000000000
+% 0080000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000100000000000
+% 0080000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000000000000000000
+% 0000000000100000000000
+% 0080000001030000000610000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000420000020600000
+% 0020200000100000000000
+% 0080000001030000000610000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004000420000020600000
+% 0020200000100000000000
+% 008000018b1304000096b6000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000004012d64005d62608000
+% 19a1204000100000000000
+% 0080000109731c00039696000000000400000000000000000000000000000000
+% 0000000000000000000000000000000000000000000006072524005d2e638000
+% 11af21c000300000000000
+% 000000010bb374000596b6000000000400000000000000000000000000000000
+% 00000000000000000000000000000000000000000000020b2d640029766e8000
+% 11ab2ac000200000000000
+% 00400001cd599e0002ded7000000000800000000000000000000000000000000
+% 000000000000000000000000000000000000000000000005b4ae0029ab33c000
+% 3cfd196000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000001000000000000000000
+% 0000000000400000000000
+% 0020000000000000000000000000001000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000800000000000000000
+% 0000000000800000000000
+% 0018000000000000000000000000002000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000400000000000000000
+% 0000000001000000000000
+% 000400000000000000000000000000c000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000200000000000000000
+% 0000000002000000000000
+% 0001fffffffffffffffffffffffffe0000000000000000000000000000000000
+% 00000000000000000000000000000000000000000000000fffffffffffffffff
+% fffffffff8000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000006000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000060000030000000
+% 0000000000000000000000
+% 000000000000000000e000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000060000030000000
+% 0000000000000000000000
+% 000000000000000000e000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000060000030000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
+% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
+% ffffffffffffffffffffe0
+% c000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4001fffffffffffffffffffffffffffc001ffffc001fffffffffffffffffffff
+% fffffffffffffff000fffff0007fffffffffffffffffffffffffffffe000ffff
+% e000fffffffffffffe0000
+% 4003fffffffffffffffffffffffffffe001ffffc003fffffffffffffffffffff
+% fffffffffffffff800fffff001fffffffffffffffffffffffffffffff000ffff
+% e001ffffffffffffff0000
+% 401fffffffffffffffffffffffffffff801ffffc01ffffffffffffffffffffff
+% fffffffffffffffe00fffff007fffffffffffffffffffffffffffffffe00ffff
+% e00fffffffffffffffc000
+% 403fffffffffffffffffffffffffffffe01ffffc03ffffffffffffffffffffff
+% ffffffffffffffff00fffff00fffffffffffffffffffffffffffffffff00ffff
+% e01fffffffffffffffe000
+% 403fffffffffffffffffffffffffffffe01ffffc03ffffffffffffffffffffff
+% ffffffffffffffff80fffff00fffffffffffffffffffffffffffffffff00ffff
+% e01ffffffffffffffff000
+% 407ffffffffffffffffffffffffffffff01ffffc07ffffffffffffffffffffff
+% ffffffffffffffffc0fffff01fffffffffffffffffffffffffffffffff80ffff
+% e03ffffffffffffffff000
+% 407ffffffffffffffffffffffffffffff01ffffc07ffffffffffffffffffffff
+% ffffffffffffffffc0fffff03fffffffffffffffffffffffffffffffff80ffff
+% e03ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff9dffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff9dffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff91ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff9dffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff9dffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffecfffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffecfffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffecfffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffecfffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffecfffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffeffffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffeffffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffeffffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffecfffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 40fffffffffffffffffffffffffffffff81ffffc0fffffffffffffffffffffff
+% ffffffffffffffffe0fffff03fffffffffffffffffffffffffffffffffc0ffff
+% e07ffffffffffffffff800
+% 407ffffffffffffffffffffffffffffff01ffffc07ffffffffffffffffffffff
+% ffffffffffffffffc0fffff03fffffffffffffffffffffffffffffffff80ffff
+% e03ffffffffffffffff800
+% 407ffffffffffffffffffffffffffffff01ffffc07ffffffffffffffffffffff
+% ffffffffffffffffc0fffff01fffffffffffffffffffffffffffffffff80ffff
+% e03ffffffffffffffff000
+% 403fffffffffffffffffffffffffffffe01ffffc03ffffffffffffffffffffff
+% ffffffffffffffff80fffff00fffffffffffffffffffffffffffffffff00ffff
+% e01ffffffffffffffff000
+% 403fffffffffffffffffffffffffffffe01ffffc03ffffffffffffffffffffff
+% ffffffffffffffff00fffff00fffffffffffffffffffffffffffffffff00ffff
+% e01fffffffffffffffe000
+% 401fffffffffffffffffffffffffffffc01ffffc01ffffffffffffffffffffff
+% ffffffffffffffff00fffff007fffffffffffffffffffffffffffffffe00ffff
+% e00fffffffffffffffe000
+% 4007ffffffffffffffffffffffffffff001ffffc00ffffffffffffffffffffff
+% fffffffffffffffc00fffff003fffffffffffffffffffffffffffffff800ffff
+% e003ffffffffffffff8000
+% 4001fffffffffffffffffffffffffffc001ffffc001fffffffffffffffffffff
+% fffffffffffffff000fffff0007fffffffffffffffffffffffffffffe000ffff
+% e000fffffffffffffe0000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 000000000c000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 400000000000000000000000000000000000000000000fffffffffffffffffff
+% ffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 000000000c000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000001800000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000001800000000000000000000000000000000000000000000000000000000
+% 0000000000000000020000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000001800000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+% 4000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000000000000000000000000000000000000000000000
+% 0000000000000000000000
+%%EndImage
+%%EndPreview
+%%BeginProlog
+
+/tgifdict 56 dict def
+tgifdict begin
+
+/tgifellipsedict 6 dict def
+tgifellipsedict /mtrx matrix put
+
+/TGEL % tgifellipse
+ { tgifellipsedict begin
+      /yrad exch def
+      /xrad exch def
+      /y exch def
+      /x exch def
+      /savematrix mtrx currentmatrix def
+      x y translate
+      xrad yrad scale
+      0 0 1 0 360 arc
+      savematrix setmatrix
+   end
+ } def
+
+/tgifarrowtipdict 8 dict def
+tgifarrowtipdict /mtrx matrix put
+
+/TGAT % tgifarrowtip
+ { tgifarrowtipdict begin
+      /dy exch def
+      /dx exch def
+      /h exch def
+      /w exch def
+      /y exch def
+      /x exch def
+      /savematrix mtrx currentmatrix def
+      x y translate
+      dy dx atan rotate
+      0 0 moveto
+      w neg h lineto
+      w neg h neg lineto
+      savematrix setmatrix
+   end
+ } def
+
+/TGMAX
+ { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
+ } def
+/TGMIN
+ { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
+ } def
+/TGSW { stringwidth pop } def
+/tgifstrw 0 def
+
+/bd { bind def } bind def
+
+/GS { gsave } bd
+/GR { grestore } bd
+/NP { newpath } bd
+/CP { closepath } bd
+/CHP { charpath } bd
+/CT { curveto } bd
+/L { lineto } bd
+/RL { rlineto } bd
+/M { moveto } bd
+/RM { rmoveto } bd
+/S { stroke } bd
+/F { fill } bd
+/TR { translate } bd
+/RO { rotate } bd
+/SC { scale } bd
+/MU { mul } bd
+/DI { div } bd
+/DU { dup } bd
+/NE { neg } bd
+/AD { add } bd
+/SU { sub } bd
+/PO { pop } bd
+/EX { exch } bd
+/CO { concat } bd
+/CL { clip } bd
+/EC { eoclip } bd
+/EF { eofill } bd
+/IM { image } bd
+/IMM { imagemask } bd
+/ARY { array } bd
+/SG { setgray } bd
+/RG { setrgbcolor } bd
+/SD { setdash } bd
+/W { setlinewidth } bd
+/SM { setmiterlimit } bd
+/SLC { setlinecap } bd
+/SLJ { setlinejoin } bd
+/SH { show } bd
+/FF { findfont } bd
+/MS { makefont setfont } bd
+/AR { arcto 4 {pop} repeat } bd
+/CURP { currentpoint } bd
+/FLAT { flattenpath strokepath clip newpath } bd
+/TGSM { tgiforigctm setmatrix } def
+/TGRM { savematrix setmatrix } def
+
+end
+
+%%EndProlog
+%%Page: 1 1
+
+%%PageBoundingBox: 5 416 600 717
+tgifdict begin
+/tgifsavedpage save def
+
+1 SM
+1 W
+
+0 SG
+
+72 0 MU 72 11 MU TR
+72 128 DI 100.000 MU 100 DI DU NE SC
+
+GS
+
+/tgiforigctm matrix currentmatrix def
+
+% BOX
+0.937 0.722 1.000 RG
+NP 256 256 M 288 256 L 288 616 L 256 616 L CP F
+
+% BOX
+0.937 0.722 1.000 RG
+NP 592 256 M 624 256 L 624 616 L 592 616 L CP F
+
+% BOX
+0.937 0.722 1.000 RG
+NP 888 256 M 920 256 L 920 616 L 888 616 L CP F
+
+% RCBOX
+0.941 0.976 0.910 RG
+NP
+   564 256 M
+   580 256 580 616 16 AR
+   580 600 L
+   580 616 300 616 16 AR
+   316 616 L
+   300 616 300 256 16 AR
+   300 272 L
+   300 256 580 256 16 AR
+CP F
+
+% RCBOX
+1.000 0.765 0.486 RG
+NP
+   430 448 M
+   440 448 440 576 10 AR
+   440 566 L
+   440 576 344 576 10 AR
+   354 576 L
+   344 576 344 448 10 AR
+   344 458 L
+   344 448 440 448 10 AR
+CP F
+
+% RCBOX
+0.941 0.976 0.910 RG
+NP
+   860 256 M
+   876 256 876 616 16 AR
+   876 600 L
+   876 616 636 616 16 AR
+   652 616 L
+   636 616 636 256 16 AR
+   636 272 L
+   636 256 876 256 16 AR
+CP F
+
+% RCBOX
+1.000 0.765 0.486 RG
+NP
+   774 416 M
+   784 416 784 480 10 AR
+   784 470 L
+   784 480 688 480 10 AR
+   698 480 L
+   688 480 688 416 10 AR
+   688 426 L
+   688 416 784 416 10 AR
+CP F
+
+% RCBOX
+1.000 0.541 0.494 RG
+NP
+   774 520 M
+   784 520 784 584 10 AR
+   784 574 L
+   784 584 688 584 10 AR
+   698 584 L
+   688 584 688 520 10 AR
+   688 530 L
+   688 520 784 520 10 AR
+CP F
+
+% RCBOX
+1.000 0.541 0.494 RG
+NP
+   774 336 M
+   784 336 784 400 10 AR
+   784 390 L
+   784 400 688 400 10 AR
+   698 400 L
+   688 400 688 336 10 AR
+   688 346 L
+   688 336 784 336 10 AR
+CP F
+
+% RCBOX
+0.941 0.976 0.910 RG
+NP
+   1036 256 M
+   1052 256 1052 616 16 AR
+   1052 600 L
+   1052 616 932 616 16 AR
+   948 616 L
+   932 616 932 256 16 AR
+   932 272 L
+   932 256 1052 256 16 AR
+CP F
+
+% RCBOX
+0.647 0.718 0.839 RG
+NP
+   1014 296 M
+   1024 296 1024 400 10 AR
+   1024 390 L
+   1024 400 960 400 10 AR
+   970 400 L
+   960 400 960 296 10 AR
+   960 306 L
+   960 296 1024 296 10 AR
+CP F
+
+% RCBOX
+0.722 0.800 0.600 RG
+NP
+   430 312 M
+   440 312 440 368 10 AR
+   440 358 L
+   440 368 344 368 10 AR
+   354 368 L
+   344 368 344 312 10 AR
+   344 322 L
+   344 312 440 312 10 AR
+CP F
+GS
+   GS
+      NP
+         430 312 M
+         440 312 440 368 10 AR
+         440 358 L
+         440 368 344 368 10 AR
+         354 368 L
+         344 368 344 312 10 AR
+         344 322 L
+         344 312 440 312 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% RCBOX
+0.941 0.976 0.910 RG
+NP
+   228 256 M
+   244 256 244 616 16 AR
+   244 600 L
+   244 616 24 616 16 AR
+   40 616 L
+   24 616 24 256 16 AR
+   24 272 L
+   24 256 244 256 16 AR
+CP F
+
+% RCBOX
+0.733 0.871 0.506 RG
+NP
+   166 280 M
+   176 280 176 464 10 AR
+   176 454 L
+   176 464 48 464 10 AR
+   58 464 L
+   48 464 48 280 10 AR
+   48 290 L
+   48 280 176 280 10 AR
+CP F
+
+% RCBOX
+0.831 0.831 0.824 RG
+GS
+   GS
+      NP
+         228 256 M
+         244 256 244 616 16 AR
+         244 600 L
+         244 616 24 616 16 AR
+         40 616 L
+         24 616 24 256 16 AR
+         24 272 L
+         24 256 244 256 16 AR
+      CP
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0.498 0.290 0.051 RG
+GS
+   NP
+      384 576 M
+      392 564 L
+      400 576 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      392 480 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [25 0 0 -25 0 0] MS
+            (GPR) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [25 0 0 -25 0 0] MS
+            (GPR) SH
+      GR
+   GR
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+NP
+   544 296 M
+   560 312 L
+   560 376 L
+   544 392 L
+CP
+GS
+GR
+GS
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      624 352 M
+      0 64 atan DU cos 8.000 MU 688 exch SU
+      exch sin 8.000 MU 352 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      688 352 8.000 3.000 64 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      688 352 8.000 3.000 64 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      624 384 M
+      0 64 atan DU cos 8.000 MU 688 exch SU
+      exch sin 8.000 MU 384 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      688 384 8.000 3.000 64 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      688 384 8.000 3.000 64 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      672 360 M
+      672 536 L
+      0 16 atan DU cos 8.000 MU 688 exch SU
+      exch sin 8.000 MU 536 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      688 536 8.000 3.000 16 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      688 536 8.000 3.000 16 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      656 384 M
+      656 552 L
+      0 32 atan DU cos 8.000 MU 688 exch SU
+      exch sin 8.000 MU 552 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      688 552 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      688 552 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% OVAL
+0 SG
+NP 656 384 2 2 TGEL F
+GS
+   GS
+      NP 656 384 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0 SG
+NP 672 352 2 2 TGEL F
+GS
+   GS
+      NP 672 352 2 2 TGEL
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      672 360 M
+      672 304 L
+      808 304 L
+      -16 0 atan DU cos 8.000 MU 808 exch SU
+      exch sin 8.000 MU 288 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      808 288 8.000 3.000 0 -16 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      808 288 8.000 3.000 0 -16 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      820 272 M
+      -80 0 atan DU cos 8.000 MU 820 exch SU
+      exch sin 8.000 MU 192 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      820 192 8.000 3.000 0 -80 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      820 192 8.000 3.000 0 -80 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      816 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (addr) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (addr) SH
+      GR
+   GR
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+NP
+   544 400 M
+   560 416 L
+   560 448 L
+   544 464 L
+CP
+GS
+GR
+GS
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      560 352 M
+      0 32 atan DU cos 8.000 MU 592 exch SU
+      exch sin 8.000 MU 352 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      592 352 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      592 352 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      592 384 M
+      0 -20 atan DU cos 8.000 MU exch sin 8.000 MU RM
+      572 384 L
+      572 432 L
+      560 432 L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      592 384 8.000 3.000 20 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      592 384 8.000 3.000 20 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      560 568 M
+      0 32 atan DU cos 8.000 MU 592 exch SU
+      exch sin 8.000 MU 568 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      592 568 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      592 568 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      944 192 M
+      944 352 L
+      0 16 atan DU cos 8.000 MU 960 exch SU
+      exch sin 8.000 MU 352 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      960 352 8.000 3.000 16 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      960 352 8.000 3.000 16 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      1024 352 M
+      1040 352 L
+      1040 648 L
+      312 648 L
+      312 504 L
+      0 32 atan DU cos 8.000 MU 344 exch SU
+      exch sin 8.000 MU 504 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      344 504 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      344 504 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+GS
+   840 600 TR
+   [0.000 1.000 -1.000 0.000 8 -8] CO
+   840 NE 600 NE TR
+NP
+   840 600 M
+   856 616 L
+   856 648 L
+   840 664 L
+CP
+GS
+GR
+GS
+   TGSM
+   S
+GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      784 552 M
+      800 552 L
+      40 0 atan DU cos 8.000 MU 800 exch SU
+      exch sin 8.000 MU 592 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      800 592 8.000 3.000 0 40 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      800 592 8.000 3.000 0 40 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      832 504 M
+      88 0 atan DU cos 8.000 MU 832 exch SU
+      exch sin 8.000 MU 592 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      832 592 8.000 3.000 0 88 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      832 592 8.000 3.000 0 88 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      944 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rdata) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rdata) SH
+      GR
+   GR
+
+% OVAL
+0 SG
+NP 832 368 2 2 TGEL F
+GS
+   GS
+      NP 832 368 2 2 TGEL
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      816 608 M
+      816 632 L
+      328 632 L
+      328 528 L
+      0 16 atan DU cos 8.000 MU 344 exch SU
+      exch sin 8.000 MU 528 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      344 528 8.000 3.000 16 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      344 528 8.000 3.000 16 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      440 464 M
+      480 464 L
+      480 352 L
+      0 64 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 352 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 352 8.000 3.000 64 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      544 352 8.000 3.000 64 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      440 488 M
+      496 488 L
+      496 424 L
+      0 48 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 424 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 424 8.000 3.000 48 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      544 424 8.000 3.000 48 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      440 552 M
+      0 104 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 552 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 552 8.000 3.000 104 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      544 552 8.000 3.000 104 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.184 0.310 0.310 RG
+GS
+   NP
+      440 336 M
+      0 104 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 336 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 336 8.000 3.000 104 0 TGAT
+   1 SG CP F
+   0.184 0.310 0.310 RG
+   NP
+      544 336 8.000 3.000 104 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.184 0.310 0.310 RG
+GS
+   NP
+      440 352 M
+      464 352 L
+      464 408 L
+      0 80 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 408 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 408 8.000 3.000 80 0 TGAT
+   1 SG CP F
+   0.184 0.310 0.310 RG
+   NP
+      544 408 8.000 3.000 80 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.373 0.620 0.627 RG
+GS
+   NP
+      528 632 M
+      528 368 L
+      0 16 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 368 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 368 8.000 3.000 16 0 TGAT
+   1 SG CP F
+   0.373 0.620 0.627 RG
+   NP
+      544 368 8.000 3.000 16 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.373 0.620 0.627 RG
+GS
+   NP
+      528 440 M
+      0 16 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 440 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 440 8.000 3.000 16 0 TGAT
+   1 SG CP F
+   0.373 0.620 0.627 RG
+   NP
+      544 440 8.000 3.000 16 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.373 0.620 0.627 RG
+GS
+   NP
+      528 568 M
+      0 16 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 568 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 568 8.000 3.000 16 0 TGAT
+   1 SG CP F
+   0.373 0.620 0.627 RG
+   NP
+      544 568 8.000 3.000 16 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.373 0.620 0.627 RG
+GS
+   NP
+      512 648 M
+      512 384 L
+      0 32 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 384 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 384 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0.373 0.620 0.627 RG
+   NP
+      544 384 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.373 0.620 0.627 RG
+GS
+   NP
+      512 456 M
+      0 32 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 456 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 456 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0.373 0.620 0.627 RG
+   NP
+      544 456 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.373 0.620 0.627 RG
+GS
+   NP
+      512 584 M
+      0 32 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 584 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 584 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0.373 0.620 0.627 RG
+   NP
+      544 584 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      872 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (wdata) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (wdata) SH
+      GR
+   GR
+
+% OVAL
+0.373 0.620 0.627 RG
+NP 512 456 2 2 TGEL F
+GS
+   GS
+      NP 512 456 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0.373 0.620 0.627 RG
+NP 512 584 2 2 TGEL F
+GS
+   GS
+      NP 512 584 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0.373 0.620 0.627 RG
+NP 528 440 2 2 TGEL F
+GS
+   GS
+      NP 528 440 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0.373 0.620 0.627 RG
+NP 528 568 2 2 TGEL F
+GS
+   GS
+      NP 528 568 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0.373 0.620 0.627 RG
+NP 528 632 2 2 TGEL F
+GS
+   GS
+      NP 528 632 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0.373 0.620 0.627 RG
+NP 512 648 2 2 TGEL F
+GS
+   GS
+      NP 512 648 2 2 TGEL
+      S
+   GR
+GR
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+NP
+   544 480 M
+   560 496 L
+   560 512 L
+   544 528 L
+CP
+GS
+GR
+GS
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      496 488 M
+      0 48 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 488 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 488 8.000 3.000 48 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      544 488 8.000 3.000 48 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.373 0.620 0.627 RG
+GS
+   NP
+      528 504 M
+      0 16 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 504 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 504 8.000 3.000 16 0 TGAT
+   1 SG CP F
+   0.373 0.620 0.627 RG
+   NP
+      544 504 8.000 3.000 16 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.373 0.620 0.627 RG
+GS
+   NP
+      512 520 M
+      0 32 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 520 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 520 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0.373 0.620 0.627 RG
+   NP
+      544 520 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+NP
+   544 544 M
+   560 560 L
+   560 576 L
+   544 592 L
+CP
+GS
+GR
+GS
+   S
+GR
+
+% OVAL
+0.373 0.620 0.627 RG
+NP 528 504 2 2 TGEL F
+GS
+   GS
+      NP 528 504 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0.373 0.620 0.627 RG
+NP 512 520 2 2 TGEL F
+GS
+   GS
+      NP 512 520 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0 SG
+NP 496 488 2 2 TGEL F
+GS
+   GS
+      NP 496 488 2 2 TGEL
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      624 568 M
+      656 568 L
+      656 568 L
+      0 32 atan DU cos 8.000 MU 688 exch SU
+      exch sin 8.000 MU 568 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      688 568 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      688 568 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      832 368 M
+      -80 0 atan DU cos 8.000 MU 832 exch SU
+      exch sin 8.000 MU 288 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      832 288 8.000 3.000 0 -80 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      832 288 8.000 3.000 0 -80 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      784 368 M
+      832 368 L
+      832 504 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      288 288 M
+      480 288 L
+      480 320 L
+      0 64 atan DU cos 8.000 MU 544 exch SU
+      exch sin 8.000 MU 320 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 320 8.000 3.000 64 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      544 320 8.000 3.000 64 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      288 344 M
+      0 56 atan DU cos 8.000 MU 344 exch SU
+      exch sin 8.000 MU 344 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      344 344 8.000 3.000 56 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      344 344 8.000 3.000 56 0 TGAT
+   CP F
+GR
+
+% OVAL
+0.184 0.310 0.310 RG
+NP 464 392 2 2 TGEL F
+GS
+   GS
+      NP 464 392 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0 SG
+NP 464 488 2 2 TGEL F
+GS
+   GS
+      NP 464 488 2 2 TGEL
+      S
+   GR
+GR
+
+% RCBOX
+0.000 0.412 0.706 RG
+GS
+   GS
+      NP
+         976 136 M
+         992 136 992 192 16 AR
+         992 176 L
+         992 192 784 192 16 AR
+         800 192 L
+         784 192 784 136 16 AR
+         784 152 L
+         784 136 992 136 16 AR
+      CP
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      888 160 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Data Interface) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Data Interface) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      592 504 M
+      0 -16 atan DU cos 8.000 MU exch sin 8.000 MU RM
+      576 504 L
+      576 504 L
+      560 504 L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      592 504 8.000 3.000 16 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      592 504 8.000 3.000 16 0 TGAT
+   CP F
+GR
+
+% BOX
+0 SG
+GS
+   10 SM
+   GS
+      NP 12 224 M 1064 224 L 1064 664 L 12 664 L CP
+      S
+   GR
+GR
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+NP
+   208 416 M
+   232 428 L
+   232 408 L
+   224 404 L
+   232 400 L
+   232 380 L
+   208 392 L
+CP
+GS
+GR
+GS
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      216 400 M
+      216 408 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      212 404 M
+      220 404 L
+   TGSM
+   1 W
+   S
+GR
+
+% RCBOX
+0.498 0.290 0.051 RG
+GS
+   GS
+      NP
+         430 448 M
+         440 448 440 576 10 AR
+         440 566 L
+         440 576 344 576 10 AR
+         354 576 L
+         344 576 344 448 10 AR
+         344 458 L
+         344 448 440 448 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% RCBOX
+0.122 0.251 0.478 RG
+GS
+   GS
+      NP
+         1014 296 M
+         1024 296 1024 400 10 AR
+         1024 390 L
+         1024 400 960 400 10 AR
+         970 400 L
+         960 400 960 296 10 AR
+         960 306 L
+         960 296 1024 296 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      992 328 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (LSU) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (LSU) SH
+      GR
+   GR
+
+% RCBOX
+0.498 0.196 0.106 RG
+GS
+   GS
+      NP
+         774 336 M
+         784 336 784 400 10 AR
+         784 390 L
+         784 400 688 400 10 AR
+         698 400 L
+         688 400 688 336 10 AR
+         688 346 L
+         688 336 784 336 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      736 378 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [25 0 0 -25 0 0] MS
+            (ALU) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [25 0 0 -25 0 0] MS
+            (ALU) SH
+      GR
+   GR
+
+% RCBOX
+0.498 0.196 0.106 RG
+GS
+   GS
+      NP
+         774 520 M
+         784 520 784 584 10 AR
+         784 574 L
+         784 584 688 584 10 AR
+         698 584 L
+         688 584 688 520 10 AR
+         688 530 L
+         688 520 784 520 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      772 563 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [25 0 0 -25 0 0] MS
+            (MULT) TGSW 
+        AD
+        GR
+      NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [25 0 0 -25 0 0] MS
+            (MULT) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0.498 0.290 0.051 RG
+GS
+   NP
+      728 480 M
+      736 468 L
+      744 480 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% RCBOX
+0.498 0.290 0.051 RG
+GS
+   GS
+      NP
+         774 416 M
+         784 416 784 480 10 AR
+         784 470 L
+         784 480 688 480 10 AR
+         698 480 L
+         688 480 688 416 10 AR
+         688 426 L
+         688 416 784 416 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      736 454 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (CSR) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (CSR) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      672 432 M
+      0 16 atan DU cos 8.000 MU 688 exch SU
+      exch sin 8.000 MU 432 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      688 432 8.000 3.000 16 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      688 432 8.000 3.000 16 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      656 464 M
+      0 32 atan DU cos 8.000 MU 688 exch SU
+      exch sin 8.000 MU 464 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      688 464 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      688 464 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% OVAL
+0 SG
+NP 656 464 2 2 TGEL F
+GS
+   GS
+      NP 656 464 2 2 TGEL
+      S
+   GR
+GR
+
+% OVAL
+0 SG
+NP 672 432 2 2 TGEL F
+GS
+   GS
+      NP 672 432 2 2 TGEL
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      624 504 M
+      864 504 L
+      -312 0 atan DU cos 8.000 MU 864 exch SU
+      exch sin 8.000 MU 192 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      864 192 8.000 3.000 0 -312 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      864 192 8.000 3.000 0 -312 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      784 448 M
+      816 448 L
+      144 0 atan DU cos 8.000 MU 816 exch SU
+      exch sin 8.000 MU 592 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      816 592 8.000 3.000 0 144 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      816 592 8.000 3.000 0 144 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      152 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (addr) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (addr) SH
+      GR
+   GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      88 184 M
+      GS
+        GS
+        0
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rdata) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (rdata) SH
+      GR
+   GR
+
+% RCBOX
+0.000 0.412 0.706 RG
+GS
+   GS
+      NP
+         216 136 M
+         232 136 232 192 16 AR
+         232 176 L
+         232 192 24 192 16 AR
+         40 192 L
+         24 192 24 136 16 AR
+         24 152 L
+         24 136 232 136 16 AR
+      CP
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      128 160 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Instruction Interface) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0.000 0.412 0.706 RG
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Instruction Interface) SH
+      GR
+   GR
+
+% BOX
+0.435 0.212 0.498 RG
+GS
+   10 SM
+   GS
+      NP 256 256 M 288 256 L 288 616 L 256 616 L CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+GS
+   262 415 TR
+   [1.000 0.000 0.000 1.023 0 4] CO
+   262 NE 415 NE TR
+GR
+   GS
+      1 W
+      262 415 TR
+      [1.000 0.000 0.000 1.023 0 4] CO
+      0 14 M
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (IF) SH
+      GR
+      0 17 RM
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (ID) SH
+      GR
+   GR
+
+% BOX
+0.435 0.212 0.498 RG
+GS
+   10 SM
+   GS
+      NP 592 256 M 624 256 L 624 616 L 592 616 L CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      598 429 M
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (ID) SH
+      GR
+      0 17 RM
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (EX) SH
+      GR
+   GR
+
+% BOX
+0.435 0.212 0.498 RG
+GS
+   10 SM
+   GS
+      NP 888 256 M 920 256 L 920 616 L 888 616 L CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      894 429 M
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (EX) SH
+      GR
+      0 17 RM
+      GS
+            0 SG
+            /Courier-Bold FF [17 0 0 -17 0 0] MS
+            (WB) SH
+      GR
+   GR
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+NP
+   232 300 M
+   208 312 L
+   208 292 L
+   216 288 L
+   208 284 L
+   208 264 L
+   232 276 L
+CP
+GS
+GR
+GS
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      224 284 M
+      224 292 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      228 288 M
+      220 288 L
+   TGSM
+   1 W
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      544 304 M
+      0 -12 atan DU cos 8.000 MU exch sin 8.000 MU RM
+      532 304 L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      544 304 8.000 3.000 12 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      544 304 8.000 3.000 12 0 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      524 308 M
+      GS
+        GS
+        0
+            /Helvetica FF [12 0 0 -12 0 0] MS
+            ('0') TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica FF [12 0 0 -12 0 0] MS
+            ('0') SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      208 272 M
+      0 -12 atan DU cos 8.000 MU exch sin 8.000 MU RM
+      196 272 L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      208 272 8.000 3.000 12 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      208 272 8.000 3.000 12 0 TGAT
+   CP F
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      188 276 M
+      GS
+        GS
+        0
+            /Helvetica FF [12 0 0 -12 0 0] MS
+            ('2') TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica FF [12 0 0 -12 0 0] MS
+            ('2') SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      232 288 M
+      0 24 atan DU cos 8.000 MU 256 exch SU
+      exch sin 8.000 MU 288 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      256 288 8.000 3.000 24 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      256 288 8.000 3.000 24 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      464 488 M
+      464 416 L
+      0 -232 atan DU cos 8.000 MU 232 exch SU
+      exch sin 8.000 MU 416 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      232 416 8.000 3.000 -232 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      232 416 8.000 3.000 -232 0 TGAT
+   CP F
+GR
+
+% RCBOX
+0.235 0.353 0.059 RG
+GS
+   GS
+      NP
+         430 312 M
+         440 312 440 368 10 AR
+         440 358 L
+         440 368 344 368 10 AR
+         354 368 L
+         344 368 344 312 10 AR
+         344 322 L
+         344 312 440 312 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      392 339 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Decoder) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [20 0 0 -20 0 0] MS
+            (Decoder) SH
+      GR
+   GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      464 392 M
+      0 -232 atan DU cos 8.000 MU 232 exch SU
+      exch sin 8.000 MU 392 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      232 392 8.000 3.000 -232 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      232 392 8.000 3.000 -232 0 TGAT
+   CP F
+GR
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+NP
+   208 320 M
+   224 336 L
+   224 352 L
+   208 368 L
+CP
+GS
+GR
+GS
+   S
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      140 280 M
+      -88 0 atan DU cos 8.000 MU 140 exch SU
+      exch sin 8.000 MU 192 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      140 192 8.000 3.000 0 -88 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      140 192 8.000 3.000 0 -88 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      224 344 M
+      0 32 atan DU cos 8.000 MU 256 exch SU
+      exch sin 8.000 MU 344 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      256 344 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      256 344 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0.000 0.565 0.000 RG
+GS
+   NP
+      104 464 M
+      112 452 L
+      120 464 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% TEXT
+NP
+0 SG
+   GS
+      1 W
+      112 320 M
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (Prefetch) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (Prefetch) SH
+      GR
+      0 29 RM
+      GS
+        GS
+        0
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (Buffer) TGSW 
+        AD
+        GR
+      2 DI NE 0 RM
+            0 SG
+            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
+            (Buffer) SH
+      GR
+   GR
+
+% RCBOX
+0.000 0.565 0.000 RG
+GS
+   GS
+      NP
+         166 280 M
+         176 280 176 464 10 AR
+         176 454 L
+         176 464 48 464 10 AR
+         58 464 L
+         48 464 48 280 10 AR
+         48 290 L
+         48 280 176 280 10 AR
+      CP
+      2 W
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      176 328 M
+      0 32 atan DU cos 8.000 MU 208 exch SU
+      exch sin 8.000 MU 328 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      208 328 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      208 328 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      176 360 M
+      0 32 atan DU cos 8.000 MU 208 exch SU
+      exch sin 8.000 MU 360 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      208 360 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      208 360 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      176 304 M
+      0 32 atan DU cos 8.000 MU 208 exch SU
+      exch sin 8.000 MU 304 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      208 304 8.000 3.000 32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      208 304 8.000 3.000 32 0 TGAT
+   CP F
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      84 192 M
+      88 0 atan DU cos 8.000 MU 84 exch SU
+      exch sin 8.000 MU 280 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      84 280 8.000 3.000 0 88 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      84 280 8.000 3.000 0 88 TGAT
+   CP F
+GR
+
+% RCBOX
+0.831 0.831 0.824 RG
+GS
+   GS
+      NP
+         564 256 M
+         580 256 580 616 16 AR
+         580 600 L
+         580 616 300 616 16 AR
+         316 616 L
+         300 616 300 256 16 AR
+         300 272 L
+         300 256 580 256 16 AR
+      CP
+      S
+   GR
+GR
+
+% RCBOX
+0.831 0.831 0.824 RG
+GS
+   GS
+      NP
+         860 256 M
+         876 256 876 616 16 AR
+         876 600 L
+         876 616 636 616 16 AR
+         652 616 L
+         636 616 636 256 16 AR
+         636 272 L
+         636 256 876 256 16 AR
+      CP
+      S
+   GR
+GR
+
+% RCBOX
+0.831 0.831 0.824 RG
+GS
+   GS
+      NP
+         1036 256 M
+         1052 256 1052 616 16 AR
+         1052 600 L
+         1052 616 932 616 16 AR
+         948 616 L
+         932 616 932 256 16 AR
+         932 272 L
+         932 256 1052 256 16 AR
+      CP
+      S
+   GR
+GR
+
+% POLY/OPEN-SPLINE
+0 SG
+GS
+   NP
+      208 404 M
+      0 -32 atan DU cos 8.000 MU 176 exch SU
+      exch sin 8.000 MU 404 exch SU L
+   TGSM
+   1 W
+   S
+GR
+GS
+   TGSM
+   NP
+      176 404 8.000 3.000 -32 0 TGAT
+   1 SG CP F
+   0 SG
+   NP
+      176 404 8.000 3.000 -32 0 TGAT
+   CP F
+GR
+
+% POLYGON/CLOSED-SPLINE
+0 SG
+GS
+   868 312 TR
+   [-0.000 -1.000 1.000 -0.000 -72 -24] CO
+   868 NE 312 NE TR
+NP
+   868 312 M
+   884 328 L
+   884 344 L
+   868 360 L
+CP
+GS
+GR
+GS
+   TGSM
+   S
+GR
+GR
+
+% POLY/OPEN-SPLINE
+0.435 0.212 0.498 RG
+GS
+   NP
+      264 616 M
+      272 604 L
+      280 616 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.435 0.212 0.498 RG
+GS
+   NP
+      600 616 M
+      608 604 L
+      616 616 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+% POLY/OPEN-SPLINE
+0.435 0.212 0.498 RG
+GS
+   NP
+      896 616 M
+      904 604 L
+      912 616 L
+   TGSM
+   2 W
+   S
+   1 W
+GR
+
+GR
+tgifsavedpage restore
+end
+showpage
+
+%%Trailer
+%MatchingCreationDate: Tue Aug 15 15:43:05 2017
+%%DocumentFonts: Helvetica
+%%+ Courier-Bold
+%%+ Helvetica-Bold
+%%EOF
diff --git a/docs/datasheet/relsize.sty b/docs/datasheet/relsize.sty
new file mode 100644
index 0000000..ecaa825
--- /dev/null
+++ b/docs/datasheet/relsize.sty
@@ -0,0 +1,398 @@
+% relsize.sty       4.1       Mar 29, 2013
+% 
+% Setting the font size relative to the current size
+% 
+% Authored by Donald Arseneau <asnd@triumf.ca> and Matt Swift <swift@bu.edu>.
+% (Inspired by smaller.sty author Bernie Cosell)
+% 
+% This software is contributed to the public domain by its authors, who disclaim
+% all copyrights. For people and jurisdictions that do not recognize contribution
+% to the public domain, this software is licensed by the terms of the unlicense, 
+% <http://unlicense.org/>
+%
+% commands are:
+% \relsize{n}  where n gives the number of steps ("mag-step" = factor of 1.2)
+%              to change the size by;  n = 3 changes from \normalsize to 
+%              \LARGE size.  Negative n selects smaller fonts. n is an
+%              integer (or half-integer).
+%
+% \smaller = \relsize{-1},  \smaller[n] = \relsize{-n}
+% \larger  = \relsize{1},   \larger[n]  = \relsize{n}
+%
+% \textsmaller{text}, \textlarger{text} - versions that take an argument
+%
+% \relscale{f}   like \relsize, but instead of scale-steps,
+%                the parameter is a scale factor, such as .75
+% \textscale{f}{text}
+%
+% The font-size command nearest the requested size will be used, and if
+% the size error is more than \RSpercentTolerance, then the size will
+% be adjusted more precisely using \fontsize.  (The default empty 
+% \RSpercentTolerance signals automatic handling, choosing the tolerance 
+% based on the font declarations.)
+%
+% \mathsmaller{A}, \mathlarger{B}       - math versions 
+%   (The math versions are entirely different from the text versions.)
+%
+% More comments at the end of this file, and full documentation in
+% relsize-doc.pdf
+
+\ProvidesPackage{relsize}[2013/03/29 ver 4.1]
+
+\DeclareRobustCommand\relsize[1]{%
+\ifmmode \@nomath\relsize\else
+  \begingroup
+  % number of demi-magsteps -> \@tempcnta
+  \@tempdima#1\p@ \@tempdima2.0002\@tempdima \divide\@tempdima\p@
+  \@tempcnta\@tempdima
+  % \message{^^JChange \the\@tempcnta\space half-magsteps from \f@size. }%
+  % calculate desired target size -> \@tempdimb
+  \@tempdimb\f@size\p@
+  \ifnum\@tempcnta<\z@ 
+    \def\@tempa{.912871}\@tempcnta=-\@tempcnta
+  \else
+    \def\@tempa{1.09545}%
+  \fi
+  \@whilenum {\@tempcnta>\z@}\do {%
+    \advance\@tempcnta\m@ne
+    \@tempdimb\@tempa\@tempdimb}%
+    % \message{ target size \the\@tempdimb. }%
+  \rs@scaleToB
+\fi}
+
+\DeclareRobustCommand\relscale[1]{%
+\ifmmode \@nomath\relscale\else
+  \begingroup
+  \@tempdimb\f@size\p@ \@tempdimb#1\@tempdimb
+  \rs@scaleToB
+\fi}
+
+\DeclareRobustCommand\textscale[2]{\leavevmode
+  \begingroup\relscale{#1}#2\endgroup}
+
+%  Change font size to \@tempdimb.  Follows from \relsize or \relscale
+\def\rs@scaleToB{%
+  %\message{Change font size from \f@size\space to \the\@tempdimb. }%
+  % perform automatic tolerance adjustment, if requested
+  \ifx\RSpercentTolerance\@empty \rs@autoTol \fi
+  % apply limits
+  \ifdim\@tempdimb<\RSsmallest 
+      \rs@size@warning{\the\@tempdimb}{small}{\RSsmallest}%
+      \@tempdimb=\RSsmallest
+  \fi
+  \ifdim\@tempdimb>\RSlargest 
+      \rs@size@warning{\the\@tempdimb}{large}{\RSlargest}%
+      \@tempdimb=\RSlargest 
+  \fi
+  % Look up that size in list of pre-defined sizes.  Put error of
+  % closest match in \@tempdima
+  \def\@tempa{\relax}\@tempdima-\@m\p@
+  \let\rs@size\rs@lookup  \rs@fontsizes
+  %\message{Look up best as \expandafter\string\@tempa, off by \the\@tempdima}%
+  % See how close match was (abs difference -> \@tempdima)
+  \ifdim\@tempdima<\z@ \@tempdima-\@tempdima\fi
+  %  ... percentage error in \@tempdima (as a count)
+  %  (messiness to prevent numeric overflows)
+  \ifdim\@tempdima<160\p@ \@tempdima 100\@tempdima 
+    \ifdim\@tempdimb>\p@ \divide\@tempdima\@tempdimb \fi
+    %\message{or \number\@tempdima \@percentchar. }%
+  \fi
+  % if error is beyond tolerance, append \fontsize adjustment.  
+  \ifnum\@tempdima>\RSpercentTolerance
+    %\message{Adjust size to \strip@pt\@tempdimb. }%
+    \@tempdima1.2\@tempdimb % baselineskip (could be improved)
+    \edef\@tempa{\expandafter\noexpand\@tempa \noexpand\fontsize
+      {\strip@pt\@tempdimb}{\strip@pt\@tempdima}\noexpand\selectfont}\fi
+  % Now execute size-change command \@tempa
+  \expandafter\endgroup\@tempa
+  %\message{Font size is now \f@size. }%
+}
+
+% For each defined font size, compare its actual size to the desired
+% size (\@tempdimb) and the error of the best previous match (\@tempdima).
+% Record this command (\@tempa) if it is closer.
+\def\rs@lookup#1#2{% #1=command #2=size
+  \begingroup
+  \advance\@tempdimb-#2\relax
+  \ifdim\@absVal\@tempdimb<\@absVal\@tempdima % improvement
+    \endgroup
+    \def\@tempa{#1}%
+    \@tempdima#2\relax \advance\@tempdima-\@tempdimb
+  \else
+    \endgroup
+  \fi}
+\def\@absVal#1{\ifnum#1<\z@-\fi#1}
+
+% Tolerance for size mis-match (%).  The empty definition triggers
+% automatic selection: 5 for scalable fonts, 30 otherwise.
+
+\def\rs@autoTol{%
+  \expandafter\expandafter\expandafter\rs@autoTOL
+  \expandafter\meaning
+  \csname\f@encoding/\f@family/\f@series/\f@shape\endcsname-\delimiter
+}
+\def\rs@autoTOL#1>#2-#3\delimiter{%
+   \ifx\delimiter#3\delimiter % no -
+     \def\RSpercentTolerance{30}%
+   \else % font size def has -, assume it covers continuum 
+     \def\RSpercentTolerance{5}%
+   \fi
+   % \message{ Automatic tolerance is \RSpercentTolerance. }%
+}
+
+%  Warning messages
+
+\newcommand\rs@size@warning[3]{\PackageWarning{relsize}{%
+ Font size #1 is too #2.\MessageBreak Using #3 instead}}
+
+% derived commands
+
+\DeclareRobustCommand\larger[1][\@ne]{\relsize{+#1}}
+\DeclareRobustCommand\smaller[1][\@ne]{\relsize{-#1}}
+\DeclareRobustCommand\textlarger[2][\@ne]{\leavevmode{\relsize{+#1}#2}}
+\DeclareRobustCommand\textsmaller[2][\@ne]{\leavevmode{\relsize{-#1}#2}}
+
+
+% Some initializations.
+
+% Default empty definition triggers auto-tolerance.
+% Beware that \providecommand makes \long macro that fails to trigger.
+
+\def\RSpercentTolerance{} 
+
+% The next two aren't the real initializations!  The real ones are done
+% in \@tempb below.  The user can change them afterwards.
+
+\def\RSsmallest{999pt}
+\def\RSlargest{1pt}
+
+% Right now we assemble a list of the font sizes
+
+\def\rs@size{\noexpand\rs@size\noexpand}
+\def\rs@fontsizes{}
+\def\@tempa#1{\ifx\@undefined#1\else
+  \expandafter\@tempb#1\@empty\relax\relax\delimiter{#1}\fi}
+% parse definition of font-size command (like \large)
+% #1 = \@setfontsize  #2 = the command (\large) #3 = size #4 = rest
+\def\@tempb#1#2#3#4\delimiter#5{%
+  \def\@tempc{\protect !\@empty}\def\@tempd{#1!#3}%
+  \ifx\@tempc\@tempd   % self-protected: recurse.
+    \expandafter\@tempb#2\@empty\relax\relax\delimiter{#5}%
+  \else
+    \@tempdimb\z@
+    \def\@tempc{\@setfontsize !#5}\def\@tempd{#1!#2}%
+    \ifx\@tempc\@tempd   % Normal LaTeX2e
+      \afterassignment\strip@prefix \@tempdimb #3pt>%
+    \else
+    \def\@tempc{\@xsetfontsize !#5}\def\@tempd{#1!#2}%
+    \ifx\@tempc\@tempd   % AMS  (defines \@xp=\expandafter.  Note: they have their own \larger/\smaller)
+      \chardef\@currsizeindex#3\relax
+      \edef\@tempc{\@xp\ifcase\@xp\@currsizeindex\@typesizes\fi}%
+      \afterassignment\strip@prefix \@tempdimb \@xp\@firstoftwo\@tempc pt>%
+    \else
+    \def\@tempc{\@setsize !#5}\def\@tempd{#1!#2}%
+    \ifx\@tempc\@tempd   % 2.09 style
+      \afterassignment\strip@prefix \@tempdimb #3pt>%
+    \else
+    \def\@tempc{\slide@setsize !#5}\def\@tempd{#1!#2}%
+    \ifx\@tempc\@tempd   % seminar
+      \afterassignment\strip@prefix \@tempdimb #3pt>%
+    \else
+    \def\@tempc{\fontsize}\def\@tempd{#1}%
+    \ifx\@tempc\@tempd   % simple
+      \afterassignment\strip@prefix \@tempdimb #2pt>%
+    \else
+      %\message{Could not parse meaning of \string#5. }%
+    \fi\fi\fi\fi\fi
+    % Checked 5 possible definitions
+    \ifdim\@tempdimb=\z@ % Failed to parse size from definition
+    \else % Take note of this size.
+      \edef\rs@fontsizes{\rs@fontsizes\rs@size#5{\the\@tempdimb}}%
+      \ifdim\@tempdimb<\RSsmallest \edef\RSsmallest{\the\@tempdimb}\fi
+      \ifdim\@tempdimb>\RSlargest \edef\RSlargest{\the\@tempdimb}\fi
+      %\message{\string#5 has size \the\@tempdimb. ^^J}%
+    \fi
+  \fi
+}
+
+% examine each (expected) pre-defined font size 
+\@tempa\normalsize
+\@tempa\small
+\@tempa\footnotesize
+\@tempa\large
+\@tempa\Large
+\@tempa\LARGE
+\@tempa\scriptsize
+\@tempa\tiny
+\@tempa\huge
+\@tempa\Huge
+% moresize.sty
+\@tempa\HUGE  
+\@tempa\ssmall
+% beamer
+\@tempa\Tiny 
+\@tempa\TINY
+% AMS classes
+\@tempa\SMALL
+\@tempa\Small
+
+%\show\rs@fontsizes
+
+% Check that we recorded sizes for at least two font-size commands.
+% Value of \RSpercentTolerance is both a setting and a flag
+\ifx\rs@fontsizes\@empty 
+   \def\RSpercentTolerance{0}%
+\else\ifdim\RSsmallest<\RSlargest\else
+   \def\RSpercentTolerance{3}% 
+\fi\fi
+
+\ifx\RSpercentTolerance\@empty \else 
+
+  \PackageWarningNoLine{relsize}
+     {Failed to get list of defined font sizes.\MessageBreak
+      Size scaling will attempt arbitrary sizes.}
+
+  \def\RSsmallest{\p@}%
+  \def\RSlargest{100pt}%
+
+\fi
+
+%
+% Math commands (completely different)
+
+\DeclareRobustCommand\mathsmaller[1]{\bgroup
+  \let\rs@makechoice\rs@makesmallerchoice
+  \def\rs@mathatom{#1}%
+  \futurelet\@tempa\rs@collect@decor
+}
+\DeclareRobustCommand\mathlarger[1]{\bgroup
+  \let\rs@makechoice\rs@makelargerchoice
+  \def\rs@mathatom{#1}%
+  \futurelet\@tempa\rs@collect@decor
+}
+
+% Collect the tokens that 'decorate' the atom, to apply them directly on the
+% symbol, not after the closing brace.
+% Math so far is in \rs@mathatom; next tok is \@tempa; continuation is \@tempb
+% Don't nest \ifs because token may be \if or \fi or \or...
+\def\rs@collect@decor{%
+  \let\@tempb\rs@makechoice
+  \ifx\@tempa\limits \let\@tempb\rs@collect@one@decor \fi
+  \ifx\@tempa\displaylimits \let\@tempb\rs@collect@one@decor \fi
+  \ifx\@tempa\nolimits \let\@tempb\rs@collect@one@decor \fi
+  \if\noexpand\@tempa^\let\@tempb\rs@collect@two@decor \fi 
+  \if\noexpand\@tempa_\let\@tempb\rs@collect@two@decor \fi 
+  \ifx\@tempa\sp \let\@tempb\rs@collect@two@decor \fi
+  \ifx\@tempa\sb \let\@tempb\rs@collect@two@decor \fi
+  \@tempb}
+\def\rs@collect@one@decor#1{%
+  \expandafter\def\expandafter\rs@mathatom\expandafter{\rs@mathatom#1}%
+  \futurelet\@tempa\rs@collect@decor}
+\def\rs@collect@two@decor#1#2{\expandafter
+  \def\expandafter\rs@mathatom\expandafter{\rs@mathatom#1{\rs@sstyle{#2}}}%
+  \futurelet\@tempa\rs@collect@decor}
+\let\rs@sstyle\@firstofone
+
+\def\rs@makesmallerchoice{\mathchoice
+  {\textstyle \let\rs@sstyle\scriptstyle \rs@mathatom}%
+  {\scriptstyle \let\rs@sstyle\scriptstyle \rs@mathatom}%
+  {\scriptscriptstyle \let\rs@sstyle\scriptscriptstyle \rs@mathatom}%
+  {\scriptscriptstyle \let\rs@sstyle\scriptscriptstyle \rs@mathatom}%
+ \egroup}
+\def\rs@makelargerchoice{\mathchoice
+  {\protected@edef\rs@sstyle##1{%
+      \protect\set@fontsize {1}{\f@size}{\f@baselineskip}\protect\selectfont
+      \hbox{$\scriptstyle ##1\m@th$}}%
+   \mbox{\larger$\displaystyle\rs@mathatom\m@th$}}%
+  {\displaystyle \let\rs@sstyle\scriptstyle \rs@mathatom}%
+  {\textstyle \let\rs@sstyle\scriptscriptstyle \rs@mathatom}%
+  {\scriptstyle \let\rs@sstyle\scriptscriptstyle \rs@mathatom}%
+ \egroup}
+
+\endinput
+==========================================================
+
+R E L S I Z E . S T Y           ver 4.1       Mar 29, 2013
+
+by Donald Arseneau,  asnd@triumf.ca,  Vancouver, Canada
+originally based on smaller.sty by Bernie Cosell,
+and combined with the version by Matt Swift, swift@bu.edu.
+
+
+It is frequently the case that something should be typeset somewhat larger
+or smaller than the surrounding text, whatever that size happens to be.
+Specifying such sizing commands explicitly makes it difficult to modify the
+font sizes of a document at a later time, and makes it hard to write macros
+that work at arbitrary sizes.  Relsize.sty defines several commands for LaTeX
+to set font sizes relative to the current size.
+
+For i being an integer (or half-integer) magstep increment (like 2),
+and optional arg [i] defaulting to i=1,
+And f being a scale factor (like 0.75)
+And text being the text argument
+
+\relsize{i}     ungrouped size change by i steps
+\larger[i]      ungrouped size change by (optional) i steps
+\smaller[i]     ungrouped size change by (optional) -i steps
+\relscale{f}    ungrouped size change by scale factor f
+\textlarger[i]{text}   "text" size enlarged by i steps
+\textsmaller[i]{text}  "text" size reduced by i steps
+\textscale{f}{text}    "text" sized scaled by factor f
+
+
+If the size requested is too small or too large, a warning is given, and
+the size will only change as far as appropriate, typically \tiny or \Huge.
+These limits are controlled by the commands \RSsmallest and \RSlargest, which
+get set automatically when relsize.sty is loaded, but you can redefine them
+to other length values: \renewcommand\RSlargest{50pt}.
+
+Fine point:  The combination \relsize{n}\relsize{-n} is not guaranteed to 
+restore the current font size! 
+
+Typically, the font-size commands do not select fonts at regular size
+intervals.  \relsize (and the others) will select, and execute, the command
+for the size closest to the desired size.  Then, if the relative difference 
+from the target size is more than \RSpercentTolerance a further font-size
+selection is made.  By default, \RSpercentTolerance is an empty macro, which
+causes automatic selection: "30" (30%) when the current "fontshape" definition
+is composed of only discrete sizes, and "5" when the fontshape definition
+covers ranges of sizes.  The higher setting for discrete fonts ensures
+only the pre-defined sizes get used.  (By default LaTeX uses Computer
+Modern fonts at discrete sizes; you get full coverage of sizes by using
+\usepackage{type1cm} or various other font packages.)  For special uses, 
+or when the font shape definitions are not parsed properly, you can redefine 
+the percent tolerance: 
+\renewcommand\RSpercentTolerance{10}.
+
+All of the commands described above are text commands; they cannot be used
+in math mode.  There are special \mathsmaller and \mathlarger commands
+provided, but these do not use the same sizes that the text versions use.
+Instead, they step between the usual math "styles" which you can explicitly
+set using the commands \displaystyle, \textstyle, \scriptstyle, and
+\scriptscriptstyle [see Lamport, LaTeX/Manual (1st ed, p.54); GMS The LaTeX
+Companion, p.255].  However, the \mathlarger command will also increase the
+size beyond regular \displaystyle by selecting a larger regular font size
+(using \larger).  (Yes, this is a kludge, and doesn't work very well, but 
+it can still be useful.)  If you want to use this to create big integral 
+signs, then you must also load the package "exscale" so that math symbols
+can change size.  The sizes selected are: 
+
+Current style       \mathsmaller gives         \mathlarger gives
+---------------     ----------------------     ------------------------
+\displaystyle       \textstyle (almost same)   \displaystyle in a \larger font
+\textstyle          \scriptstyle               \displaystyle (almost same)
+\scriptstyle        \scriptscriptstyle         \textstyle
+\scriptscriptstyle  \scriptscriptstyle (same)  \scriptstyle
+
+These commands will attempt to attach superscripts and subscripts to the 
+symbol as if the symbol were used alone, but math accents and the math 
+spacing behave as if the symbol is enclosed in braces (which it is).
+Operators should be explicitly declared to use the right operator
+type (\mathrel, \mathbin, \mathop) to get the correct spacing.
+
+Due to their oddities, the math larger/smaller commands should not be 
+trusted blindly, and they will not be useful in every instance.
+
+
+Donald Arseneau                         asnd@triumf.ca
+
diff --git a/docs/datasheet/tikz-timing.sty b/docs/datasheet/tikz-timing.sty
new file mode 100644
index 0000000..aec5b5a
--- /dev/null
+++ b/docs/datasheet/tikz-timing.sty
@@ -0,0 +1,2313 @@
+%%
+%% This is file `tikz-timing.sty',
+%% generated with the docstrip utility.
+%%
+%% The original source files were:
+%%
+%% tikz-timing.dtx  (with options: `package')
+%% 
+%% Copyright (C) 2009-2011 by Martin Scharrer <martin@scharrer-online.de>
+%% 
+%% This work may be distributed and/or modified under the
+%% conditions of the LaTeX Project Public License, either version 1.3c
+%% of this license or (at your option) any later version.
+%% The latest version of this license is in
+%% 
+%%    http://www.latex-project.org/lppl.txt
+%% 
+%% and version 1.3c or later is part of all distributions of LaTeX
+%% version 2008/05/04 or later.
+%% 
+%% This work has the LPPL maintenance status `maintained'.
+%% 
+%% The Current Maintainer of this work is Martin Scharrer.
+%% 
+%% This work consists of the files tikz-timing.dtx, tikz-timing.ins
+%% and the derived file tikz-timing.sty.
+%% 
+\RequirePackage{svn-prov}[2009/05/03]
+\ProvidesPackageSVN
+  {$Id: tikz-timing.dtx 2038 2011-01-09 20:44:26Z martin $}
+  [v0.7d
+   Digital Timing Diagrams using TikZ]
+\DefineFileInfoSVN[tikztiming]
+\RequirePackage{tikz}
+
+\usetikzlibrary{calc}
+\usetikzlibrary{backgrounds}
+\usetikzlibrary{decorations.pathmorphing}
+\ifx\collect@body\@undefined
+  \IfFileExists{environ.sty}
+    {\RequirePackage{environ}}
+    {\RequirePackage{amsmath}}
+\fi
+\def\tikztimingwidth{0.0}
+\newcount\tikztiming@numint
+\newcount\tikztiming@numfrac
+\def\tikztiming@wscale{1.0}%
+\def\tikztimingsetwscale#1{%
+  \pgfmathparse{#1}%
+  \let\tikztiming@wscale\pgfmathresult
+}
+\def\tikztiming@num{0.0}%
+\let\tikztiming@back\empty
+\newlength\tikztiming@xunit
+\newlength\tikztiming@yunit
+\def\tikztiming@@xunit{1.6ex}%
+\def\tikztiming@@yunit{1.6ex}%
+\setlength{\tikztiming@xunit}{\tikztiming@@xunit}%
+\setlength{\tikztiming@yunit}{\tikztiming@@yunit}%
+
+\def\tikztiming@setnum#1{%
+  \pgfmathparse{#1}%
+  \global\let\tikztiming@num\pgfmathresult
+}
+
+\newcount\tikztiming@debug
+
+\def\tikztiming@xsep{0pt}
+\def\tikztiming@ysep{0pt}
+
+\newcounter{tikztiming@nrows}%
+\def\tikztiming@rowdist{2}%
+\def\tikztiming@coldist{1}%
+
+\def\tikztiming@prefix{tikztiming@trans@}%
+\def\tikztiming@ttt#1#2#3{#1#2#3}%
+\def\tikztiming@pfxtr{%
+  \tikztiming@prefix\expandafter\tikztiming@ttt
+}
+
+\def\timingwidth{1}%
+\def\timingheight{1}%
+
+\tikzset{%
+  timing/.style={/tikz,
+    line cap=round, line join=round,
+    timing/adjust@xy,
+    every path/.append code={\tikz@expandcount=\tikztiming@expandcount\relax},
+  },%
+}
+\tikzset{%
+  timing/.cd,
+  adjust@xy/.style={%
+    /utils/exec={%
+      \tikz@textfont
+      \let\@tempa\fsize
+      \let\fsize\@tempdima
+      \fsize=\f@size pt\relax
+      \pgfmathsetlength{\tikztiming@xunit}{\tikztiming@@xunit}%
+      \pgfmathsetlength{\tikztiming@yunit}{\tikztiming@@yunit}%
+      \let\fsize\@tempa
+    },%
+    /tikz/x=\tikztiming@xunit, /tikz/y=\tikztiming@yunit,
+  },
+  expand count/.store in={\tikztiming@expandcount},
+  expand count=1000,
+  unit/.style={%
+    /utils/exec={%
+      \def\tikztiming@@xunit{#1}%
+      \let\tikztiming@@yunit\tikztiming@@xunit
+    },%
+    /tikz/timing/adjust@xy,%
+  },
+  xunit/.style={%
+    /utils/exec={%
+      \def\tikztiming@@xunit{#1}%
+    },%
+    /tikz/timing/adjust@xy,%
+  },
+  yunit/.style={%
+    /utils/exec={%
+      \def\tikztiming@@yunit{#1}%
+    },%
+    /tikz/timing/adjust@xy,%
+  },
+  font/.style={%
+    /tikz/font={#1},
+    /tikz/timing/adjust@xy
+  },%
+  initchar/.value required,
+  initchar/.code={\uppercase{\gdef\tikztiming@lastchar{#1}}},
+  metachar/.code={\tikztimingmetachar#1},
+  grid/.style={timing,help lines},
+  @grid/.code={\texttiminggrid},
+  draw grid/.style={%
+    timing/before text/.append style={timing/@grid},%
+    timing/before/.append style={timing/@grid}%
+  },
+  no grid/.style={timing/@grid/.code={}},
+  before/.code={},
+  after/.code={},
+  before text/.code={\texttimingbefore},
+  after text/.code={\texttimingafter},
+  picture/.style={timing,line width=0.15ex},
+  intext/.style={timing,line width=0.15ex},
+  inline node/.style={shape=coordinate},
+  inline node/from char/.store in=\tikztiming@node@fromchar,
+  inline node/to char/.store in=\tikztiming@node@tochar,
+  table/.style={font=\sffamily,timing,line width=0.15ex},
+  before table/.code={},
+  after table/.code={},
+  coord/.style={coordinate},
+  save/.style={coordinate},
+  restore/.style={/utils/exec={\expandafter\tikzset\expandafter{\tikztiming@saved@options}}},
+  option/.style={/utils/exec={\g@addto@macro\tikztiming@saved@options{#1,}},#1},
+  nooptions/.style={/utils/exec={\gdef\tikztiming@saved@options{}}},
+  popoptions/.style={/utils/exec={\tikztiming@popoptions}},
+  pushoptions/.style={/utils/exec={\tikztiming@pushoptions}},
+  name/.style={inner sep=0pt,outer sep=0pt,minimum size=0pt},
+  text format/.store in=\tikztiming@textformat,
+  @/.style={},
+  D/.style={timing/d},
+  D/text/.style={timing/d/text},
+  D/background/.style={timing/d/background},
+  D@edge@/.style={timing/d@edge@},
+  D@edge@/text/.style={timing/d@edge@/text},
+  D@edge@/background/.style={timing/d@edge@/background},
+  U/.style={timing/u},
+  U/text/.style={timing/u/text},
+  U/background/.style={timing/u/background},
+  U@edge@/.style={timing/u@edge@},
+  U@edge@/text/.style={timing/u@edge@/text},
+  U@edge@/background/.style={timing/u@edge@/background},
+  H/.style={timing/h},
+  L/.style={timing/l},
+  E/.style={timing/e},
+  E/background/.style={timing/e/background},
+  M/decoration/.style={timing/m/decoration},
+  M/base/.style={timing/m/base},
+  M/.style={timing/m},
+  G/.style={timing/g},
+  Z/.style={timing/z},
+  T/.style={timing/t},
+  C/.style={timing/c},
+  X/.style={timing/x},
+  d/.style={},
+  d/text/.style={timing,scale=0.6,font=\sffamily},
+  d/background/.style={draw=none},
+  d@edge@/.style={timing/d},
+  d@edge@/text/.style={timing/d/text},
+  d@edge@/background/.style={timing/d/background},
+  u/.style={},
+  u/background/.style={draw=none,fill=gray},
+  u@edge@/.style={timing/u},
+  u@edge@/text/.style={timing/u/text},
+  u@edge@/background/.style={timing/u/background},
+  h/.style={},
+  l/.style={},
+  e/.style={},
+  e/background/.style={draw=none},
+  m/decoration/.style={decorate,%
+    decoration={zigzag,segment length=.25\tikztiming@xunit,
+    amplitude=.225\tikztiming@yunit}},
+  m/base/.style={black!40!brown},
+  m/.style={timing/m/base,timing/m/decoration},
+  g/.style={decorate=false},
+  z/.style={blue},
+  t/.style={},
+  c/.style={timing/lslope=0.0},
+  x/.style={red},
+  table/grid/.style={timing/grid},
+  table/lines/.style={},
+  table/rules/.style={line width=0.08em,line cap=butt},
+  table/midrules/.style={line width=0.05em,line cap=butt},
+  table/header/.style={timing/name},
+  table/label header/.style={},
+  table/row header/.style={},
+  slope/.code={%
+    \tikztimingsetslope{#1}%
+    \tikztimingsetdslope{2*#1}%
+    \tikztimingsetzslope{#1/2}%
+  },
+  lslope/.code={\tikztimingsetslope{#1}},
+  dslope/.code={\tikztimingsetdslope{#1}},
+  zslope/.code={\tikztimingsetzslope{#1}},
+  wscale/.code={\tikztimingsetwscale{#1}},
+  coldist/.store in=\tikztiming@coldist,
+  rowdist/.store in=\tikztiming@rowdist,
+  outer xsep/.store in=\tikztiming@xsep,
+  outer ysep/.store in=\tikztiming@ysep,
+  outer sep/.style={/tikz/timing/outer xsep=#1,/tikz/timing/outer ysep=#1},
+  %
+  debug/level/.code={\tikztiming@debug=#1\relax},
+  debug/level/.value required,
+  debug/scope/.style={font=\sffamily\tiny,gray},
+  debug/node/.style={above,inner sep=2pt},
+  debug/nodes/.style={%
+    /tikz/timing/after table/.append code={\tikztiming@marknodes{\tikztiming@namednodes}},
+    /tikz/timing/after text/.append code={\tikztiming@marknodes{\tikztiming@namednodes}}
+  },
+  debug/markcmd/.store in={\tikztiming@markcmd},
+}
+\tikzset{timing/inline node/.cd,
+  from char={}, to char={}
+}
+\def\texttimingbefore{}
+\def\texttimingafter{}
+\def\texttiminggrid{%
+  \draw[xstep={\timingwidth/2.},ystep={\timingheight/2.},timing/grid] (0,0) grid
+  (\timingwidth*\tikztimingwidth,\timingheight);
+}
+\DeclareRobustCommand*\texttiming[2][]{%
+  \begingroup
+    \let\tikztiming@lastchar\empty
+    \let\tikztiming@settings\empty
+    \tikzset{timing/before/.append style={timing/before text}}%
+    \tikzset{timing/after/.prefix style={timing/after text}}%
+    \ifx\relax#1\relax\else
+      \tikztiming@testoptarg#1\relax\relax%
+    \fi
+    \begin{tikzpicture}[timing/intext,baseline={(0,0)}]
+      \tikztiming@picinit
+      \def\@tempa{\expandafter\timing\expandafter[\tikztiming@settings] at (0,0)}%
+      \expandafter\@tempa\expandafter{\expandafter[\tikztiming@lastchar]#2};%
+    \end{tikzpicture}%
+  \endgroup
+}
+\def\tikztiming@testoptarg#1#2\relax{%
+  \ifx\relax#2\relax
+    \uppercase{\def\tikztiming@lastchar{#1}}%
+  \else
+    \def\tikztiming@settings{#1#2}%
+  \fi
+}
+\def\tikztiming@picinit{%
+    \global\let\tikztiming@namednodes\empty
+}
+\let\tikztiming@namednodes\empty
+\def\tikztiming@init{%
+    \def\tikztiming@lastchar{@}%
+    \def\tikztiming@num{0}%
+    \let\tikztiming@currentchar\empty
+    \let\tikztiming@settings\empty
+    \let\tikztiming@fromchar\empty
+    \let\tikztiming@tochar\empty
+    \let\setwscale\tikztimingsetwscale
+    \def\wscale{\tikztiming@wscale}%
+    \let\xunit\tikztiming@xunit
+    \let\yunit\tikztiming@yunit
+    \def\slope{\timingslope}%
+    \def\lslope{\timingslope}%
+    \def\zslope{\timingzslope}%
+    \def\dslope{\timingdslope}%
+    \gdef\tikztiming@saved@settings{}%
+    \gdef\tikztiming@saved@options{}%
+    \gdef\tikztiming@oldnodecenter@{}%
+    \def\tikztimingwidth{0.0}%
+    \setcounter{tikztimingtrans}{-1}%
+    \setcounter{tikztimingtranspos}{0}%
+    \def\tikztiming@str{%
+      \useasboundingbox (0,0) rectangle (\tikztimingwidth,\timingheight);
+      \draw (0,0)
+        coordinate (timing@refa)
+        coordinate (timing@ref)  at (0,\timingheight/2)
+        coordinate (timing@refb) at (0,\timingheight)
+        coordinate (timing/start)
+        coordinate (timing/start base)
+    }%
+}
+\def\tikz@timing{%
+  \@ifnextchar{[}%
+    {\tikz@timing@}%
+    {\tikz@timing@[]}%
+}
+\g@addto@macro\tikz@installcommands{%
+  \let\tikz@origtiming=\timing%
+  \let\timing=\tikz@timing%
+}
+\g@addto@macro\tikz@uninstallcommands{%
+  \let\timing=\tikz@origtiming%
+}
+\def\tikz@timing@[#1]{%
+  \@ifnextchar{a}%
+    {\tikz@timing@at{#1}}%
+    {\PackageWarning{tikz-timing}{The \string\timing\space command awaits now an
+    `at' before the coordinate, like the \string\node\space command is doing.
+    Please update your source code to ensure compatibility with newer
+    versions}{}{}{}%
+     \@ifnextchar{+}%
+      {\tikz@timing@@{#1}}%
+      {\@ifnextchar(%)
+        {\tikz@timing@@{#1}}%
+        {\tikz@timing@@{#1}++(0,0)}%
+      }%
+    }%
+}
+\def\tikz@timing@at#1at#2(#3){%
+  \tikz@timing@@@{#1}{#2(#3)}%
+}
+\def\tikz@timing@@#1#2(#3){%
+  \tikz@timing@@@{#1}{#2(#3)}%
+}
+\def\tikz@timing@@@#1#2#3{%
+  \begingroup
+    \tikztiming@init
+    \let\tikz@alias=\pgfutil@empty%
+    \begin{scope}[shift={#2},timing,#1]%
+      \@ifnextchar{[}%
+        {\tikz@timing@@@init}%
+        {\tikz@timing@@@init[]}%
+      #3\relax
+      \ifnum\tikztiming@debug>1
+      \message{^^J\meaning\tikztiming@str^^J}%
+      \ifnum\tikztiming@debug>2
+      {%
+      \def\@protect##1{\def##1{\noexpand##1}}%
+      \@protect\useasboundingbox
+      \@protect\draw
+      \@protect\p
+      \@protect\n
+      \@protect\x
+      \@protect\y
+      \@protect\tikztiming@overlay@save
+      \edef\@tempa{\tikztiming@str}%
+      \message{^^J\meaning\@tempa^^J}%
+      }%
+      \fi
+      \fi
+      \tikzset{timing/before}%
+      \tikztiming@str;%
+      \path let \p1 = (timing/end top), \p2 = (timing/end base),
+                \p3 = (timing/end), \p4 = (timing/start) in
+          [/utils/exec={%
+            \xdef\tikztiming@northeast{\noexpand\pgfpoint{.5*\pgf@pt@aa*\x1}{.5*\pgf@pt@bb*\y1}}%
+            \xdef\tikztiming@startpoint{\noexpand\pgfpoint{\pgf@pt@aa*(\x4-.5*\x1)}{\pgf@pt@bb*(\y4-.5*\y1)}}%
+            \xdef\tikztiming@endpoint{\noexpand\pgfpoint{\pgf@pt@aa*(\x3-.5*\x1)}{\pgf@pt@bb*(\y3-.5*\y1)}}%
+          }];
+      \node [shape=tikztiming@shape,anchor=origin,#1] at (0,0) {};
+      \tikzset{timing/after}%
+    \end{scope}%
+  \endgroup
+  \tikz@timing@@@end
+}
+\def\tikz@timing@@@end{%
+  \@ifnextchar{;}%
+    {\@gobble}%
+    {\PackageError{tikz-package}{Can not parse timing path}{}}%
+}
+\def\tikz@timing@@@init[#1]{%
+  \begingroup
+  \ifx\relax#1\relax\else
+    \uppercase{\def\tikztiming@lastchar{#1}}%
+  \fi
+  \@ifundefined{tikztiming@initcode@\tikztiming@lastchar}%
+    {}%
+    {\@nameuse{tikztiming@initcode@\tikztiming@lastchar}}%
+  \if @\tikztiming@lastchar\relax\else
+  \tikztiming@iftrans{@\tikztiming@lastchar}%
+    {\tikztiming@nameaddtostr{@}{\tikztiming@lastchar}{}}%
+    {\PackageWarning{tikz-timing}{Start value for timing character
+    '\tikztiming@lastchar' is not defined and will be ignored!}{}{}{}}%
+  \fi
+  \tikztiming@parser
+}
+\def\tikztiming@trans@#1#2#3#4{%
+  \csname\tikztiming@prefix #2#3#4\endcsname{#1}{#2}{#3}{#4}%
+}
+\def\tikztiming@beforenextcode@D@edge@{%
+  \if D\tikztiming@currentchar\else
+    \gdef\tikztiming@lastchar{D}%
+  \fi
+}
+\def\tikztiming@beforenextcode@U@edge@{%
+  \if U\tikztiming@currentchar\else
+    \gdef\tikztiming@lastchar{U}%
+  \fi
+}
+\def\tikztiming@initcode@{%
+  \gdef\tikztiming@lastchar{@}%
+}
+\def\tikztiming@initcode@D{%
+  \gdef\tikztiming@lastchar{D@edge@}%
+}
+\def\tikztiming@initcode@U{%
+  \gdef\tikztiming@lastchar{U@edge@}%
+}
+\def\tikztiming@parser{%
+  \@ifnextchar\relax
+    {\tikztiming@parser@end}%
+    {\tikztiming@testfornum}%
+}
+\def\tikztiming@eaddto#1#2{%
+  \begingroup
+    \tikztiming@internaldefs
+    \@temptokena\expandafter{#1}%
+    \xdef#1{%
+      \the\@temptokena
+      #2%
+    }%
+  \endgroup
+}
+\def\tikztiming@eaddtostr{%
+  \tikztiming@eaddto\tikztiming@str
+}
+\def\tikztiming@addtostr{%
+  \g@addto@macro\tikztiming@str
+}
+\def\tikztiming@makeglobal#1{%
+  \global\let#1#1\relax\relax
+}
+\def\tikztiming@trans{}%
+\def\tikztiming@iftrans#1{%
+  \tikztiming@iftrans@#1\empty\empty\empty\relax
+}
+\def\tikztiming@iftrans@#1#2#3#4\relax{%
+  \begingroup
+  \xdef\tikztiming@trans{#1#2}%
+  \ifx\tikztiming@trans\empty
+    \gdef\tikztiming@trans{{@}{}{@}}%
+  \else
+    \global\let\tikztiming@trans\relax
+    % Use triple macros before double macros
+    \@ifundefined{tikztiming@triple@#2}%
+      {\@ifundefined{\tikztiming@prefix#1#2}%
+        {}%
+        {\xdef\tikztiming@trans{{#1}{#2}{}}}%
+      }%
+      {%
+      \@ifundefined{\tikztiming@prefix#1#2#3}%
+        {}%
+        {\xdef\tikztiming@trans{{#1}{#2}{#3}}}%
+      }%
+    % If both do not exist, search for aliases:
+    \ifx\tikztiming@trans\relax
+      \@ifundefined{tikztiming@alias@#1}%
+        {\edef\chara{#1}}%
+        {\edef\chara{#1,\csname tikztiming@alias@#1\endcsname}}%
+      \@ifundefined{tikztiming@alias@#2}%
+        {\edef\charb{#2}}%
+        {\edef\charb{#2,\csname tikztiming@alias@#2\endcsname}}%
+      \@ifundefined{tikztiming@triple@#2}%
+        {\def\charc{\empty}}%
+        {%
+         \@ifundefined{tikztiming@alias@#3}%
+           {\edef\charc{#3,}}%
+           {\edef\charc{#3,\csname tikztiming@alias@#3\endcsname,}}%
+        }%
+      \ifx\charb\empty
+        \def\charb{\empty}%
+      \fi
+      \let\tikztiming@next\relax
+      \foreach \b in \charb {%
+        \foreach \a in \chara {%
+          \foreach \c in \charc {%
+            %\message{ ^^J Testing: \a\b\c ^^J}%
+            \@ifundefined{\tikztiming@prefix\a\b\c}%
+              {}{%
+                \xdef\tikztiming@trans{{#1}{#2}{#3}}%
+                \expandafter\tikztimingcpy\expandafter
+                  {\tikztiming@trans}{\a\b\c}%
+                \ifnum\tikztiming@debug>0
+                  \message{^^J DEBUG: '#1#2#3' = '\a\b\c' ^^J}%
+                \fi
+                \expandafter\tikztiming@makeglobal
+                \csname\tikztiming@pfxtr\tikztiming@trans\endcsname
+                \ifnum\tikztiming@debug>1
+                  \ifnum\tikztiming@debug>2
+                    \expandafter\show\csname\tikztiming@pfxtr\tikztiming@trans\endcsname
+                  \else
+                    \message{^^J\tikztiming@trans:
+                    \expandafter\meaning\csname\tikztiming@pfxtr\tikztiming@trans\endcsname^^J}%
+                    \message{^^J\a\b\c:
+                    \expandafter\meaning\csname\tikztiming@prefix\a\b\c\endcsname^^J}%
+                  \fi
+                \fi
+                \global\let\tikztiming@next\breakforeach
+              }%
+            \tikztiming@next
+          }%
+          \tikztiming@next
+        }%
+        \tikztiming@next
+      }%
+    \fi
+  \fi
+  \endgroup
+  \ifx\tikztiming@trans\relax
+    \expandafter\@secondoftwo
+  \else
+    \expandafter\@firstoftwo
+  \fi
+}
+\def\tikztiming@nameaddtostr#1#2#3{%
+  \tikztiming@iftrans{{#1}{#2}{#3}}%
+   {%
+     \edef\@tempa{\noexpand\tikztiming@trans@{\tikztiming@num}\tikztiming@trans}%
+     \expandafter\g@addto@macro
+     \expandafter\tikztiming@str
+     \expandafter{\@tempa}%
+   }%
+   {\PackageWarning{tikz-timing}{No transitions '#1#2' (or '#1#2#3') defined!}}%
+}
+\def\tikztiming@output@addcode#1{%
+  \g@addto@macro\tikztiming@output@bufcode{\unexpanded{ #1 }}%
+}
+\def\tikztiming@output@eaddcode#1{%
+  \g@addto@macro\tikztiming@output@bufcode{ #1 }%
+}
+\def\tikztiming@output@Eaddcode{%
+  \tikztiming@eaddto\tikztiming@output@bufcode%
+}
+\def\tikztiming@output@bufchara{}%
+\def\tikztiming@output@bufcharb{}%
+\def\tikztiming@output@bufnum{0}%
+\def\tikztiming@output@bufcode{}%
+\def\tikztiming@output@nextchar{}%
+\def\tikztiming@output#1#2{%
+  \edef\tikztiming@fromchar{#1}%
+  \edef\tikztiming@tochar{#2}%
+  \ifx\relax#2\relax
+    %\tikztiming@output@codeflush
+    \tikztiming@nameaddtostr{}{#1}{}%
+  \else
+    \ifcase0%
+      \ifx\tikztiming@output@bufchara\empty
+        \ifx\tikztiming@output@bufcharb\empty
+          1%
+        \fi
+      \fi\relax
+      % not empty
+      \edef\tikztiming@output@currentchar{#2}%
+      \ifcase0%
+       \ifx\tikztiming@output@bufcode\empty% Stop combining if code was inserted
+        \expandafter\ifx\csname tikztiming@nocombine@#2\endcsname\relax
+         \ifx\tikztiming@output@currentchar\tikztiming@output@bufcharb
+           2%
+         \fi
+        \fi
+       \else
+         1%
+       \fi
+      \relax
+        \edef\tikztiming@output@nextchar{#2}%
+        \tikztiming@output@flush
+        \xdef\tikztiming@output@bufchara{#1}%
+        \xdef\tikztiming@output@bufcharb{#2}%
+      \or
+        \edef\tikztiming@output@nextchar{#2}%
+        \tikztiming@output@flush
+        \xdef\tikztiming@output@bufchara{#1}%
+        \xdef\tikztiming@output@bufcharb{#2}%
+      \or
+        \pgfmathparse{\tikztiming@output@bufnum + \tikztiming@num}%
+        \global\let\tikztiming@output@bufnum\pgfmathresult
+      \fi
+    \else % empty
+      \tikztiming@output@codeflush
+      \xdef\tikztiming@output@bufchara{#1}%
+      \xdef\tikztiming@output@bufcharb{#2}%
+      \global\let\tikztiming@output@bufnum\tikztiming@num
+    \fi
+  \fi
+}
+\def\tikztiming@output@flush{%
+  \tikztiming@output@charflush
+  \tikztiming@output@codeflush
+}
+\def\tikztiming@output@codeflush{%
+  \tikztiming@eaddtostr{\tikztiming@output@bufcode}%
+  \global\let\tikztiming@output@bufcode\empty%
+}
+\def\tikztiming@output@charflush{%
+  \begingroup
+    \let\tikztiming@num\tikztiming@output@bufnum
+    \tikztiming@nameaddtostr
+      {\tikztiming@output@bufchara}%
+      {\tikztiming@output@bufcharb}%
+      {\tikztiming@output@nextchar}%
+  \endgroup%
+  \gdef\tikztiming@output@nextchar{}%
+  \gdef\tikztiming@output@bufchara{}%
+  \gdef\tikztiming@output@bufcharb{}%
+  \global\let\tikztiming@output@bufnum\tikztiming@num
+}
+\newcommand\tikztiming@nameedef[4]{%
+  \def\@gtempa##1{#4}%
+  \begingroup
+    \tikztiming@internaldefs
+    \xdef\@gtempa##1##2##3##4{\@gtempa{\width}}%
+  \endgroup
+  \expandafter\let\csname\tikztiming@prefix#1#2#3\endcsname\@gtempa
+  \let\@gtempa\empty
+}
+\newcommand\tikztiming@namelet[2]{%
+  \ifcase0%
+    \@ifundefined{\tikztiming@prefix#2}%
+      {\@ifundefined{\tikztiming@prefix#1}%
+        {0}{1}%
+      }%
+      {1}%
+    \relax
+  \else
+    \expandafter\let
+    \csname\tikztiming@prefix#1\expandafter\endcsname
+    \csname\tikztiming@prefix#2\endcsname
+  \fi
+}
+\def\tikztiming@parser@end{%
+  \def\tikztiming@output@nextchar{@}%
+  \let\tikztiming@fromchar\tikztiming@tochar
+  \edef\tikztiming@tochar{@}%
+  \tikztiming@output@flush
+  \global\let\tikztimingwidth\tikztimingwidth
+  \tikztiming@addtostr{ coordinate (timing/end)
+    let \p1 = (timing/start base), \p2 = (timing/end), \p3 = (0,1) in
+      coordinate (timing/end base) at (\x2,\y1)
+      coordinate (timing/end top)  at (\x2,\y1+\y3)
+  }%
+  \endgroup
+  \tikztiming@endhook%
+}
+\let\tikztiming@endhook\relax
+\def\tikztiming@parser@#1{%
+  \ifx\relax#1\empty
+    \expandafter\tikztiming@parser@end
+  \else
+    \tikztiming@iflower{#1}%
+      {\tikztiming@setnum{\tikztiming@num/2}}%
+      {}%
+    \ifx\tikztiming@back\empty\else
+      \tikztiming@setnum{\tikztiming@num - \tikztiming@back}%
+      \global\let\tikztiming@back\empty
+    \fi
+    \pgfmathparse{\tikztimingwidth + \tikztiming@num}%
+    \global\let\tikztimingwidth\pgfmathresult
+    \uppercase{\gdef\tikztiming@currentchar{#1}}%
+    \@nameuse{tikztiming@beforenextcode@\tikztiming@lastchar}%
+    \@nameuse{tikztiming@beforecode@\tikztiming@currentchar}%
+    \tikztiming@output{\tikztiming@lastchar}{\tikztiming@currentchar}%
+    \global\let\tikztiming@lastchar\tikztiming@currentchar
+    \@nameuse{tikztiming@aftercode@\tikztiming@currentchar}%
+    \expandafter\lowercase\expandafter{%
+      \expandafter\def\expandafter\@tempa
+      \expandafter{\tikztiming@currentchar}%
+    }%
+    \pgfkeysifdefined{/tikz/timing/\@tempa/text/.@cmd}%
+      {\expandafter\expandafter\expandafter\tikztiming@testfortext}%
+      {\expandafter\expandafter\expandafter\tikztiming@parser}%
+  \fi
+}
+\def\tikztiming@testfortext{%
+  \@ifnextchar\bgroup
+    {\tikztiming@handletext}%
+    {\tikztiming@parser}%
+}
+\def\tikztiming@handletext#1{%
+  \@ifnextchar\relax
+    {\def\tikztiming@output@nextchar{@}\tikztiming@handletext@{#1}}%
+    {\def\tikztiming@output@nextchar{Z}\tikztiming@handletext@{#1}}%
+}
+\def\tikztiming@handletext@#1{%
+  \@ifnextchar{[}%
+    {\tikztiming@handletext@@}%
+    {\tikztiming@handletext@@[]}%
+  #1\tikztiming@endoftext
+}
+\def\tikztiming@handletext@@[#1]#2\tikztiming@endoftext{%
+  \@ifnextchar{\relax}%
+    {\def\tikztiming@output@nextchar{@}%
+     \tikztiming@handletext@@@{#1}{#2}}%
+    {\tikztiming@handletext@@@{#1}{#2}}%
+}
+\def\tikztiming@handletext@@@#1#2{%
+  \expandafter\lowercase\expandafter{%
+    \expandafter\def\expandafter\@tempa
+    \expandafter{\tikztiming@currentchar}%
+  }%
+  \edef\@tempa{node [timing/\@tempa/text,}%
+  \expandafter\tikztiming@output@addcode\expandafter{%
+    \@tempa
+    #1] at ($ (timing@dstart) !.5! (timing@dend) $)
+    {\tikztiming@textformat{#2}}
+  }%
+  \ifcase0%
+    \if @\tikztiming@output@bufchara
+      1%
+    \else
+      \ifx\tikztiming@output@bufchara\tikztiming@currentchar
+        1%
+      \fi
+    \fi
+  \relax
+  \else
+  \fi
+  \xdef\tikztiming@output@bufcharb{\tikztiming@currentchar @edge@}%
+  \xdef\tikztiming@lastchar{\tikztiming@currentchar @edge@}%
+  \tikztiming@parser
+}
+\let\tikztiming@textformat\empty
+\def\tikztiming@defcode#1{%
+  \@namedef{tikztiming@code@\meaning#1}%
+}
+\tikztiming@defcode{@}#1{%
+  #1\relax
+  \tikztiming@parser
+}
+\begingroup
+  \expandafter\let\expandafter\temp
+    \csname tikztiming@code@\meaning @\endcsname
+  \makeatother
+  \expandafter\global\expandafter\let
+    \csname tikztiming@code@\meaning @\endcsname\temp
+\endgroup
+\tikztiming@defcode$#1${%
+  \pgfmathparse{#1}%
+  \expandafter
+  \tikztiming@parser\pgfmathresult
+}
+\tikztiming@defcode{,}{%
+  \tikztiming@output@eaddcode{%
+    \newdraw
+  }%
+  \tikztiming@parser
+}
+\tikztiming@defcode{;}{%
+  \endgroup\begingroup
+  \tikztiming@output@eaddcode{%
+    \newdrawns
+  }%
+  \tikztiming@parser
+}
+\tikztiming@defcode{N}{%
+  \@ifnextchar[%]
+    {\tikztiming@addnode@getoptions}%
+    {\tikztiming@addnode@getoptions[]}%
+}
+\tikztiming@defcode{n}{%
+  \@ifnextchar[%]
+    {\tikztiming@addnode@getoptions}%
+    {\tikztiming@addnode@getoptions[]}%
+}
+\tikztiming@defcode{B}{%
+  \pgfmathparse{\tikztiming@back+\tikztiming@num}%
+  \global\let\tikztiming@back\pgfmathresult
+  \tikztiming@parser
+}
+\tikztiming@defcode{b}{%
+  \pgfmathparse{\tikztiming@back+\tikztiming@num/2}%
+  \global\let\tikztiming@back\pgfmathresult
+  \tikztiming@parser
+}
+\tikztiming@defcode{F}{%
+  \pgfmathparse{\tikztiming@back-\tikztiming@num}%
+  \global\let\tikztiming@back\pgfmathresult
+  \tikztiming@parser
+}
+\tikztiming@defcode{f}{%
+  \pgfmathparse{\tikztiming@back-\tikztiming@num/2}%
+  \global\let\tikztiming@back\pgfmathresult
+  \tikztiming@parser
+}
+\tikztiming@defcode[{%}]{
+  \@ifnextchar[%]
+    {\tikztiming@bothoption}%
+    {\@ifnextchar{!}%
+      {\tikztiming@parseroption}%
+      {\@ifnextchar{|}%
+        {\tikztiming@onceoption}%
+        {\tikztiming@addoption}%
+      }%
+    }%
+}
+\def\tikztiming@parseroption!#1!]{%
+  \pgfqkeys{/tikz/timing}{#1}%
+  \tikztiming@parser
+}
+\def\tikztiming@addoption#1]{%
+  \tikztiming@output@addcode{ [timing/option={#1}] }%
+  \tikztiming@parser
+}
+\def\tikztiming@bothoption[#1]]{%
+  \tikzset{#1}%[
+  \tikztiming@addoption{#1}]%
+}
+\def\tikztiming@onceoption|#1|]{%
+  \tikztiming@output@addcode{ [#1] }%
+  \tikztiming@parser
+}
+\tikztiming@defcode{\bgroup}{%
+  \tikztiming@output@eaddcode{%
+    [timing/pushoptions]
+    \newdraw
+  }%
+  \tikztiming@parser
+}
+\tikztiming@defcode{\egroup}{%
+  \tikztiming@output@eaddcode{%
+    [timing/popoptions]
+    \newdraw
+  }%
+  \tikztiming@parser
+}
+\def\tikztiming@popoptions{%
+  \expandafter\tikztiming@popoptions@\tikztiming@optionstack\relax
+}
+\def\tikztiming@optionstack{{}}
+\def\tikztiming@popoptions@#1#2\relax{%
+  \gdef\tikztiming@saved@options{#1}%
+  \gdef\tikztiming@optionstack{#2}%
+  \ifx\tikztiming@optionstack\empty
+    \gdef\tikztiming@optionstack{{}}%
+  \fi
+}
+\def\tikztiming@pushoptions{%
+  \expandafter\expandafter\expandafter\gdef
+  \expandafter\expandafter\expandafter\tikztiming@optionstack
+  \expandafter\expandafter\expandafter{%
+  \expandafter\expandafter\expandafter{\expandafter\tikztiming@saved@options\expandafter}\tikztiming@optionstack}%
+}
+\def\tikztiming@addnode@getoptions[#1]{%
+  \@ifnextchar(%)
+    {\tikztiming@addnode@getname{#1}}%
+    {\tikztiming@addnode@getname{#1}()}%
+}
+\def\tikztiming@addnode@getname#1(#2){%
+  \@ifnextchar\bgroup
+    {\tikztiming@addnode@{#1}{#2}}%
+    {\tikztiming@addnode@{#1}{#2}{}}%
+}
+\def\tikztiming@addnode@#1#2#3{%
+  \def\@tempa{#2}%
+  \ifx\@tempa\empty
+    \def\@tempa{ node [timing/inline node,%
+      timing/inline node/from char={\tikztiming@fromchar},%
+      timing/inline node/to char={\tikztiming@tochar},%
+      \unexpanded{#1}] }%
+    \def\@tempb{}%
+  \else
+    \def\@tempa{ node [timing/inline node,%
+      timing/inline node/from char={\tikztiming@fromchar},%
+      timing/inline node/to char={\tikztiming@tochar},%
+      \unexpanded{#1}] (\unexpanded{#2}) }%
+    \xdef\tikztiming@namednodes{\tikztiming@namednodes,#2}%
+  \fi
+  \expandafter\tikztiming@output@eaddcode\expandafter{\@tempa \unexpanded{{#3}}}%
+  \tikztiming@parser
+}
+\newcommand*\tikztiming@marknodes[2][]{%
+  \scope[timing/debug/scope,#1]
+    \edef\@tempa{floor((\noexpand\y1-\tikztiming@xunit) / \tikztiming@rowdist\tikztiming@xunit) * \tikztiming@rowdist\tikztiming@xunit}%
+    \foreach \N in #2 {%
+      \ifx\N\empty\else
+        \tikztiming@markcmd
+        \path let \p1=(\N) in
+          node [timing/debug/node] at ($ (\x1,\noexpand\@tempa) + (0,1) $) {\N};
+      \fi
+    }%
+  \endscope
+}
+\def\tikztiming@markcmd{ \draw (\N) circle (1pt); }%
+\newcommand*\tikztiming@mark@nodes[2][]{%
+  \begingroup
+    \def\@tempa{#2}%
+    \ifx\@tempa\empty \let\@tempa\tikztiming@namednodes \fi
+    \ifx\@tempa\space \let\@tempa\tikztiming@namednodes \fi
+    \def\@tempb{\tikztiming@marknodes[#1]}%
+    \expandafter\@tempb\expandafter{\expandafter{\@tempa}}%
+  \endgroup
+}
+\def\tikztiming@testforcode{%
+  \@ifnextchar{!}%
+    {\tikztiming@testforcode@}%
+    {\@ifundefined{tikztiming@code@\meaning\@let@token}%
+      {\tikztiming@parser@}%
+      {\expandafter\afterassignment
+       \csname tikztiming@code@\meaning\@let@token\endcsname
+       \let\@let@token=%
+      }%
+    }%
+}
+\def\tikztiming@testforcode@#1{%
+  \@ifnextchar\bgroup
+    {\tikztiming@handlecode}%
+    {%
+      \PackageWarning{tikz-timing}{Missing braces after '!' character. Ignoring
+      this character}{}{}{}%
+      \tikztiming@parser
+    }%
+}
+\def\tikztiming@handlecode#1{%
+  \tikztiming@output@addcode{ #1 }%
+  \tikztiming@parser
+}
+\def\tikztiming@testfornum{%
+  \global\let\tikztiming@num\tikztiming@wscale
+  \let\tikztiming@numchars\empty
+  \tikztiming@numfrac0\relax
+  \afterassignment
+  \tikztiming@testfornum@
+  \tikztiming@numint0%
+}
+\def\tikztiming@testfornumfrac{%
+  \afterassignment
+  \tikztiming@testfornum@@@
+  \tikztiming@numfrac1%
+}
+\def\tikztiming@numloop{%
+  \ifnum\tikztiming@numint>0%
+    \toks@\expandafter{\tikztiming@numchars}%
+    \xdef\tikztiming@numchars{%
+      \the\toks@
+      \the\@temptokena
+    }%
+    \advance\tikztiming@numint by -1\relax
+    \expandafter\tikztiming@numloop
+  \fi
+}
+\def\tikztiming@testfornum@{%
+  \ifx0\@let@token
+    \let\tikztiming@next\tikztiming@testfornum@@
+  \else
+  \ifnum0<\tikztiming@numint
+    \let\tikztiming@next\tikztiming@testfornum@@
+  \else
+    \def\tikztiming@next{%
+      \@ifnextchar{.}%
+        {\expandafter\tikztiming@testfornumfrac\@gobble}%
+        {%
+          \tikztiming@numint1\relax
+          \tikztiming@numfrac0\relax
+          \global\let\tikztiming@num\tikztiming@wscale
+          \if@tikztiming@metachar
+            {\def\@tempa{\expandafter\expandafter\expandafter
+             \tikztiming@parser
+             \csname tikztiming@metachar@\meaning\@let@token\endcsname{1}}%
+             \expandafter\@tempa\@gobble
+            }%
+            {\tikztiming@testforcode}%
+        }%
+    }%
+  \fi\fi
+  \tikztiming@next
+}
+\def\tikztiming@testfornum@@{%
+  \@ifnextchar{.}%
+    {\expandafter\tikztiming@testfornumfrac\@gobble}%
+    {\tikztiming@testfornum@@@}%
+}
+\def\tikztiming@testfornum@@@{%
+  \edef\tikztiming@num{\the\tikztiming@numint.\expandafter\@gobble\the\tikztiming@numfrac}%
+  \tikztiming@setnum{\tikztiming@wscale * \tikztiming@num}%
+  \@ifnextchar\bgroup
+    {%
+      \expandafter\tikztiming@numfrac\expandafter0\expandafter
+      \@gobble\the\tikztiming@numfrac\relax
+      \ifnum0=\tikztiming@numfrac\else
+        \pgfmathparse{round(\tikztiming@num)}%
+        \PackageWarning{tikz-timing}%
+          {Can not repeat group by a non-integer factor!^^J%
+           Rounding '\tikztiming@num' to '\pgfmathresult'.}{}{}{}%
+        \global\let\tikztiming@num\pgfmathresult
+      \fi
+      \tikztiming@testfornum@@@@
+    }%
+    {%
+      \if@tikztiming@metachar
+        {\def\@tempa{\expandafter\expandafter\expandafter
+        \tikztiming@parser
+        \csname tikztiming@metachar@\meaning\@let@token\expandafter\endcsname
+        \expandafter{\tikztiming@num}}%
+        \expandafter\@tempa\@gobble
+        }%
+        {\tikztiming@testforcode}%
+    }%
+}
+\def\tikztiming@testfornum@@@@#1{%
+  \begingroup
+    \@temptokena{#1}%
+    \tikztiming@numloop%
+  \endgroup
+  \tikztiming@numint1\relax
+  \tikztiming@numfrac0\relax
+  \expandafter\tikztiming@parser\tikztiming@numchars
+}
+\def\tikztimingmetachar#1{%
+  \@ifnextchar{[}%]
+    {\tikztiming@metachar{#1}}%
+    {\tikztiming@metachar{#1}[]}%
+}
+\def\tikztiming@metachar#1[#2]#3{%
+  \ifx\relax#3\relax
+    \expandafter\let\csname tikztiming@metachar@\meaning#1\endcsname\@undefined
+  \else
+    \@namedef{tikztiming@metachar@\meaning#1}{}%
+    \ifx\relax#2\relax
+      \expandafter\renewcommand\expandafter*%
+      \csname tikztiming@metachar@\meaning#1\expandafter
+      \endcsname\expandafter[1]{##1{#3}}%
+    \else
+      \expandafter\renewcommand\expandafter*%
+      \csname tikztiming@metachar@\meaning#1\expandafter
+      \endcsname\expandafter[#2]{#3}%
+    \fi
+  \fi
+  \ifnum\tikztiming@debug=-1
+    \message{^^J Defined meta-char '#1' as:
+      \expandafter\meaning\csname tikztiming@metachar@\meaning#1\endcsname ^^J}%
+  \fi
+}
+\def\if@tikztiming@metachar#1#2{%
+  \@ifundefined{tikztiming@metachar@\meaning\@let@token}{#2}{#1}%
+}
+\newcounter{tikztimingrows}
+\def\abc{\tracingassigns=1}
+\newenvironment{tikztimingtable}[1][]{%
+  \begingroup
+  \setcounter{tikztiming@nrows}{0}%
+  \def\tikztiming@maxwidth{0.0}%
+  \let\extracode\tikztiming@extracode
+  \let\endextracode\tikztiming@endextracode
+  \let\tablegrid\tikztiming@tablegrid
+  \let\fulltablegrid\tikztiming@fulltablegrid
+  \let\horlines\tikztiming@horlines
+  \let\vertlines\tikztiming@vertlines
+  \let\marknodes\tikztiming@mark@nodes
+  \def\background{\pgfonlayer{background}\scope}%
+  \def\endbackground{\endscope\endpgfonlayer}%
+  \def\tablerules{\tikztiming@tablerules}%
+  \def\tableheader{\tikztiming@tableheader}%
+  \def\rowdist{\tikztiming@rowdist}%
+  \def\coldist{\tikztiming@coldist}%
+  \def\nrows{\the\c@tikztiming@nrows}%
+  \def\twidth{\tikztiming@maxwidth}%
+  \tikzpicture[timing/table,#1]%
+    \coordinate (@last row)  at (0,\rowdist);
+    \coordinate (label@header)   at ($ -1*(\tikztiming@coldist,0) + 1.5*(0,\tikztiming@rowdist) $);
+    \coordinate (diagram@header) at ($                              1.5*(0,\tikztiming@rowdist) $);
+    \coordinate (timing@table@bottom right) at (0,0);
+    \coordinate (timing@table@bottom left)  at ($ -1*(\tikztiming@coldist,0) $);
+    \tikztiming@picinit
+    \tikzset{timing/before table}%
+    \tikztimingtable@checkrow
+}{%
+  \tikzset{timing/after table}%
+  \endtikzpicture
+  \endgroup
+}
+\def\tikztiming@extracode{%
+  \path
+    let
+      \p1 = (row1.north west),
+      \p2 = (timing@table@bottom right),
+      \p3 = (\x2-\x1,\y1-\y2),
+      \p4 = (\pgf@pt@aa * \x3, \pgf@pt@bb * \y3)
+    in
+      node [shape=rectangle,anchor=north west,
+            minimum width=\x4,minimum height=\y4,
+            inner sep=0pt,outer sep=0pt]
+        at (\x1,\y1) (all rows) {}
+    ;
+  \path
+    let
+      \p0 = ($ -1*(\tikztiming@coldist,0) + (0,1) $),
+      \p1 = (label1.north east),
+      \p2 = (timing@table@bottom left),
+      \p3 = (\x0-\x2,\y1-\y2),
+      \p4 = (\pgf@pt@aa * \x3, \pgf@pt@bb * \y3)
+    in
+      node [shape=rectangle,anchor=north east,
+            minimum width=\x4,minimum height=\y4,
+            inner sep=0pt,outer sep=0pt]
+        at (\x1,\y1) (all labels) {}
+    ;
+   \@ifnextchar[{\tikztiming@oset}{}%
+}
+\def\tikztiming@endextracode{%
+}%
+\def\tikztimingtable@checkrow{%
+  \@ifnextchar\end
+    {\tikztimingtable@chkendec}%
+    {\ifx\@let@token\extracode
+       \let\tikztiming@next\empty
+     \else
+       \ifx\@let@token\begin
+         \def\tikztiming@next{\tikztimingtable@chkbegec}%
+       \else
+         \def\tikztiming@next{\tikztimingtable@row}%
+       \fi
+     \fi
+     \tikztiming@next
+    }%
+}
+\def\tikztimingtable@chkbegec\begin#1{
+  \begingroup
+  \def\@tempa{#1}%
+  \def\@tempb{extracode}%
+  \ifx\@tempa\@tempb
+    \endgroup
+    \def\tikztiming@next{\begin{extracode}}%
+  \else
+    \endgroup
+    \def\tikztiming@next{\tikztimingtable@row\begin{#1}}%
+  \fi
+  \tikztiming@next
+}
+\def\tikztimingtable@chkendec\end#1{
+  \begingroup
+  \def\@tempa{#1}%
+  \def\@tempb{extracode}%
+  \ifx\@tempa\@tempb
+    \endgroup
+    \def\tikztiming@next{\end{extracode}\tikztimingtable@row}%
+  \else
+    \endgroup
+    \def\tikztiming@next{\end{#1}}%
+  \fi
+  \tikztiming@next
+}
+\def\tikztiming@oset[#1]{%
+  \let\tikz@options\pgfutil@empty
+  \tikzset{#1}%
+  \tikz@options
+}
+\def\tikztiming@emptycell{%
+  \@gobble{tikztiming@emptycell}%
+}
+\long\def\tikztimingtable@row#1\\{%
+  \tikztimingtable@row@#1&\tikztiming@emptycell&\\
+}
+\long\def\tikztimingtable@row@#1&#2&#3\\{%
+  \ifx\\#3\\\else
+    \begingroup
+      \def\@tempa{\tikztiming@emptycell&}%
+      \def\@tempb{#3}%
+      \ifx\@tempa\@tempb\else
+        \PackageWarning{tikz-timing}{%
+          To many columns in tikztimingtable row! Only two are allowed%
+        }{}{}{}%
+      \fi
+    \endgroup
+  \fi
+  \ifx\tikztiming@emptycell#2%
+    \def\tikztiming@next{\tikztimingtable@row@@{#1}{}}%
+  \else
+    \def\tikztiming@next{\tikztimingtable@row@@{#1}{#2}}%
+  \fi
+  \tikztiming@next
+}%
+\long\def\tikztimingtable@row@@#1#2{%
+  \addtocounter{tikztiming@nrows}{1}%
+  \coordinate (@last row) at ($ (@last row) - (0,\tikztiming@rowdist) $);
+  \node [anchor=base east,timing/name,alias=last label] (label\the\c@tikztiming@nrows)
+    at ($ (@last row) - (\tikztiming@coldist,0) $) {\ignorespaces #1\unskip\strut};
+  \path let \p1 = (timing@table@bottom left), \p2 = (last label.south west) in
+    coordinate (timing@table@bottom left) at ({min(\x1,\x2)},\y2);
+  %
+  \@ifnextchar{[}%
+    {\tikztiming@tabletiming}%
+    {\tikztiming@tabletiming[]}%
+  #2\relax
+  \path let \p1 = (timing@table@bottom right), \p2 = (timing/end base) in
+    coordinate (timing@table@bottom right) at ({max(\x1,\x2)},\y2);
+  %
+  \pgfmathparse{max(\tikztiming@maxwidth,\tikztimingwidth)}%
+  \let\tikztiming@maxwidth\pgfmathresult
+  \tikztimingtable@checkrow
+}
+
+\def\tikztiming@tabletiming[#1]#2\relax{%
+  \let\tikztiming@lastchar\empty
+  \let\tikztiming@settings\empty
+  \ifx\relax#1\relax\else
+    \tikztiming@testoptarg#1\relax\relax
+  \fi
+  \ifx\tikztiming@lastchar\empty
+    \def\tikztiming@lastchar{@}%
+  \fi
+  \edef\@tempa{\noexpand\timing
+    [name=row\the\c@tikztiming@nrows,alias=last row,%
+     \expandafter\unexpanded\expandafter{\tikztiming@settings}] at (@last row)}%
+  \expandafter\@tempa\expandafter{\expandafter[\tikztiming@lastchar]#2};
+}
+
+\newcommand*\tikztiming@fulltablegrid[1][]{%
+  \begin{pgfonlayer}{background}
+    \scope[xstep={\timingwidth/2.},ystep={\timingheight/2.},
+      shift={(all rows.south west)},timing/table/grid,#1]
+      \draw (0,0) grid ($ (all rows.north east) - (all rows.south west) $);
+   \endscope
+  \end{pgfonlayer}
+}
+\def\tikztiming@tablegrid{%
+  \@ifnextchar{*}%
+    {\tikztiming@tablegrid@{row\row.high end}}%
+    {\tikztiming@tablegrid@{all rows.north east}}%
+}
+\def\tikztiming@tablegrid@#1{%
+  \@ifnextchar{[}%]
+    {\tikztiming@tablegrid@@{#1}}%
+    {\tikztiming@tablegrid@@{#1}[]}%
+}
+\def\tikztiming@tablegrid@@#1[#2]{%
+  \begin{pgfonlayer}{background}
+    \scope[xstep={\timingwidth/2.},ystep={\timingheight/2.},timing/table/grid,#2]
+      \foreach \row in {1,...,\nrows} {%
+        \draw {[shift={(row\row.low start)}]
+          let \p1 = (#1) in (0,0) grid (\x1,1)};
+      }%
+    \endscope
+  \end{pgfonlayer}
+}
+\def\tikztiming@tableheader{%
+  \@ifnextchar[%]
+    {\tikztiming@tableheader@}%
+    {\tikztiming@tableheader@@{}[]}%
+}
+\def\tikztiming@tableheader@[#1]{%
+  \@ifnextchar[%]
+    {\tikztiming@tableheader@@{#1}}%
+    {\tikztiming@tableheader@@{#1}[]}%
+}
+\def\tikztiming@tableheader@@#1[#2]#3{%
+  \@ifnextchar[%]
+    {\tikztiming@tableheader@@@{#1}{#2}{#3}}%
+    {\tikztiming@tableheader@@@{#1}{#2}{#3}[]}%
+}
+\def\tikztiming@tableheader@@@#1#2#3[#4]#5{%
+  \path
+    let
+        \p1 = (label@header),
+        \p2 = (all labels.east),
+        \p3 = (all labels.west)
+     in
+        (\x2,\y1) -- node [pos=0,anchor=base east,timing/table/header,timing/table/label header,#1,#2]
+          (label header)   {\ignorespaces #3\unskip\strut} (\x3,\y1)
+     ;
+  \path
+    let
+        \p4 = (diagram@header),
+        \p5 = (all rows.west),
+        \p6 = (all rows.east)
+     in
+        (\x5,\y4) -- node [pos=0,anchor=base west,timing/table/header,timing/table/row header,#1,#4]
+          (row header) {\ignorespaces #5\unskip\strut} (\x6,\y4)
+     ;
+  \tikztiming@tableheadtrue
+}
+\newif\iftikztiming@tablehead
+\newcommand*\tikztiming@tablerules[1][]{%
+  \begin{scope}[#1]
+    \coordinate (NW) at (current bounding box.north west);
+    \coordinate (SE) at (current bounding box.south east);
+    %
+    \draw [timing/table/rules]
+    let
+      \p1 = (NW),
+      \p2 = (SE),
+      \p3 = (@last row),
+      \p4 = (0,\rowdist)
+    in
+      ($ (\x1-\tabcolsep,\y3) - (0,.5*\y4) $) --
+      ($ (\x2+\tabcolsep,\y3) - (0,.5*\y4) $)
+     \iftikztiming@tablehead
+      (\x1-\tabcolsep,2.5*\y4) -- (\x2+\tabcolsep,2.5*\y4)
+     \fi
+    ;
+    \draw
+     \iftikztiming@tablehead [timing/table/midrules] \else [timing/table/rules] \fi
+    let
+      \p1 = (NW),
+      \p2 = (SE)
+    in
+      (\x1-\tabcolsep,\rowdist) -- (\x2+\tabcolsep,\rowdist)
+    ;
+  \end{scope}
+}
+\newcommand*\tikztiming@horlines[2][]{%
+  \begingroup
+    \def\list{#2}%
+    \ifx\list\empty
+      \def\list{1,2,...,\nrows}%
+    \fi
+    \foreach \row in \list {%
+      \draw [timing/table/lines,#1] let
+        \p1 = (all rows.south east),
+        \p2 = (0,\rowdist)
+      in
+        ($ (0,\y2) -  (0,\row * \y2) $) -- +(\x1,0);
+    }%
+  \endgroup
+}
+\newcommand*\tikztiming@vertlines[2][]{%
+  \begingroup
+    \def\list{#2}%
+    \ifx\list\empty
+      \def\list{0,1,...,\twidth}%
+    \fi
+    \draw [timing/table/lines,#1] let
+        \p1 = ($ (all rows.south east) - (0,2) $)
+      in
+        \foreach \clk in \list {
+          (\clk,+1.5) -- +(0,\y1)
+        }
+    ;
+  \endgroup
+}
+\pgfdeclareshape{tikztiming@shape}{%
+  \savedanchor\northeast{\tikztiming@northeast}%
+  \savedanchor\startpoint{\tikztiming@startpoint}%
+  \savedanchor\endpoint{\tikztiming@endpoint}%
+  \anchor{center}{\pgfpointorigin}%
+  \anchor{start}{\startpoint}%
+  \anchor{end}{\endpoint}%
+  %
+  \anchor{origin}{\northeast \pgf@x=-\pgf@x \pgf@y=-\pgf@y }%
+  \anchor{east}{\northeast \pgf@y=0pt }%
+  \anchor{west}{\northeast \pgf@y=0pt \pgf@x=-\pgf@x }%
+  \anchor{north}{\northeast \pgf@x=0pt }%
+  \anchor{north west}{\northeast \pgf@x=-\pgf@x }%
+  \anchor{north east}{\northeast}
+  \anchor{high mid}{\northeast \pgf@x=0pt }%
+  \anchor{high start}{\northeast \pgf@x=-\pgf@x }%
+  \anchor{high end}{\northeast}
+  \anchor{south}{\northeast \pgf@x=0pt \pgf@y=-\pgf@y }%
+  \anchor{south west}{\northeast \pgf@x=-\pgf@x \pgf@y=-\pgf@y }%
+  \anchor{south east}{\northeast \pgf@y=-\pgf@y }%
+  \anchor{low mid}{\northeast \pgf@x=0pt \pgf@y=-\pgf@y }%
+  \anchor{low start}{\northeast \pgf@x=-\pgf@x \pgf@y=-\pgf@y }%
+  \anchor{low end}{\northeast \pgf@y=-\pgf@y }%
+  \anchor{mid}{\pgfpointorigin}%
+  \anchor{mid east}{\northeast \pgf@y=0pt }%
+  \anchor{mid west}{\northeast \pgf@y=0pt \pgf@x=-\pgf@x }%
+  \anchor{mid end}{\northeast \pgf@y=0pt }%
+  \anchor{mid start}{\northeast \pgf@y=0pt \pgf@x=-\pgf@x }%
+  \anchor{base}{\northeast \pgf@x=0pt \pgf@y=-\pgf@y }%
+  \anchor{base west}{\northeast \pgf@x=-\pgf@x \pgf@y=-\pgf@y }%
+  \anchor{base east}{\northeast \pgf@y=-\pgf@y }%
+  \anchorborder{%
+    \@tempdima=\pgf@x
+    \@tempdimb=\pgf@y
+    \pgfpointborderrectangle{\pgfpoint{\@tempdima}{\@tempdimb}}{\northeast}%
+  }%
+}
+\gdef\tikztiming@oldnodecenter@{}%
+\tikzset{timing/old@node@center/.code={\xdef\tikztiming@oldnodecenter@{%
+  ++($ (0,0) - #1 $)
+  [timing/no@old@node@center]}}%
+}%
+\tikzset{timing/no@old@node@center/.code={\gdef\tikztiming@oldnodecenter@{}}}%
+
+\def\tikztiming@oldnodecenter#1{%
+  [timing/old@node@center={#1}]
+  ++#1
+}
+
+\def\tikztiming@iflower#1{%
+  \begingroup
+  \edef\@tempa{`#1}%
+  \ifnum\@tempa=\lccode\@tempa
+    \endgroup
+    \expandafter
+    \@firstoftwo
+  \else
+    \endgroup
+    \expandafter
+    \@secondoftwo
+  \fi
+}
+\def\tikztiming@internaldefs{%
+  \let\draw\relax
+  \let\path\relax
+  \let\p\relax
+  \let\x\relax
+  \let\y\relax
+  \let\n\relax
+  \let\tikztiming@oldnodecenter\relax
+  \let\tikztiming@oldnodecenter@\relax
+  \def\width{####1*\noexpand\timingwidth}%
+  \def\fwidth{\noexpand\timingwidth}%
+  \def\height{\noexpand\timingheight}%
+  \def\slope{\noexpand\timingslope}%
+  \def\zslope{\noexpand\timingzslope}%
+  \def\dslope{\noexpand\timingdslope}%
+  \def\gslope{0}%
+  \def\style{timing/####3}%
+  \def\bgstyle{draw=none,timing/####3/background}%
+  \def\nstyle{timing/####4}%
+  \def\newdraw{\tikztiming@newdraw}%
+  \def\newdrawns{\tikztiming@newdraw@nosave}%
+  \def\code##1{ [/utils/exec={\unexpanded{##1}}] }%
+}
+
+\def\tikztimingsetslope#1{%
+  \pgfmathparse{min(1.0,{max(0.0,#1)})}%
+  \let\tikztiming@slope\pgfmathresult
+  \edef\timingslope{\tikztiming@slope*\noexpand\timingwidth}%
+}
+\def\tikztimingsetdslope#1{%
+  \pgfmathparse{min(1.0,{max(0.0,#1)})}%
+  \let\tikztiming@dslope\pgfmathresult
+  \edef\timingdslope{\tikztiming@dslope*\noexpand\timingwidth}%
+}
+\def\tikztimingsetzslope#1{%
+  \pgfmathparse{min(1.0,{max(0.0,#1)})}%
+  \let\tikztiming@zslope\pgfmathresult
+  \edef\timingzslope{\tikztiming@zslope*\noexpand\timingwidth}%
+}
+\tikztimingsetslope{0.10}%
+\tikztimingsetdslope{0.20}%
+\tikztimingsetzslope{0.05}%
+\def\tikztiminguse#1#2{%
+  \@nameuse{\tikztiming@prefix#1}{#2}{##2}{##3}{##4}%
+}
+\def\tikztimingdef#1{%
+  \tikztimingdef@#1\empty\empty\relax
+}
+\def\tikztimingdef@#1#2#3\relax#4{%
+  \ifx\empty#2\empty
+    \tikztiming@nameedef{}{#1}{}{#4}%
+  \else
+    \tikztiming@nameedef{#1}{#2}{#3}{#4}%
+  \fi
+}
+\def\tikztimingcpy#1#2{%
+  \begingroup
+  \edef\tikztimingcpy@a{#1}%
+  \edef\tikztimingcpy@b{#2}%
+  \ifx\tikztimingcpy@a\tikztimingcpy@b
+    \endgroup
+    %\message{^^J Copy macro '#2' to '#1' skipped.^^J}%
+  \else
+    \endgroup
+    \@ifundefined{\tikztiming@pfxtr#2\empty\empty\empty}%
+      {\ifnum\tikztiming@debug>0\relax
+        \message{^^J Copy macro '#2' to '#1' failed.^^J}\fi}%
+      {\ifnum\tikztiming@debug>0\relax
+        \message{^^J Copy macro '#2' to '#1'.^^J}\fi
+        \expandafter\let
+        \csname\tikztiming@pfxtr#1\empty\empty\empty\expandafter\endcsname
+        \csname\tikztiming@pfxtr#2\empty\empty\empty\endcsname
+      }%
+  \fi
+}
+\def\tikztiminglet#1#2{%
+  \tikztiming@namelet{#1}{#2}%
+}
+\def\tikztiming@chars#1{}
+\def\tikztiming@ifcharexists#1{%
+  \def\tikztiming@ifcharexists@##1,#1,##2\relax{%
+    \ifx\relax##2\relax%
+      \expandafter\@firstoftwo
+    \else
+      \expandafter\@secondoftwo
+    \fi
+  }%
+  \expandafter\tikztiming@ifcharexists@
+  \expandafter,\tikztiming@chars,#1,\relax%
+}
+\def\tikztiming@addchar#1{%
+  \tikztiming@ifcharexists{#1}{%
+    \edef\tikztiming@chars{\tikztiming@chars,#1}%
+  }{}%
+}
+\def\tikztimingchar#1{%
+  \uppercase{%
+  \tikztiming@addchar{#1}%
+  \tikztimingchar@{#1}}%
+}
+\@namedef{\tikztiming@prefix @@}#1#2#3#4{ coordinate (timing/start)}%
+\def\tikztimingchar@#1#2#3{%
+  \tikztiming@nameedef{@}{#1}{}{#2 coordinate (timing/start) #3}%
+  \tikztimingdef{{#1}{#1}}{#3}%
+}
+\def\tikztimingecopy#1#2{%
+  \@namedef{tikztiming@alias@#1}{#2}%
+  \tikztiming@addchar{#1}%
+  \expandafter\let
+  \csname tikztiming@triple@#1\expandafter\endcsname
+  \csname tikztiming@triple@#2\endcsname
+  \expandafter\let
+  \csname tikztiming@nocombine@#1\expandafter\endcsname
+  \csname tikztiming@nocombine@#2\endcsname
+}
+\def\tikztiming@setref#1#2{%
+  coordinate (#1) coordinate (#1) at ([shift={(#2)}]#1)
+}
+\def\tikztiming@newdraw{%
+  node [timing/save] (timing@save) {};%
+  \draw [timing/restore] (timing@save) ++(0,0)
+}
+
+\def\tikztiming@newdraw@nosave{%
+  node [timing/coord] (timing@save) {};%
+  \draw [timing/nooptions] (timing@save) ++(0,0)
+}
+\def\tikztiming@baseline{%
+  node [timing/save] (timing@save) {};%
+  \draw [timing/restore] let \p1 = (timing@save) in (\x1,0) ++(0,0)
+}
+\def\tikztiming@chars{H,L,Z,X,M,D,U,T,C}%
+\tikztiming@defcode{S}{%
+  \pgfmathparse{\tikztimingwidth + \tikztiming@num}%
+  \global\let\tikztimingwidth\pgfmathresult
+  \tikztiming@output@Eaddcode{%
+    coordinate (timing@ref)  at ($ (timing@ref)  + (\tikztiming@num,0) $)
+    coordinate (timing@refa) at ($ (timing@refa) + (\tikztiming@num,0) $)
+    coordinate (timing@refb) at ($ (timing@refb) + (\tikztiming@num,0) $)
+    ++(\tikztiming@num,0)
+  }%
+  \tikztiming@parser
+}
+
+\tikztiming@defcode{s}{%
+  \pgfmathparse{\tikztimingwidth + \tikztiming@num/2}%
+  \global\let\tikztimingwidth\pgfmathresult
+  \tikztiming@output@Eaddcode{%
+    coordinate (timing@ref)  at ($ (timing@ref)  + (\tikztiming@num/2,0) $)
+    coordinate (timing@refa) at ($ (timing@refa) + (\tikztiming@num/2,0) $)
+    coordinate (timing@refb) at ($ (timing@refb) + (\tikztiming@num/2,0) $)
+    ++(\tikztiming@num/2,0)
+  }%
+  \tikztiming@parser
+}
+\tikztiming@defcode{G}{%
+  \tikztiming@output@addcode{%
+    \tikztiming@glitch
+  }%
+  \tikztiming@parser
+}
+
+\tikztiming@defcode{g}{%
+  \tikztiming@output@addcode{%
+    \tikztiming@glitch
+  }%
+  \tikztiming@parser
+}
+
+\def\tikztiming@glitch{%
+  {[timing/g] let \p1 = +(0,0) in (\x1,0) -- (\x1,\timingheight)
+   coordinate (timing@dstart) at (\x1,\timingheight/2) (\x1,\y1)
+  }%
+}
+\tikztimingchar{H}{++(0,\height)}{-- ++(#1,0)}
+
+\tikztimingdef{HH}{
+  -- ++(#1,0)
+}
+
+\tikztimingdef{LH}{
+  --  +(\slope, \height)
+  -- ++(#1, \height)
+}
+
+\tikztimingdef{ZH}{
+    \newdraw
+  -- ++(\zslope,+\height/2.)
+  -- ++($ (#1,0) - (\zslope,0) $)
+}
+
+\tikztimingdef{DH}{
+  \tikztiming@oldnodecenter@%
+  \newdraw [\style]
+  --  +(\dslope/2.,\height/2.)
+  --   ($ (timing@ref) + (#1,\height/2) $)
+}
+
+\tikztimingdef{DL}{
+  \tikztiming@oldnodecenter@
+  \newdraw [\style]
+  --  +(\dslope/2.,-\height/2.)
+  --   ($ (timing@ref) + (#1,-\height/2) $)
+}
+
+
+\tikztimingchar{L}{++(0,0)}{-- ++(#1,0)}
+
+\tikztimingchar{Z}{++(0,\height/2.)}{%
+  \newdraw [\style]
+  -- ++(#1,0)
+}
+
+\tikztimingchar{D}{++(0,\height/2.)}{
+  node [timing/save] (timing@save) {}; \path [\bgstyle] (timing@save) ++(0,0)
+  -- +(#1,0)
+  -- +($ (#1,0) + 0.5*(\dslope,\height) $)
+  -- +(#1,\height)
+  -- +(0,\height)
+  -- cycle;
+  \draw [timing/restore,\style] (timing@save) ++(0,0)
+  node [timing/save] (timing@dstart) at +(-\dslope/2.,\height/2.0) {}
+  --  +(#1,0) ++(0,+\height)
+  -- ++(#1,0) ++(0,-\height)
+}
+
+\def\tikztiming@triple@D{}%
+\def\tikztiming@triple@D@edge@{}%
+\def\tikztiming@nocombine@D@edge@{}%
+\def\tikztiming@alias@D@edge@{D}%
+\def\tikztiming@trans@D@fill#1#2{%
+  node [timing/save] (timing@save) {}; \path [\bgstyle] (timing@save) ++(0,0)
+  -- +(0.5*\dslope,-0.5*\height)
+  -- ++($ (#1,-0.5*\height) - (#2,0) $)
+  -- +(0.5*\dslope,0.5*\height)
+  -- +(0,\height)
+  -- ++($ (#2,\height) - (#1,0) + (0.5*\dslope,0) $)
+  -- cycle;
+  \draw [timing/restore,\style] (timing@save) ++(0,0)
+  node [timing/save] (timing@dstart) {}
+}
+\tikztimingdef{LL}{
+  -- ++(#1,0)
+}
+
+\tikztimingdef{HL}{
+  -- ++(\slope,-\height)
+  \tikztiminguse{HH}{#1-\slope}
+}
+
+\tikztimingdef{LZ}{
+  \newdraw [\style]
+  -- ++(\zslope,+\height/2.)
+  -- ++($ (#1,0) - (\zslope,0) $)
+}
+\tikztimingdef{HZ}{%
+  \newdraw [\style]
+  -- ++(\zslope,-\height/2.)
+  -- ++($ (#1,0) - (\zslope,0) $)
+}
+\tikztimingdef{ZL}{%
+  \newdraw
+  -- ++(\zslope,-\height/2.)
+  -- ++($ (#1,0) - (\zslope,0) $)
+}
+
+\tikztimingdef{DZ}{
+  \tikztiming@oldnodecenter@
+  \newdraw [\style]
+  -- ($ (timing@ref) + (#1,0) $)
+}
+
+\def\tikztiming@chard#1{%
+  \newdraw [\style,preaction={\bgstyle}]
+  coordinate (timing@dstart)
+  -- +(\dslope/2,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+  -- +(\dslope/2,-\height/2)
+  -- +(0,-\height)
+  --  ($ (timing@dstart) + (\dslope/2,-\height/2) $)
+  --  (timing@dstart)
+      ($ (timing@ref) + (#1,0) $)
+  coordinate (timing@ref)
+    ++(\dslope/2,0)
+  coordinate (timing@dend)
+  \tikztiming@oldnodecenter{%
+    (-\dslope/2,-\height/2)
+  }%
+  \newdraw
+}
+
+\def\tikztiming@chard@#1{%
+  \newdraw [\bgstyle]
+  -- +(\dslope/2,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+  -- +(0,-\height)%
+  --  ($ (timing@save) + (\dslope/2,-\height/2) $)
+  --  (timing@save)
+  \newdraw [\style]
+     coordinate (timing@dstart)
+  -- +(\dslope/2,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+     +(0,-\height)%
+  --  ($ (timing@save) + (\dslope/2,-\height/2) $)
+  --  (timing@save)
+      ($ (timing@ref) + (#1,0) $)
+     coordinate (timing@ref)
+     \tikztiming@setref{timing@dend}{\dslope/2,0}
+  \tikztiming@oldnodecenter{%
+    (0,-\height/2)
+  }%
+  \newdraw
+}
+
+\def\tikztiming@@chard#1{%
+    ++(0,\height/2)
+  \newdraw [\bgstyle]
+  -- +(0,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+  -- +(\dslope/2,-\height/2)
+  -- +(0,-\height)
+  --  ($ (timing@save) + (0,-\height/2) $)
+  --  (timing@save)
+  \newdraw [\style]
+     +(0,0)
+     coordinate (timing/start)
+     +(-\dslope/2,0)
+     coordinate (timing@dstart)
+     +(0,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+  -- +(\dslope/2,-\height/2)
+  -- +(0,-\height)
+  --  ($ (timing@save) + (0,-\height/2) $)
+      ($ (timing@ref) + (#1,0) $)
+     coordinate (timing@ref)
+    ++(\dslope/2,0)
+     coordinate (timing@dend)
+  \tikztiming@oldnodecenter{%
+    (-\dslope/2,-\height/2)
+  }%
+  \newdraw
+}
+
+\def\tikztiming@@chard@#1{%
+    ++(0,\height/2)
+  \newdraw [\bgstyle]
+  -- +(0,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+  -- +(0,-\height)
+  --  ($ (timing@save) + (0,-\height/2) $)
+  --  (timing@save)
+  \newdraw [\style]
+     +(0,0)
+     coordinate (timing/start)
+     coordinate (timing@ref)
+     \tikztiming@setref{timing@dstart}{-\dslope/2,0}
+     +(0,\height/2)
+  -- +(#1,\height/2)
+     +(#1,-\height/2)
+  --  ($ (timing@save) + (0,-\height/2) $)
+    ++(#1,\height/2)
+     coordinate (timing@ref)
+     \tikztiming@setref{timing@dend}{\dslope/2,0}
+  \tikztiming@oldnodecenter{%
+    (0,-\height/2)
+  }%
+  \newdraw
+}
+
+\def\tikztiming@dchardu#1{%
+  \tikztiming@oldnodecenter@
+  \newdraw [\bgstyle]
+  -- +(0,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+  -- +(\dslope/2,-\height/2)
+  -- +(0,-\height)
+  --  ($ (timing@save) + (0,-\height/2) $)
+  --  (timing@save)
+  \newdraw [\style]
+     +(0,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+  -- +(\dslope/2,-\height/2)
+  -- +(0,-\height)
+  --  ($ (timing@save) + (0,-\height/2) $)
+      ($ (timing@ref) + (#1,0) $)
+     coordinate (timing@ref)
+    ++(\dslope/2,0)
+     coordinate (timing@dend)
+  \tikztiming@oldnodecenter{%
+    (-\dslope/2,-\height/2)
+  }%
+  \newdraw
+}
+
+\def\tikztiming@uchardd#1{%
+  \tikztiming@oldnodecenter@
+  \newdraw [\bgstyle]
+  -- +(\dslope/2,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+  -- +(0,-\height)
+  --  ($ (timing@save) + (\dslope/2,-\height/2) $)
+  --  (timing@save)
+  \newdraw [\style]
+     coordinate (timing@dstart)
+  -- +(\dslope/2,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+     +(0,-\height)
+  --  ($ (timing@save) + (\dslope/2,-\height/2) $)
+  --  (timing@save)
+      ($ (timing@ref) + (#1,0) $)
+     coordinate (timing@ref)
+     coordinate [shift={(\dslope/2,0)}](timing@dend)
+  \tikztiming@oldnodecenter{%
+      ($ (0,0) - (0,\height/2) $)
+  }%
+  \newdraw
+}
+
+\tikztimingdef{DD}{%
+  \tikztiming@dchardu{#1}%
+}
+
+\tikztimingdef{UU}{%
+  \tikztiming@dchardu{#1}%
+}
+
+\def\tikztiming@dchard@#1{%
+  \tikztiming@oldnodecenter@
+  \newdraw [\bgstyle]
+  -- +(0,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+  -- +(0,-\height)
+  --  ($ (timing@save) + (0,-\height/2) $)
+  --  (timing@save)
+  \newdraw [\style]
+     +(0,\height/2)
+  --  ($ (timing@ref) + (#1,\height/2) $)
+     +(0,-\height)
+  --  ($ (timing@save) + (0,-\height/2) $)
+      ($ (timing@ref) + (#1,0) $)
+    coordinate (timing@ref)
+    \tikztiming@setref{timing@dend}{\dslope/2,0}
+  \tikztiming@oldnodecenter{%
+    (0,-\height/2)
+  }%
+  \newdraw
+}
+
+\tikztimingdef{DD@}{
+  \tikztiming@dchard@{#1}%
+}
+
+\tikztimingcpy{DDD}{DD@}
+\tikztimingcpy{UUU}{DDD}
+
+\tikztimingdef{{D@edge@}{D@edge@}}{%
+  \tikztiming@oldnodecenter@
+  \tikztiming@chard{#1}%
+}%
+
+\tikztimingdef{@{D@edge@}}{%
+  \tikztiming@@chard@{#1}%
+}%
+
+\tikztimingdef{@{D@edge@}@}{%
+  \tikztiming@@chard@{#1}%
+}%
+
+\tikztimingdef{@{D@edge@}D}{%
+  \tikztiming@@chard{#1}%
+}
+
+\tikztimingdef{D{D@edge@}}{%
+  \tikztiming@dchardu{#1}%
+}
+
+\tikztimingdef{U{U@edge@}}{%
+  \tikztiming@dchardu{#1}%
+}
+
+\tikztimingdef{U{D@edge@}}{%
+  \tikztiming@oldnodecenter@
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{U{D@edge@}@}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard@{#1}%
+}
+
+\tikztimingdef{D{U@edge@}}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{D{U@edge@}@}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard@{#1}%
+}
+
+\tikztimingdef{D{D@edge@}@}{%
+  \tikztiming@dchard@{#1}%
+}%
+
+\tikztimingdef{U{U@edge@}@}{%
+  \tikztiming@dchard@{#1}%
+}%
+
+\tikztimingdef{{D@edge@}{D@edge@}@}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard@{#1}%
+}%
+
+\tikztimingdef{@{D@edge@}}{%
+  \tikztiming@@chard{#1}%
+}%
+
+\tikztimingdef{{D@edge@}D}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard{#1}%
+}%
+
+\tikztimingdef{{D@edge@}D@}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard@{#1}%
+}%
+
+\tikztimingdef{ZDZ}{
+  coordinate (timing@ref)
+  \tikztiming@chard{#1}
+}
+\tikztimingcpy{ZDX}{ZDZ}
+\tikztimingcpy{XDX}{ZDZ}
+\tikztimingcpy{XDZ}{ZDZ}
+
+\tikztimingdef{ZDD}{
+  coordinate (timing@ref)
+  \tikztiming@chard@{#1}
+}
+
+\tikztimingdef{ZDU}{
+  coordinate (timing@ref)
+  \tikztiming@chard{#1}
+}
+
+\tikztimingcpy{ZUD}{ZDU}
+\tikztimingcpy{ZUU}{ZDD}
+
+\tikztimingdef{ZD}{
+  coordinate (timing@ref)
+  \tikztiming@chard{#1}
+}
+
+\tikztimingdef{@DD}{%
+  \tikztiming@@chard@{#1}%
+}
+
+\tikztimingdef{ZD@}{%
+  coordinate (timing@ref)
+  \tikztiming@chard@{#1}%
+}
+
+\tikztimingdef{HD@}{%
+  \tikztiming@setref{timing@ref}{0,-\height/2}
+  -- ++(\dslope/2, -\height/2)
+  \tikztiming@chard@{#1}%
+}
+
+\tikztimingdef{TD@}{%
+  \tikztiming@setref{timing@ref}{0,-\height/2 * \value{tikztimingtrans}}
+  -- ++(\dslope/2, -\height/2 * \value{tikztimingtrans})
+  \tikztiming@chard@{#1}%
+}
+
+\tikztimingdef{TD}{%
+  \code{\setcounter{tikztimingtrans}{-\value{tikztimingtrans}}}
+  \tikztiming@setref{timing@ref}{0,\height/2 * \value{tikztimingtrans}}
+  -- ++(\dslope/2, \height/2 * \value{tikztimingtrans})
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{TDD}{%
+  \code{\setcounter{tikztimingtrans}{-\value{tikztimingtrans}}}
+  \tikztiming@setref{timing@ref}{0,\height/2 * \value{tikztimingtrans}}
+  -- ++(\dslope/2, \height/2 * \value{tikztimingtrans})
+  \tikztiming@chard@{#1}%
+}
+
+\tikztimingdef{TUD}{%
+  \code{\setcounter{tikztimingtrans}{-\value{tikztimingtrans}}}
+  \tikztiming@setref{timing@ref}{0,\height/2 * \value{tikztimingtrans}}
+  -- ++(\dslope/2, \height/2 * \value{tikztimingtrans})
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingcpy{TDU}{TUD}
+\tikztimingcpy{TUU}{TDD}
+
+\tikztimingdef{LD@}{%
+  \tikztiming@setref{timing@ref}{0,\height/2}
+  -- ++(\dslope/2, \height/2)
+  \tikztiming@chard@{#1}%
+}
+
+\tikztimingdef{@D}{%
+  \tikztiming@@chard@{#1}%
+}
+
+\tikztimingdef{@D@}{%
+  \tikztiming@@chard@{#1}%
+}
+
+\tikztimingcpy{H{D@edge@}@}{HD@}
+\tikztimingcpy{L{D@edge@}@}{LD@}
+\tikztimingcpy{Z{D@edge@}@}{ZD@}
+\tikztimingcpy{T{D@edge@}@}{TD@}
+
+\tikztimingdef{@DZ}{%
+  \tikztiming@@chard{#1}%
+}
+\tikztimingdef{@DH}{%
+  \tikztiming@@chard{#1}%
+}
+\tikztimingdef{@DL}{%
+  \tikztiming@@chard{#1}%
+}
+\tikztimingdef{@DT}{%
+  \tikztiming@@chard{#1}%
+}
+
+\tikztimingdef{LD}{
+  \tikztiming@setref{timing@ref}{0,\height/2}
+  -- ++(\dslope/2, \height/2)
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{LDD}{
+  \tikztiming@setref{timing@ref}{0,\height/2}
+  -- ++(\dslope/2, \height/2)
+  \tikztiming@chard@{#1}
+}
+
+\tikztimingdef{LDU}{
+  \tikztiming@setref{timing@ref}{0,\height/2}
+  -- ++(\dslope/2, \height/2)
+  \tikztiming@chard{#1}
+}
+
+\tikztimingcpy{LUD}{LDU}
+\tikztimingcpy{LUU}{LDD}
+
+\tikztimingdef{HD}{
+  \tikztiming@setref{timing@ref}{0,-\height/2}
+  -- ++(\dslope/2, -\height/2)
+  \tikztiming@chard{#1}
+}
+
+\tikztimingdef{HDD}{
+  \tikztiming@setref{timing@ref}{0,-\height/2}
+  -- ++(\dslope/2, -\height/2)
+  \tikztiming@chard@{#1}
+}
+
+\tikztimingdef{HDU}{
+  \tikztiming@setref{timing@ref}{0,-\height/2}
+  -- ++(\dslope/2, -\height/2)
+  \tikztiming@chard{#1}
+}
+\tikztimingcpy{HUD}{HDU}
+\tikztimingcpy{HUU}{HDD}
+
+\tikztimingecopy{M}{Z}
+\tikztimingchar{M}{++(0,\height/2.)}{
+  \newdraw [\style]
+  -- ++(#1,0)
+  \newdraw [\style/base]
+}
+
+\tikztimingdef{ZM}{
+  \newdraw [\style]
+  -- ++(#1,0)
+  \newdraw [\style/base]
+}
+
+\tikztimingdef{LM}{
+  \newdraw [\style/base]
+  -- ++($ (1/8,0) + (0,\height/2) $)
+  \newdraw [\style]
+  -- ++($ (-1/8,0) + (#1,0) $)
+  \newdraw [\style/base]
+}
+
+\tikztimingdef{HM}{
+  \newdraw [\style/base]
+  -- ++($ (1/8,0) + (0,-1*\height/2) $)
+  \newdraw [\style]
+  -- ++($ (-1/8,0) + (#1,0) $)
+  \newdraw [\style/base]
+}
+
+\tikztimingdef{DM}{
+  \tikztiming@oldnodecenter@%
+  \newdraw [\style]
+  -- ($ (timing@ref) + (#1,0) $)
+  \newdraw [\style/base]
+}
+
+\newcounter{tikztimingtrans}
+\newcounter{tikztimingtranspos}
+
+\tikztimingchar{T}{++(0,0)}{
+  -- ++(#1,0)
+}
+\def\tikztiming@nocombine@T{}%
+
+\tikztimingdef{HT}{%
+  {[\style]
+  \code{\setcounter{tikztimingtrans}{-1}}
+  -- ++(\slope,\value{tikztimingtrans}*\height) -- ++($ (#1,0) - (\slope,0) $)
+  }
+}
+
+\tikztimingdef{LT}{%
+  {[\style]
+  \code{\setcounter{tikztimingtrans}{+1}}
+  -- ++(\slope,\value{tikztimingtrans}*\height) -- ++($ (#1,0) - (\slope,0) $)
+  }
+}
+
+\tikztimingdef{TL}{%
+  \code{\setcounter{tikztimingtranspos}{\value{tikztimingtrans}}%
+  \addtocounter{tikztimingtranspos}{+1}}
+  -- ++(\slope, -0.5*\value{tikztimingtranspos}*\height) -- ++($ (#1,0) - (\slope,0) $)
+}
+
+\tikztimingdef{TH}{%
+  \code{\setcounter{tikztimingtranspos}{\value{tikztimingtrans}}%
+  \addtocounter{tikztimingtranspos}{-1}}
+  -- ++(\slope, -0.5*\value{tikztimingtranspos}*\height) -- ++($ (#1,0) - (\slope,0) $)
+}
+
+\tikztimingdef{TZ}{%
+  \newdraw [\style]
+  \code{\setcounter{tikztimingtrans}{-\value{tikztimingtrans}}}
+  -- ++(\zslope,\value{tikztimingtrans}*\height/2.)
+  -- ++($ (#1,0) - (\zslope,0) $)
+}
+
+\tikztimingdef{ZT}{%
+  \newdraw {[\style]
+  \code{\setcounter{tikztimingtrans}{-\value{tikztimingtrans}}}
+  -- ++(\zslope,\value{tikztimingtrans}*\height/2.)
+  -- ++($ (#1,0) - (\zslope,0) $)
+  }
+}
+
+\tikztimingdef{TT}{%
+  {[\style]
+  \code{\setcounter{tikztimingtrans}{-\value{tikztimingtrans}}}
+  -- ++(\slope,\value{tikztimingtrans}*\height)
+  -- ++($ (#1,0) - (\slope,0) $)
+  }
+}
+
+\tikztimingdef{DT}{
+  \code{\setcounter{tikztimingtrans}{-1}}
+  \tikztiming@oldnodecenter@%
+  \newdraw {[\style]
+  --  +(\dslope/2.,-\height/2)
+  --   ($ (timing@ref) + (#1,-\height/2) $)
+  }
+}
+
+\tikztimingdef{TM}{%
+  \newdraw [\style/base]
+  \code{\setcounter{tikztimingtrans}{-\value{tikztimingtrans}}}
+  -- ++($ (1/8,0) + (0,\value{tikztimingtrans}*\height/2) $)
+  \newdraw [\style]
+  -- ++($ (-1/8,0) + (#1,0) $)
+  \newdraw [\style/base]
+}
+\tikztimingecopy{C}{T}
+\tikztimingecopy{U}{D}
+
+\def\tikztiming@triple@U@edge@{}%
+\def\tikztiming@nocombine@U@edge@{}%
+\def\tikztiming@alias@U@edge@{D@edge@}%
+
+\tikztimingcpy{UU@}{DD@}%
+
+\tikztimingdef{UDU}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard{#1}%
+}
+\tikztimingcpy{DUD}{UDU}%
+
+\tikztimingdef{UDD}{%
+  \tikztiming@uchardd{#1}%
+}
+
+\tikztimingcpy{{D@edge@}DD}{UDD}
+\tikztimingcpy{{U@edge@}UU}{{D@edge@}DD}
+
+\tikztimingdef{H{D@edge@}}{
+  \tikztiming@setref{timing@ref}{0,-\height/2}
+  -- ++(\dslope/2, -\height/2)
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{L{D@edge@}}{
+  \tikztiming@setref{timing@ref}{0,\height/2}
+  -- ++(\dslope/2, \height/2)
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{Z{D@edge@}}{
+  coordinate (timing@ref)
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{T{D@edge@}}{
+  \code{\setcounter{tikztimingtrans}{-\value{tikztimingtrans}}}
+  \tikztiming@setref{timing@ref}{0,\height/2 * \value{tikztimingtrans}}
+  -- ++(\dslope/2, \height/2 * \value{tikztimingtrans})
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{{D@edge@}DU}{
+  \tikztiming@oldnodecenter@
+  \tikztiming@chard{#1}
+}
+\tikztimingcpy{{U@edge@}UD}{{D@edge@}DU}
+
+\tikztimingdef{DDU}{%
+  \tikztiming@dchardu{#1}
+}
+
+\tikztimingcpy{DUU}{UDD}%
+\tikztimingcpy{UUD}{DDU}%
+
+\tikztimingdef{@UU}{%
+  \tikztiming@@chard@{#1}%
+}
+
+\tikztimingdef{@UD}{%
+  \tikztiming@@chard{#1}%
+}
+
+\tikztimingdef{@DU}{%
+  \tikztiming@@chard{#1}%
+}
+
+\tikztimingdef{UD}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{DU}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard{#1}%
+}
+
+\tikztimingdef{UD@}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard@{#1}%
+}
+
+\tikztimingdef{DU@}{%
+  \tikztiming@oldnodecenter@%
+  \tikztiming@chard@{#1}%
+}
+
+\tikztimingecopy{X}{Z}
+\let\tikztiming@chars@default\tikztiming@chars
+\newcommand*\usetikztiminglibrary[2][]{%
+  \edef\tikztiming@library@options{#1}%
+  \@ifnextchar{[}%]
+    {\tikztiming@library{#2}}%
+    {\tikztiming@library{#2}[]}%
+}
+\def\tikztiming@library#1[#2]{%
+  \edef\tikztiming@library@date{#2}%
+  \tikztiming@library@#1,\relax
+}
+\def\tikztiming@zap@space#1 \@empty{#1}
+
+\def\tikztiming@library@#1,{%
+  \IfFileExists{tikz-timing-#1.sty}%
+    { \let\tikztiming@orig@zap@space\zap@space
+      \let\zap@space\tikztiming@zap@space
+      \RequirePackage
+        [\tikztiming@library@options]%
+        {tikz-timing-#1}%
+        [\tikztiming@library@date]%
+      \let\zap@space\tikztiming@orig@zap@space
+    }%
+    {\PackageError{tikz-timing}%
+      {No tikz-timing library `#1' found!}{}%
+    }%
+  \@ifnextchar\relax{}{\tikztiming@library@}%
+}
+\endinput
+%%
+%% End of file `tikz-timing.sty'.
+
diff --git a/enable_tag.sv b/enable_tag.sv
new file mode 100644
index 0000000..e4d022a
--- /dev/null
+++ b/enable_tag.sv
@@ -0,0 +1,51 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer        Christian Palmiero - cp3025@columbia.edu                   //
+//                                                                            //
+// Design Name:    Enable tag                                                 //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    Enable decoder                                             //
+//                 This unit reads the ENABLE field of the Tag Propagation    //
+//                 Register and sends the proper signals to the EX stage      //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+// Decodeur spécial pour la partie ENABLE du TPR, qui vient s'ajouter en parallèle du décodeur déjà présent sur le processeur
+
+import riscv_defines::*;
+
+module riscv_enable_tag
+(
+  // From IF/ID pipeline
+  input  logic [31:0] instr_rdata_i,
+
+  // From CSRs
+  input  logic [31:0] tpr_i,
+
+  // To ID
+  output logic        is_store_o,
+  output logic        enable_a_o,
+  output logic        enable_b_o
+);
+
+  always_comb
+  begin
+    enable_a_o = 1'b0;
+    enable_b_o = 1'b0;
+    is_store_o = 1'b0;
+
+    unique case (instr_rdata_i[6:0])
+
+      OPCODE_STORE,
+      OPCODE_STORE_POST
+      : begin
+        enable_a_o  = tpr_i[LOADSTORE_EN_DEST_ADDR];
+        enable_b_o  = tpr_i[LOADSTORE_EN_SOURCE];
+        is_store_o  = 1'b1;
+      end
+
+      default: ;
+    endcase
+  end
+
+endmodule
diff --git a/ex_stage.sv b/ex_stage.sv
index 06daf25..99145e6 100644
--- a/ex_stage.sv
+++ b/ex_stage.sv
@@ -16,7 +16,7 @@
 //                 Sven Stucki - svstucki@student.ethz.ch                     //
 //                 Andreas Traber - atraber@iis.ee.ethz.ch                    //
 //                                                                            //
-// Design Name:    Excecute stage                                             //
+// Design Name:    Execute stage                                              //
 // Project Name:   RI5CY                                                      //
 // Language:       SystemVerilog                                              //
 //                                                                            //
@@ -26,200 +26,344 @@
 //                                                                            //
 ////////////////////////////////////////////////////////////////////////////////
 
-import riscv_defines::*;
+`include "riscv_config.sv"
 
+import riscv_defines::*;
 
 module riscv_ex_stage
 (
-  input  logic        clk,
-  input  logic        rst_n,
-
-  // ALU signals from ID stage
-  input  logic [ALU_OP_WIDTH-1:0] alu_operator_i,
-  input  logic [31:0] alu_operand_a_i,
-  input  logic [31:0] alu_operand_b_i,
-  input  logic [31:0] alu_operand_c_i,
-  input  logic [ 4:0] bmask_a_i,
-  input  logic [ 4:0] bmask_b_i,
-  input  logic [ 1:0] imm_vec_ext_i,
-  input  logic [ 1:0] alu_vec_mode_i,
-
-  // Multiplier signals
-  input  logic [ 2:0] mult_operator_i,
-  input  logic [31:0] mult_operand_a_i,
-  input  logic [31:0] mult_operand_b_i,
-  input  logic [31:0] mult_operand_c_i,
-  input  logic        mult_en_i,
-  input  logic        mult_sel_subword_i,
-  input  logic [ 1:0] mult_signed_mode_i,
-  input  logic [ 4:0] mult_imm_i,
-
-  input  logic [31:0] mult_dot_op_a_i,
-  input  logic [31:0] mult_dot_op_b_i,
-  input  logic [31:0] mult_dot_op_c_i,
-  input  logic [ 1:0] mult_dot_signed_i,
-
-  output logic        mult_multicycle_o,
-
-  // input from ID stage
-  input  logic        branch_in_ex_i,
-  input  logic [4:0]  regfile_alu_waddr_i,
-  input  logic        regfile_alu_we_i,
-
-  // directly passed through to WB stage, not used in EX
-  input  logic        regfile_we_i,
-  input  logic [4:0]  regfile_waddr_i,
-
-  // CSR access
-  input  logic        csr_access_i,
-  input  logic [31:0] csr_rdata_i,
-
-  // Output of EX stage pipeline
-  output logic [4:0]  regfile_waddr_wb_o,
-  output logic        regfile_we_wb_o,
-
-  // Forwarding ports : to ID stage
-  output logic  [4:0] regfile_alu_waddr_fw_o,
-  output logic        regfile_alu_we_fw_o,
-  output logic [31:0] regfile_alu_wdata_fw_o,    // forward to RF and ID/EX pipe, ALU & MUL
-
-  // To IF: Jump and branch target and decision
-  output logic [31:0] jump_target_o,
-  output logic        branch_decision_o,
-
-  // Stall Control
-  input  logic        lsu_ready_ex_i, // EX part of LSU is done
-
-  output logic        ex_ready_o, // EX stage ready for new data
-  output logic        ex_valid_o, // EX stage gets new data
-  input  logic        wb_ready_i  // WB stage ready for new data
+	input  logic        clk,
+	input  logic        rst_n,
+
+	// ALU signals from ID stage
+	input  logic [ALU_OP_WIDTH-1:0] alu_operator_i,
+	input  logic [31:0] alu_operand_a_i,
+	input  logic [31:0] alu_operand_b_i,
+	input  logic [31:0] alu_operand_c_i,
+	input  logic [ 4:0] bmask_a_i,
+	input  logic [ 4:0] bmask_b_i,
+	input  logic [ 1:0] imm_vec_ext_i,
+	input  logic [ 1:0] alu_vec_mode_i,
+
+	// Multiplier signals
+	input  logic [ 2:0] mult_operator_i,
+	input  logic [31:0] mult_operand_a_i,
+	input  logic [31:0] mult_operand_b_i,
+	input  logic [31:0] mult_operand_c_i,
+	input  logic        mult_en_i,
+	input  logic        mult_sel_subword_i,
+	input  logic [ 1:0] mult_signed_mode_i,
+	input  logic [ 4:0] mult_imm_i,
+
+	input  logic [31:0] mult_dot_op_a_i,
+	input  logic [31:0] mult_dot_op_b_i,
+	input  logic [31:0] mult_dot_op_c_i,
+	input  logic [ 1:0] mult_dot_signed_i,
+
+	output logic        mult_multicycle_o,
+
+	// Input from ID stage
+	input  logic        branch_in_ex_i,
+	input  logic [4:0]  regfile_alu_waddr_i,
+	input  logic        regfile_alu_we_i,
+
+	// Directly passed through to WB stage, not used in EX
+	input  logic        regfile_we_i,
+	input  logic [4:0]  regfile_waddr_i,
+
+	// CSR access
+	input  logic        csr_access_i,
+	input  logic [31:0] csr_rdata_i,
+
+	// Output of EX stage pipeline
+	output logic [4:0]  regfile_waddr_wb_o,
+	output logic        regfile_we_wb_o,
+
+	// Forwarding ports : to ID stage
+	output logic  [4:0] regfile_alu_waddr_fw_o,
+	output logic        regfile_alu_we_fw_o,
+	output logic [31:0] regfile_alu_wdata_fw_o,    // forward to RF and ID/EX pipe, ALU & MUL
+
+	// To IF: Jump and branch target and decision
+	output logic [31:0] jump_target_o,
+	output logic        branch_decision_o,
+
+	// Stall Control
+	input  logic        lsu_ready_ex_i, // EX part of LSU is done
+
+	output logic        ex_ready_o, // EX stage ready for new data
+	output logic        ex_valid_o, // EX stage gets new data
+	input  logic        wb_ready_i  // WB stage ready for new data
+
+`ifdef DIFT // Ajout de tous les tags des registres en entrée
+	,
+	input  logic [ALU_MODE_WIDTH-1:0] alu_operator_i_mode,
+	input  logic        alu_operand_a_i_tag,
+	input  logic        alu_operand_b_i_tag,
+	input  logic        alu_operand_c_i_tag,
+	input  logic        data_we_ex_i,
+	input  logic        check_s1_i_tag,
+	input  logic        check_s2_i_tag,
+	input  logic        check_d_i_tag,
+	input  logic        register_set_i_tag,
+	input  logic        memory_set_i_tag,
+	input  logic        is_store_post_i_tag,
+`ifdef DIFT_H
+	input  logic [6:0]  regfile_alu_waddr_i_tag, // Adresse du registre de destination
+`else
+	input  logic [4:0]  regfile_alu_waddr_i_tag,
+`endif
+	input  logic        store_dest_addr_i_tag,
+	input  logic        store_source_i_tag,
+	input  logic        use_store_ops_i,
+	output logic        regfile_alu_wdata_fw_o_tag,
+	output logic        regfile_alu_we_fw_o_tag,
+`ifdef DIFT_H
+	output logic [6:0]  regfile_alu_waddr_fw_o_tag,
+`else
+	input  logic [4:0]  regfile_alu_waddr_fw_o_tag,
+`endif
+	output logic        jump_target_o_tag,
+	output logic        pc_enable_o_tag,
+	output logic        data_wdata_ex_o_tag,
+	output logic        data_we_ex_o_tag,
+	output logic        rs1_o_tag,
+	output logic        exception_o_tag
+`endif
 );
 
-
-  logic [31:0] alu_result;
-  logic [31:0] alu_csr_result;
-  logic [31:0] mult_result;
-  logic        alu_cmp_result;
-
-  logic        alu_ready;
-  logic        mult_ready;
-
-
-  // EX stage result mux (ALU, MAC unit, CSR)
-  assign alu_csr_result         = csr_access_i ? csr_rdata_i : alu_result;
-
-  assign regfile_alu_wdata_fw_o = mult_en_i ? mult_result : alu_csr_result;
-
-
-  assign regfile_alu_we_fw_o    = regfile_alu_we_i;
-  assign regfile_alu_waddr_fw_o = regfile_alu_waddr_i;
-
-
-  // branch handling
-  assign branch_decision_o = alu_cmp_result;
-  assign jump_target_o     = alu_operand_c_i;
-
-
-  ////////////////////////////
-  //     _    _    _   _    //
-  //    / \  | |  | | | |   //
-  //   / _ \ | |  | | | |   //
-  //  / ___ \| |__| |_| |   //
-  // /_/   \_\_____\___/    //
-  //                        //
-  ////////////////////////////
-
-  riscv_alu alu_i
-  (
-    .clk                 ( clk             ),
-    .rst_n               ( rst_n           ),
-
-    .operator_i          ( alu_operator_i  ),
-    .operand_a_i         ( alu_operand_a_i ),
-    .operand_b_i         ( alu_operand_b_i ),
-    .operand_c_i         ( alu_operand_c_i ),
-
-    .vector_mode_i       ( alu_vec_mode_i  ),
-    .bmask_a_i           ( bmask_a_i       ),
-    .bmask_b_i           ( bmask_b_i       ),
-    .imm_vec_ext_i       ( imm_vec_ext_i   ),
-
-    .result_o            ( alu_result      ),
-    .comparison_result_o ( alu_cmp_result  ),
-
-    .ready_o             ( alu_ready       ),
-    .ex_ready_i          ( ex_ready_o      )
-  );
-
-
-  ////////////////////////////////////////////////////////////////
-  //  __  __ _   _ _   _____ ___ ____  _     ___ _____ ____     //
-  // |  \/  | | | | | |_   _|_ _|  _ \| |   |_ _| ____|  _ \    //
-  // | |\/| | | | | |   | |  | || |_) | |    | ||  _| | |_) |   //
-  // | |  | | |_| | |___| |  | ||  __/| |___ | || |___|  _ <    //
-  // |_|  |_|\___/|_____|_| |___|_|   |_____|___|_____|_| \_\   //
-  //                                                            //
-  ////////////////////////////////////////////////////////////////
-
-  riscv_mult mult_i
-  (
-    .clk             ( clk                  ),
-    .rst_n           ( rst_n                ),
-
-    .enable_i        ( mult_en_i            ),
-    .operator_i      ( mult_operator_i      ),
-
-    .short_subword_i ( mult_sel_subword_i   ),
-    .short_signed_i  ( mult_signed_mode_i   ),
-
-    .op_a_i          ( mult_operand_a_i     ),
-    .op_b_i          ( mult_operand_b_i     ),
-    .op_c_i          ( mult_operand_c_i     ),
-    .imm_i           ( mult_imm_i           ),
-
-    .dot_op_a_i      ( mult_dot_op_a_i      ),
-    .dot_op_b_i      ( mult_dot_op_b_i      ),
-    .dot_op_c_i      ( mult_dot_op_c_i      ),
-    .dot_signed_i    ( mult_dot_signed_i    ),
-
-    .result_o        ( mult_result          ),
-
-    .multicycle_o    ( mult_multicycle_o    ),
-    .ready_o         ( mult_ready           ),
-    .ex_ready_i      ( ex_ready_o           )
-  );
-
-
-  ///////////////////////////////////////
-  // EX/WB Pipeline Register           //
-  ///////////////////////////////////////
-  always_ff @(posedge clk, negedge rst_n)
-  begin : EX_WB_Pipeline_Register
-    if (~rst_n)
-    begin
-      regfile_waddr_wb_o   <= '0;
-      regfile_we_wb_o      <= 1'b0;
-    end
-    else
-    begin
-      if (ex_valid_o) // wb_ready_i is implied
-      begin
-        regfile_we_wb_o    <= regfile_we_i;
-        if (regfile_we_i) begin
-          regfile_waddr_wb_o <= regfile_waddr_i;
-        end
-      end else if (wb_ready_i) begin
-        // we are ready for a new instruction, but there is none available,
-        // so we just flush the current one out of the pipe
-        regfile_we_wb_o    <= 1'b0;
-      end
-    end
-  end
-
-  // As valid always goes to the right and ready to the left, and we are able
-  // to finish branches without going to the WB stage, ex_valid does not
-  // depend on ex_ready.
-  assign ex_ready_o = (alu_ready & mult_ready & lsu_ready_ex_i & wb_ready_i) | branch_in_ex_i;
-  assign ex_valid_o = (alu_ready & mult_ready & lsu_ready_ex_i & wb_ready_i);
+	logic [31:0] alu_result;
+	logic [31:0] alu_csr_result;
+	logic [31:0] mult_result;
+	logic        alu_cmp_result;
+
+	logic        alu_ready;
+	logic        mult_ready;
+
+`ifdef DIFT 
+	logic        alu_result_tag;
+	logic        rf_enable_tag;
+	logic        pc_enable_tag;
+	logic        check_a;
+	logic        check_b;
+`endif
+
+	// EX stage result mux (ALU, MAC unit, CSR)
+	assign alu_csr_result         = csr_access_i ? csr_rdata_i : alu_result;
+
+	assign regfile_alu_wdata_fw_o = mult_en_i ? mult_result : alu_csr_result;
+
+	assign regfile_alu_we_fw_o    = regfile_alu_we_i;
+	assign regfile_alu_waddr_fw_o = regfile_alu_waddr_i;
+
+	// branch handling
+	assign branch_decision_o      = alu_cmp_result;
+	assign jump_target_o          = alu_operand_c_i;
+
+`ifdef DIFT   //Mise à jour des tags
+	// Register instruction except Load
+	always_comb begin
+		if (register_set_i_tag) begin
+			regfile_alu_wdata_fw_o_tag = 1'b1;
+			regfile_alu_we_fw_o_tag    = 1'b1;
+		end else begin
+			regfile_alu_wdata_fw_o_tag = alu_result_tag;
+			regfile_alu_we_fw_o_tag    = rf_enable_tag & regfile_alu_we_i & ~(is_store_post_i_tag);
+		end
+	end
+	assign regfile_alu_waddr_fw_o_tag = regfile_alu_waddr_i_tag;
+
+	// Store
+	always_comb begin
+		if (memory_set_i_tag) begin
+			data_wdata_ex_o_tag        = 1'b1;  // M[RS1+offset]: destination tag
+			data_we_ex_o_tag           = 1'b1;
+		end else begin
+			data_wdata_ex_o_tag        = alu_result_tag;  // M[RS1+offset]: destination tag
+			data_we_ex_o_tag           = data_we_ex_i & rf_enable_tag;
+		end
+	end
+
+	// Branch
+	// if (branch is not taken)
+	//   old PC tag is not updated;
+	// else
+	//   if (old PC tag is equal to 1)
+	//     new PC tag is equal to 1;
+	//   else
+	//     new PC tag is the result of the policy applied on the source operands;
+	always_comb
+	begin
+		if (~alu_cmp_result) begin
+			pc_enable_o_tag = 1'b0;
+		end else begin
+			if (alu_operand_c_i_tag) begin
+				pc_enable_o_tag   = 1'b1;
+				jump_target_o_tag = alu_operand_c_i_tag;
+			end else begin
+				pc_enable_o_tag   = pc_enable_tag;
+				jump_target_o_tag = alu_result_tag;
+			end
+		end
+	end
+`endif
+
+	////////////////////////////
+	//     _    _    _   _    //
+	//    / \  | |  | | | |   //
+	//   / _ \ | |  | | | |   //
+	//  / ___ \| |__| |_| |   //
+	// /_/   \_\_____\___/    //
+	//                        //
+	////////////////////////////
+
+	riscv_alu alu_i
+	(
+		.clk                 ( clk             ),
+		.rst_n               ( rst_n           ),
+
+		.operator_i          ( alu_operator_i  ),
+		.operand_a_i         ( alu_operand_a_i ),
+		.operand_b_i         ( alu_operand_b_i ),
+		.operand_c_i         ( alu_operand_c_i ),
+
+		.vector_mode_i       ( alu_vec_mode_i  ),
+		.bmask_a_i           ( bmask_a_i       ),
+		.bmask_b_i           ( bmask_b_i       ),
+		.imm_vec_ext_i       ( imm_vec_ext_i   ),
+
+		.result_o            ( alu_result      ),
+		.comparison_result_o ( alu_cmp_result  ),
+
+		.ready_o             ( alu_ready       ),
+		.ex_ready_i          ( ex_ready_o      )
+	);
+
+	////////////////////////////////////////////////////////
+	//  ____ ___ _____ _____   _     ___   ____ ___ ____  //
+	// |  _ \_ _|  ___|_   _| | |   / _ \ / ___|_ _/ ___| //
+	// | | | | || |_    | |   | |  | | | | |  _ | | |     //
+	// | |_| | ||  _|   | |   | |__| |_| | |_| || | |___  //
+	// |____/___|_|     |_|   |_____\___/ \____|___\____| //
+	//                                                    //
+	////////////////////////////////////////////////////////
+
+`ifdef DIFT // Récupération des infos du TPR prémachées par le décodeur
+	riscv_tag_propagation_logic tag_propagation_logic_i
+	(
+		.operator_i           ( alu_operator_i_mode     ),
+		.operand_a_i          ( alu_operand_a_i_tag     ),
+		.operand_b_i          ( alu_operand_b_i_tag     ),
+		.result_o             ( alu_result_tag          ),
+		.rf_enable_tag        ( rf_enable_tag           ),
+		.pc_enable_tag        ( pc_enable_tag           )
+	);
+`endif
+
+`ifdef DIFT // Récupération des infos du TCR prémachées par le décodeur
+	assign check_a = use_store_ops_i ? store_dest_addr_i_tag : alu_operand_a_i_tag;
+	assign check_b = use_store_ops_i ? store_source_i_tag : alu_operand_b_i_tag;
+
+	riscv_tag_check_logic tag_check_logic_i
+	(
+		.operand_a_i          ( check_a                 ),
+		.operand_b_i          ( check_b                 ),
+		.result_i             ( alu_result_tag          ),
+		.check_s1_i           ( check_s1_i_tag          ),
+		.check_s2_i           ( check_s2_i_tag          ),
+		.check_d_i            ( check_d_i_tag           ),
+		.is_load_i            ( regfile_we_i            ),
+		.exception_o          ( exception_o_tag         )
+	);
+`endif
+
+	////////////////////////////////////////////////////////////////
+	//  __  __ _   _ _   _____ ___ ____  _     ___ _____ ____     //
+	// |  \/  | | | | | |_   _|_ _|  _ \| |   |_ _| ____|  _ \    //
+	// | |\/| | | | | |   | |  | || |_) | |    | ||  _| | |_) |   //
+	// | |  | | |_| | |___| |  | ||  __/| |___ | || |___|  _ <    //
+	// |_|  |_|\___/|_____|_| |___|_|   |_____|___|_____|_| \_\   //
+	//                                                            //
+	////////////////////////////////////////////////////////////////
+
+	riscv_mult mult_i
+	(
+		.clk             ( clk                  ),
+		.rst_n           ( rst_n                ),
+
+		.enable_i        ( mult_en_i            ),
+		.operator_i      ( mult_operator_i      ),
+
+		.short_subword_i ( mult_sel_subword_i   ),
+		.short_signed_i  ( mult_signed_mode_i   ),
+
+		.op_a_i          ( mult_operand_a_i     ),
+		.op_b_i          ( mult_operand_b_i     ),
+		.op_c_i          ( mult_operand_c_i     ),
+		.imm_i           ( mult_imm_i           ),
+
+		.dot_op_a_i      ( mult_dot_op_a_i      ),
+		.dot_op_b_i      ( mult_dot_op_b_i      ),
+		.dot_op_c_i      ( mult_dot_op_c_i      ),
+		.dot_signed_i    ( mult_dot_signed_i    ),
+
+		.result_o        ( mult_result          ),
+
+		.multicycle_o    ( mult_multicycle_o    ),
+		.ready_o         ( mult_ready           ),
+		.ex_ready_i      ( ex_ready_o           )
+	);
+
+	///////////////////////////////////////
+	// EX/WB Pipeline Register           //
+	///////////////////////////////////////
+	always_ff @(posedge clk, negedge rst_n)
+	begin : EX_WB_Pipeline_Register
+		if (~rst_n)
+		begin
+			regfile_waddr_wb_o   <= '0;
+			regfile_we_wb_o      <= 1'b0;
+		end
+		else
+		begin
+			if (ex_valid_o) // wb_ready_i is implied
+			begin
+				regfile_we_wb_o      <= regfile_we_i;
+				if (regfile_we_i) begin
+					regfile_waddr_wb_o <= regfile_waddr_i;
+				end
+			end else if (wb_ready_i) begin
+				// we are ready for a new instruction, but there is none available,
+				// so we just flush the current one out of the pipe
+				regfile_we_wb_o      <= 1'b0;
+			end
+		end
+	end
+
+`ifdef DIFT // Mise à jour du tag dans le cadre du LOAD
+	// Load
+	always_ff @(posedge clk, negedge rst_n)
+	begin
+		if (~rst_n)
+		begin
+			rs1_o_tag            <= 1'b0;
+		end
+		else
+		begin
+			if (ex_valid_o)
+			begin
+				if (regfile_we_i) begin
+					rs1_o_tag        <= alu_operand_a_i_tag;
+				end
+			end
+		end
+	end
+`endif
+
+	// As valid always goes to the right and ready to the left, and we are able
+	// to finish branches without going to the WB stage, ex_valid does not
+	// depend on ex_ready.
+	assign ex_ready_o = (alu_ready & mult_ready & lsu_ready_ex_i & wb_ready_i) | branch_in_ex_i;
+	assign ex_valid_o = (alu_ready & mult_ready & lsu_ready_ex_i & wb_ready_i);
 
 endmodule
diff --git a/hierarchy_check.sv b/hierarchy_check.sv
new file mode 100644
index 0000000..0dba728
--- /dev/null
+++ b/hierarchy_check.sv
@@ -0,0 +1,43 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer        Jonathan Dumaz                                             //
+//                                                                            //
+// Design Name:    Hierarchy check                                            //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    This unit raises an exception if a check is enabled and    //
+//                 if the hierarchy tag in input is greater than the          //
+//								 hierarchy status currently set in the THR                  //
+////////////////////////////////////////////////////////////////////////////////
+
+import riscv_defines::*;
+`include "riscv_config.sv"
+
+`ifdef DIFT_H
+module riscv_hierarchy_check
+(
+  input  logic [31:0] thr_i,                        //thr register
+  input  logic [1:0]  cmp_i,									      //hierarchy source tag
+  input  logic        activate_hierarchy_check_i,   //to activate hierarchy check only when necessary
+  output logic        exception_o
+);
+
+  logic [1:0] current_access;
+  
+  assign current_access[THR_CURRENT_LOW] = thr_i[THR_CURRENT_LOW];
+  assign current_access[THR_CURRENT_HIGH] = thr_i[THR_CURRENT_HIGH];
+
+  always_comb
+  begin
+    exception_o = 1'b0;
+    if (activate_hierarchy_check_i) begin
+      if (current_access < cmp_i) begin
+        exception_o = 1'b1;
+      end else begin
+        exception_o = 1'b0;
+      end
+    end
+  end
+
+endmodule
+`endif
\ No newline at end of file
diff --git a/id_stage.sv b/id_stage.sv
index 01389e1..291b0f7 100644
--- a/id_stage.sv
+++ b/id_stage.sv
@@ -25,6 +25,7 @@
 //                                                                            //
 ////////////////////////////////////////////////////////////////////////////////
 
+`include "riscv_config.sv"
 
 import riscv_defines::*;
 
@@ -56,7 +57,6 @@ module riscv_id_stage
     input  logic       [31:0] instr_rdata_i,      // comes from pipeline of IF stage
     output logic              instr_req_o,
 
-
     // Jumps and branches
     output logic        branch_in_ex_o,
     input  logic        branch_decision_i,
@@ -107,7 +107,6 @@ module riscv_id_stage
     // ALU
     output logic [ALU_OP_WIDTH-1:0] alu_operator_ex_o,
 
-
     // MUL
     output logic [ 2:0] mult_operator_ex_o,
     output logic [31:0] mult_operand_a_ex_o,
@@ -197,6 +196,47 @@ module riscv_id_stage
     output logic        perf_jump_o,          // we are executing a jump instruction
     output logic        perf_jr_stall_o,      // jump-register-hazard
     output logic        perf_ld_stall_o       // load-use-hazard
+
+// DIFT signals
+`ifdef DIFT
+    ,
+    input  logic        regfile_wdata_wb_i_tag,            // From WB stage
+    input  logic        regfile_alu_wdata_fw_i_tag,        // From tags ALU (EX stage)
+    input  logic        regfile_alu_we_fw_i_tag,           // From tags ALU (EX stage)
+    input  logic [4:0]  regfile_alu_waddr_fw_i_tag,        // From EX
+    input  logic [31:0] tpr_i,                             // From CRS
+    input  logic [31:0] tcr_i,                             // From CRS
+`ifdef DIFT_H
+    input  logic [31:0] thr_i,                             // From CRS
+    input  logic [1:0]  regfile_wdata_wb_i_htag,           // From WB stage
+`endif
+    input  logic        pc_id_i_tag,                       // From IF
+    input  logic        pc_enable_i_tag,                   // From EX
+    input  logic        rs1_i_tag,                         // From EX
+    input  logic        exception_i_tag,                   // From EX
+    output logic        jump_target_o_tag,                 // To IF
+    output logic        pc_ex_o_tag,                       // To CSR (?)
+    output logic        pc_set_o_tag,                      // To IF
+    output logic [ALU_MODE_WIDTH-1:0] alu_operator_o_mode, // To EX
+    output logic        store_dest_addr_ex_o_tag,          // To EX
+    output logic        store_source_ex_o_tag,             // To EX
+    output logic        use_store_ops_ex_o,                // To EX
+    output logic        alu_operand_a_ex_o_tag,            // To EX
+    output logic        alu_operand_b_ex_o_tag,            // To EX
+    output logic        alu_operand_c_ex_o_tag,            // To EX
+    output logic [4:0]  regfile_alu_waddr_ex_o_tag,        // To EX
+    output logic        check_s1_o_tag,                    // To EX
+    output logic        check_s2_o_tag,                    // To EX
+    output logic        check_d_o_tag,                     // To EX
+    output logic        register_set_o_tag,                // To EX
+    output logic        is_store_post_o_tag,               // To EX
+    output logic        memory_set_o_tag                   // To EX
+    `ifdef DIFT_H
+    ,
+    output logic        memory_hierarchy_set_o_tag,        // To EX
+    output logic [1:0]  hierarchy_o_tag                    // To EX
+    `endif
+`endif
 );
 
   logic [31:0] instr;
@@ -205,6 +245,7 @@ module riscv_id_stage
   logic        deassert_we;
 
   logic        illegal_insn_dec;
+  logic        illegal_insn_dec_dift;
   logic        ebrk_insn;
   logic        eret_insn_dec;
   logic        ecall_insn_dec;
@@ -225,7 +266,6 @@ module riscv_id_stage
 
   logic        halt_id;
 
-
   // Immediate decoding and sign extension
   logic [31:0] imm_i_type;
   logic [31:0] imm_iz_type;
@@ -249,8 +289,6 @@ module riscv_id_stage
 
   logic [31:0] jump_target;       // calculated jump target (-> EX -> IF)
 
-
-
   // Signals running between controller and exception controller
   logic        exc_req, exc_ack;  // handshake
 
@@ -357,6 +395,39 @@ module riscv_id_stage
   logic        reg_d_alu_is_reg_b_id;
   logic        reg_d_alu_is_reg_c_id;
 
+`ifdef DIFT
+  logic        regfile_data_ra_id_tag;
+  logic        regfile_data_rb_id_tag;
+  logic        regfile_data_rc_id_tag;
+  logic        alu_operand_a_tag;
+  logic        alu_operand_b_tag;
+  logic        alu_operand_c_tag;
+  logic        operand_a_fw_id_tag;
+  logic        operand_b_fw_id_tag;
+  logic        operand_c_fw_id_tag;
+  logic        operand_b_tag;
+  logic        jump_target_tag;
+  logic [ALU_MODE_WIDTH-1:0] alu_operator_mode;
+  logic        is_store;
+  logic        enable_a;
+  logic        enable_b;
+  logic        branch_taken_ex_tag;
+  logic        regfile_dest_tag;
+  logic        regfile_enable_tag;
+  logic        check_s1_tag;
+  logic        check_s2_tag;
+  logic        check_d_tag;
+  logic        execute_pc_tag;
+  logic        exception_tag;
+  logic        register_set_tag;
+  logic        is_store_post_tag;
+  logic        memory_set_tag;
+`ifdef DIFT_H
+  logic        memory_set_hierarchy;
+  logic [1:0]  hierarchy_tag;
+`endif
+
+`endif
 
   assign instr = instr_rdata_i;
 
@@ -425,14 +496,15 @@ module riscv_id_stage
   assign reg_d_alu_is_reg_b_id = (regfile_alu_waddr_fw_i == regfile_addr_rb_id) && (regb_used_dec == 1'b1) && (regfile_addr_rb_id != '0);
   assign reg_d_alu_is_reg_c_id = (regfile_alu_waddr_fw_i == regfile_addr_rc_id) && (regc_used_dec == 1'b1) && (regfile_addr_rc_id != '0);
 
-
-
   // kill instruction in the IF/ID stage by setting the instr_valid_id control
   // signal to 0 for instructions that are done
   assign clear_instr_valid_o = id_ready_o | halt_id;
 
   assign branch_taken_ex = branch_in_ex_o & branch_decision_i;
 
+`ifdef DIFT
+  assign branch_taken_ex_tag = branch_in_ex_o & pc_enable_i_tag;
+`endif
 
   assign mult_en = mult_int_en | mult_dot_en;
 
@@ -466,7 +538,6 @@ module riscv_id_stage
     endcase
   end
 
-
   // hwloop cnt mux
   always_comb
   begin : hwloop_cnt_mux
@@ -483,7 +554,6 @@ module riscv_id_stage
   assign hwloop_regid = (|hwloop_we_int) ? hwloop_regid_int : csr_hwlp_regid_i;
   assign hwloop_we    = (|hwloop_we_int) ? hwloop_we_int    : csr_hwlp_we_i;
 
-
   //////////////////////////////////////////////////////////////////
   //      _                         _____                    _    //
   //     | |_   _ _ __ ___  _ __   |_   _|_ _ _ __ __ _  ___| |_  //
@@ -505,8 +575,21 @@ module riscv_id_stage
     endcase
   end
 
-  assign jump_target_o = jump_target;
+  assign jump_target_o = jump_target; // To ID
+
+`ifdef DIFT
+  always_comb
+  begin : jump_target_mux_tag
+    unique case (jump_target_mux_sel)
+      JT_JAL:  jump_target_tag = pc_id_i_tag;
+      JT_COND: jump_target_tag = pc_id_i_tag;
+      JT_JALR: jump_target_tag = regfile_data_ra_id_tag;
+      default: jump_target_tag = regfile_data_ra_id_tag;
+    endcase
+  end
 
+  assign jump_target_o_tag = jump_target_tag; // To ID
+`endif
 
   ////////////////////////////////////////////////////////
   //   ___                                 _      _     //
@@ -549,6 +632,31 @@ module riscv_id_stage
     endcase; // case (operand_a_fw_mux_sel)
   end
 
+`ifdef DIFT
+    // ALU_Op_a Mux
+    always_comb
+    begin : alu_operand_a_mux_tag
+      case (alu_op_a_mux_sel)
+        OP_A_REGA_OR_FWD:  alu_operand_a_tag = operand_a_fw_id_tag;
+        OP_A_REGB_OR_FWD:  alu_operand_a_tag = operand_b_fw_id_tag;
+        OP_A_CURRPC:       alu_operand_a_tag = pc_id_i_tag;
+        OP_A_IMM:          alu_operand_a_tag = 1'b0;
+        default:            alu_operand_a_tag = operand_a_fw_id_tag;
+      endcase;
+    end
+
+    // Operand a forwarding mux
+    always_comb
+    begin : operand_a_fw_mux_tag
+      case (operand_a_fw_mux_sel)
+        SEL_FW_EX:    operand_a_fw_id_tag = regfile_alu_wdata_fw_i_tag;
+        SEL_FW_WB:    operand_a_fw_id_tag = regfile_wdata_wb_i_tag;
+        SEL_REGFILE:  operand_a_fw_id_tag = regfile_data_ra_id_tag;
+        default:       operand_a_fw_id_tag = regfile_data_ra_id_tag;
+      endcase;
+    end
+`endif
+
   //////////////////////////////////////////////////////
   //   ___                                 _   ____   //
   //  / _ \ _ __   ___ _ __ __ _ _ __   __| | | __ )  //
@@ -586,11 +694,10 @@ module riscv_id_stage
       OP_B_REGB_OR_FWD:  operand_b = operand_b_fw_id;
       OP_B_REGC_OR_FWD:  operand_b = operand_c_fw_id;
       OP_B_IMM:          operand_b = imm_b;
-      default:           operand_b = operand_b_fw_id;
+      default:            operand_b = operand_b_fw_id;
     endcase // case (alu_op_b_mux_sel)
   end
 
-
   // scalar replication for operand B and shuffle type
   always_comb
   begin
@@ -606,7 +713,6 @@ module riscv_id_stage
   // choose normal or scalar replicated version of operand b
   assign alu_operand_b = (scalar_replication == 1'b1) ? operand_b_vec : operand_b;
 
-
   // Operand b forwarding mux
   always_comb
   begin : operand_b_fw_mux
@@ -618,6 +724,45 @@ module riscv_id_stage
     endcase; // case (operand_b_fw_mux_sel)
   end
 
+`ifdef DIFT
+    // ALU_Op_b Mux
+    always_comb
+    begin : alu_operand_b_mux_tag
+      case (alu_op_b_mux_sel)
+        OP_B_REGB_OR_FWD:  operand_b_tag = operand_b_fw_id_tag;
+        OP_B_REGC_OR_FWD:  operand_b_tag = operand_c_fw_id_tag;
+        OP_B_IMM:          operand_b_tag = 1'b0;
+        default:            operand_b_tag = operand_b_fw_id_tag;
+      endcase // case (alu_op_b_mux_sel)
+    end
+
+    /* scalar replication for operand B and shuffle type
+    always_comb
+    begin
+      if (alu_vec_mode == VEC_MODE8) begin
+        operand_b_vec    = {4{operand_b[7:0]}};
+        imm_shuffle_type = imm_shuffleb_type;
+      end else begin
+        operand_b_vec    = {2{operand_b[15:0]}};
+        imm_shuffle_type = imm_shuffleh_type;
+      end
+    end*/
+
+    // choose normal or scalar replicated version of operand b
+    // assign alu_operand_b = (scalar_replication == 1'b1) ? operand_b_vec : operand_b;
+    assign alu_operand_b_tag = operand_b_tag;
+
+    // Operand b forwarding mux
+    always_comb
+    begin : operand_b_fw_mux_tag
+      case (operand_b_fw_mux_sel)
+        SEL_FW_EX:    operand_b_fw_id_tag = regfile_alu_wdata_fw_i_tag;
+        SEL_FW_WB:    operand_b_fw_id_tag = regfile_wdata_wb_i_tag;
+        SEL_REGFILE:  operand_b_fw_id_tag = regfile_data_rb_id_tag;
+        default:       operand_b_fw_id_tag = regfile_data_rb_id_tag;
+      endcase; // case (operand_b_fw_mux_sel)
+    end
+`endif
 
   //////////////////////////////////////////////////////
   //   ___                                 _    ____  //
@@ -634,7 +779,7 @@ module riscv_id_stage
     case (alu_op_c_mux_sel)
       OP_C_REGC_OR_FWD:  alu_operand_c = operand_c_fw_id;
       OP_C_REGB_OR_FWD:  alu_operand_c = operand_b_fw_id;
-      OP_C_JT:           alu_operand_c = jump_target;
+      OP_C_JT:           alu_operand_c = jump_target; // To EX
       default:            alu_operand_c = operand_c_fw_id;
     endcase // case (alu_op_c_mux_sel)
   end
@@ -650,6 +795,29 @@ module riscv_id_stage
     endcase; // case (operand_c_fw_mux_sel)
   end
 
+`ifdef DIFT
+    // ALU OP C Mux
+    always_comb
+    begin : alu_operand_c_mux_tag
+      case (alu_op_c_mux_sel)
+        OP_C_REGC_OR_FWD:  alu_operand_c_tag = operand_c_fw_id_tag;
+        OP_C_REGB_OR_FWD:  alu_operand_c_tag = operand_b_fw_id_tag;
+        OP_C_JT:           alu_operand_c_tag = jump_target_tag; // To EX
+        default:            alu_operand_c_tag = operand_c_fw_id_tag;
+      endcase // case (alu_op_c_mux_sel)
+    end
+
+    // Operand c forwarding mux
+    always_comb
+    begin : operand_c_fw_mux_tag
+      case (operand_c_fw_mux_sel)
+        SEL_FW_EX:    operand_c_fw_id_tag = regfile_alu_wdata_fw_i_tag;
+        SEL_FW_WB:    operand_c_fw_id_tag = regfile_wdata_wb_i_tag;
+        SEL_REGFILE:  operand_c_fw_id_tag = regfile_data_rc_id_tag;
+        default:       operand_c_fw_id_tag = regfile_data_rc_id_tag;
+      endcase; // case (operand_c_fw_mux_sel)
+    end
+`endif
 
   ///////////////////////////////////////////////////////////////////////////
   //  ___                              _ _       _              ___ ____   //
@@ -681,7 +849,6 @@ module riscv_id_stage
 
   assign imm_vec_ext_id = imm_vu_type[1:0];
 
-
   always_comb
   begin
     unique case (mult_imm_mux)
@@ -699,6 +866,7 @@ module riscv_id_stage
   // |_| \_\_____\____|___|____/ |_| |_____|_| \_\____/  //
   //                                                     //
   /////////////////////////////////////////////////////////
+
   riscv_register_file  registers_i
   (
     .clk          ( clk                ),
@@ -731,6 +899,46 @@ module riscv_id_stage
 
   assign dbg_reg_rdata_o = regfile_data_rc_id;
 
+ //////////////////////////////////////////////////////////////////////////////////
+ //  ____  _____ ____ ___ ____ _____ _____ ____  ____    _____  _    ____ ____   //
+ // |  _ \| ____/ ___|_ _/ ___|_   _| ____|  _ \/ ___|  |_   _|/ \  / ___/ ___|  //
+ // | |_) |  _|| |  _ | |\___ \ | | |  _| | |_) \___ \    | | / _ \| |  _\___ \  //
+ // |  _ <| |__| |_| || | ___) || | | |___|  _ < ___) |   | |/ ___ \ |_| |___) | //
+ // |_| \_\_____\____|___|____/ |_| |_____|_| \_\____/    |_/_/   \_\____|____/  //
+ //                                                                              //
+ //////////////////////////////////////////////////////////////////////////////////
+
+`ifdef DIFT
+  riscv_register_file_tag  registers_i_tag
+  (
+    .clk          ( clk                ),
+    .rst_n        ( rst_n              ),
+
+    .test_en_i    ( test_en_i          ),
+
+    // Read port a
+    .raddr_a_i    ( regfile_addr_ra_id ),
+    .rdata_a_o    ( regfile_data_ra_id_tag ),
+
+    // Read port b
+    .raddr_b_i    ( regfile_addr_rb_id ),
+    .rdata_b_o    ( regfile_data_rb_id_tag ),
+
+    // Read port c
+    .raddr_c_i    ( regfile_addr_rc_id ),
+    .rdata_c_o    ( regfile_data_rc_id_tag ),
+
+    // Write port a
+    .waddr_a_i    ( regfile_waddr_wb_i ),
+    .wdata_a_i    ( regfile_dest_tag   ),
+    .we_a_i       ( regfile_enable_tag ),
+
+    // Write port b
+    .waddr_b_i    ( regfile_alu_waddr_fw_i_tag ),
+    .wdata_b_i    ( regfile_alu_wdata_fw_i_tag ),
+    .we_b_i       ( regfile_alu_we_fw_i_tag )
+  );
+`endif
 
   ///////////////////////////////////////////////
   //  ____  _____ ____ ___  ____  _____ ____   //
@@ -814,8 +1022,143 @@ module riscv_id_stage
     .jump_in_dec_o                   ( jump_in_dec               ),
     .jump_in_id_o                    ( jump_in_id                ),
     .jump_target_mux_sel_o           ( jump_target_mux_sel       )
+  );
+
+  ////////////////////////////////////////////////////////////////////////////
+  //   __  __  ___  ____  _____   ____  _____ ____ ___  ____  _____ ____    //
+  //  |  \/  |/ _ \|  _ \| ____| |  _ \| ____/ ___/ _ \|  _ \| ____|  _ \   //
+  //  | |\/| | | | | | | |  _|   | | | |  _|| |  | | | | | | |  _| | |_) |  //
+  //  | |  | | |_| | |_| | |___  | |_| | |__| |__| |_| | |_| | |___|  _ <   //
+  //  |_|  |_|\___/|____/|_____| |____/|_____\____\___/|____/|_____|_| \_\  //
+  //                                                                        //
+  ////////////////////////////////////////////////////////////////////////////
+
+`ifdef DIFT
+  riscv_mode_tag mode_i_tag
+  (
+    .instr_rdata_i                   ( instr                     ),
+    .tpr_i                           ( tpr_i                     ),
+
+    // jump/branches
+    .alu_operator_o_mode             ( alu_operator_mode         ),
+    .register_set_o                  ( register_set_tag          ),
+    .is_store_post_o                 ( is_store_post_tag         ),
+    .memory_set_o                    ( memory_set_tag            )
+
+    `ifdef DIFT_H
+    ,
+    .thr_i                           ( thr_i                     ),
+    .memory_set_hierarchy_o          ( memory_set_hierarchy      ),
+    .hierarchy_tag_o                 ( hierarchy_tag             )
+    `endif
+  );
+`endif
+
+  /////////////////////////////////////////////////
+  //   _____ _   _    _    ____  _     _____     //
+  //  | ____| \ | |  / \  | __ )| |   | ____|    //
+  //  |  _| |  \| | / _ \ |  _ \| |   |  _|      //
+  //  | |___| |\  |/ ___ \| |_) | |___| |___     //
+  //  |_____|_| \_/_/   \_\____/|_____|_____|    //
+  //                                             //
+  //   ____  _____ ____ ___  ____  _____ ____    //
+  //  |  _ \| ____/ ___/ _ \|  _ \| ____|  _ \   //
+  //  | | | |  _|| |  | | | | | | |  _| | |_) |  //
+  //  | |_| | |__| |__| |_| | |_| | |___|  _ <   //
+  //  |____/|_____\____\___/|____/|_____|_| \_\  //
+  //                                             //
+  /////////////////////////////////////////////////
+
+`ifdef DIFT
+  riscv_enable_tag enable_i_tag
+  (
+    .instr_rdata_i                   ( instr                     ),
+    .tpr_i                           ( tpr_i                     ),
+    .is_store_o                      ( is_store                  ),
+    .enable_a_o                      ( enable_a                  ),
+    .enable_b_o                      ( enable_b                  )
+  );
+`endif
 
+  ///////////////////////////////////////////////////////////////////////
+  //   _     ___    _    ____                                          //
+  //  | |   / _ \  / \  |  _ \                                         //
+  //  | |  | | | |/ _ \ | | | |                                        //
+  //  | |__| |_| / ___ \| |_| |                                        //
+  //  |_____\___/_/   \_\____/                                         //
+  //                                                                   //
+  //  ____  ____   ___  ____   _    ____    _  _____ ___ ___  _   _    //
+  //  |  _ \|  _ \ / _ \|  _ \ / \  / ___|  / \|_   _|_ _/ _ \| \ | |  //
+  //  | |_) | |_) | | | | |_) / _ \| |  _  / _ \ | |  | | | | |  \| |  //
+  //  |  __/|  _ <| |_| |  __/ ___ \ |_| |/ ___ \| |  | | |_| | |\  |  //
+  //  |_|   |_| \_\\___/|_| /_/   \_\____/_/   \_\_| |___\___/|_| \_|  //
+  //                                                                   //
+  ///////////////////////////////////////////////////////////////////////
+
+`ifdef DIFT
+  riscv_load_propagation load_i_propagation
+  (
+    .regfile_wdata_wb_i_tag          ( regfile_wdata_wb_i_tag    ),
+    .rs1_i_tag                       ( rs1_i_tag                 ),
+    .regfile_we_wb_i                 ( regfile_we_wb_i           ),
+    .tpr_i                           ( tpr_i                     ),
+    .regfile_dest_tag                ( regfile_dest_tag          ),
+    .regfile_enable_tag              ( regfile_enable_tag        )
   );
+`endif
+
+  ///////////////////////////////////////////////////////////////
+  //   _     ___    _    ____     ____ _   _ _____ ____ _  __  //
+  //  | |   / _ \  / \  |  _ \   / ___| | | | ____/ ___| |/ /  //
+  //  | |  | | | |/ _ \ | | | | | |   | |_| |  _|| |   | ' /   //
+  //  | |__| |_| / ___ \| |_| | | |___|  _  | |__| |___| . \   //
+  //  |_____\___/_/   \_\____/   \____|_| |_|_____\____|_|\_\  //
+  //                                                           //
+  ///////////////////////////////////////////////////////////////
+
+`ifdef DIFT
+  riscv_load_check load_i_check
+  (
+    .regfile_wdata_wb_i_tag          ( regfile_wdata_wb_i_tag    ),
+    .rs1_i_tag                       ( rs1_i_tag                 ),
+    .regfile_dest_tag                ( regfile_dest_tag          ),
+    .tcr_i                           ( tcr_i                     ),
+    .regfile_we_wb_i                 ( regfile_we_wb_i           ),
+    .exception_o                     ( exception_tag             )
+    `ifdef DIFT_H
+    ,
+    .thr_i                           ( thr_i                     ),
+    .regfile_wdata_wb_i_htag         ( regfile_wdata_wb_i_htag   )
+    `endif
+  );
+`endif
+
+  //////////////////////////////////////////////////////////////////////////////
+  //   ____ _   _ _____ ____ _  __  ____  _____ ____ ___  ____  _____ ____    //
+  //  / ___| | | | ____/ ___| |/ / |  _ \| ____/ ___/ _ \|  _ \| ____|  _ \   //
+  // | |   | |_| |  _|| |   | ' /  | | | |  _|| |  | | | | | | |  _| | |_) |  //
+  // | |___|  _  | |__| |___| . \  | |_| | |__| |__| |_| | |_| | |___|  _ <   //
+  //  \____|_| |_|_____\____|_|\_\ |____/|_____\____\___/|____/|_____|_| \_\  //
+  //                                                                          //
+  //////////////////////////////////////////////////////////////////////////////
+
+`ifdef DIFT
+  riscv_check_tag check_i_tag
+  (
+    .instr_rdata_i                   ( instr                     ),
+    .tcr_i                           ( tcr_i                     ),
+    .source_1_o                      ( check_s1_tag              ),
+    .source_2_o                      ( check_s2_tag              ),
+    .dest_o                          ( check_d_tag               ),
+    .execute_pc_o                    ( execute_pc_tag            )
+  );
+`endif
+
+`ifdef DIFT
+  assign illegal_insn_dec_dift = illegal_insn_dec | exception_tag | exception_i_tag | (execute_pc_tag & pc_id_i_tag);
+`else
+  assign illegal_insn_dec_dift = illegal_insn_dec;
+`endif
 
   ////////////////////////////////////////////////////////////////////
   //    ____ ___  _   _ _____ ____   ___  _     _     _____ ____    //
@@ -837,7 +1180,7 @@ module riscv_id_stage
 
     // decoder related signals
     .deassert_we_o                  ( deassert_we            ),
-    .illegal_insn_i                 ( illegal_insn_dec       ),
+    .illegal_insn_i                 ( illegal_insn_dec_dift  ),
     .eret_insn_i                    ( eret_insn_dec          ),
     .pipe_flush_i                   ( pipe_flush_dec         ),
 
@@ -855,6 +1198,9 @@ module riscv_id_stage
     // to prefetcher
     .pc_set_o                       ( pc_set_o               ),
     .pc_mux_o                       ( pc_mux_o               ),
+`ifdef DIFT
+    .pc_set_o_tag                   ( pc_set_o_tag           ),
+`endif
 
     // LSU
     .data_req_ex_i                  ( data_req_ex_o          ),
@@ -866,6 +1212,9 @@ module riscv_id_stage
 
     // jump/branch control
     .branch_taken_ex_i              ( branch_taken_ex        ),
+`ifdef DIFT
+    .branch_taken_ex_i_tag          ( branch_taken_ex_tag    ),
+`endif
     .jump_in_id_i                   ( jump_in_id             ),
     .jump_in_dec_i                  ( jump_in_dec            ),
 
@@ -957,10 +1306,10 @@ module riscv_id_stage
     .irq_i                ( irq_i            ),
     .irq_enable_i         ( irq_enable_i     ),
 
-    .ebrk_insn_i          ( is_decoding_o & ebrk_insn        ),
-    .illegal_insn_i       ( is_decoding_o & illegal_insn_dec ),
-    .ecall_insn_i         ( is_decoding_o & ecall_insn_dec   ),
-    .eret_insn_i          ( is_decoding_o & eret_insn_dec    ),
+    .ebrk_insn_i          ( is_decoding_o & ebrk_insn             ),
+    .illegal_insn_i       ( is_decoding_o & illegal_insn_dec_dift ),
+    .ecall_insn_i         ( is_decoding_o & ecall_insn_dec        ),
+    .eret_insn_i          ( is_decoding_o & eret_insn_dec         ),
 
     .lsu_load_err_i       ( lsu_load_err_i   ),
     .lsu_store_err_i      ( lsu_store_err_i  ),
@@ -971,7 +1320,6 @@ module riscv_id_stage
     .dbg_settings_i       ( dbg_settings_i   )
   );
 
-
   //////////////////////////////////////////////////////////////////////////
   //          ____ ___  _   _ _____ ____   ___  _     _     _____ ____    //
   //         / ___/ _ \| \ | |_   _|  _ \ / _ \| |   | |   | ____|  _ \   //
@@ -1070,7 +1418,6 @@ module riscv_id_stage
       pc_ex_o                     <= '0;
 
       branch_in_ex_o              <= 1'b0;
-
     end
     else if (data_misaligned_i) begin
       // misaligned data access case
@@ -1101,14 +1448,14 @@ module riscv_id_stage
       begin // unstall the whole pipeline
         if (~mult_en)
         begin // only change those registers when we actually need to
-          alu_operator_ex_o         <= alu_operator;
-          alu_operand_a_ex_o        <= alu_operand_a;
-          alu_operand_b_ex_o        <= alu_operand_b;
-          alu_operand_c_ex_o        <= alu_operand_c;
-          bmask_a_ex_o              <= bmask_a_id;
-          bmask_b_ex_o              <= bmask_b_id;
-          imm_vec_ext_ex_o          <= imm_vec_ext_id;
-          alu_vec_mode_ex_o         <= alu_vec_mode;
+          alu_operator_ex_o           <= alu_operator;
+          alu_operand_a_ex_o          <= alu_operand_a;
+          alu_operand_b_ex_o          <= alu_operand_b;
+          alu_operand_c_ex_o          <= alu_operand_c;
+          bmask_a_ex_o                <= bmask_a_id;
+          bmask_b_ex_o                <= bmask_b_id;
+          imm_vec_ext_ex_o            <= imm_vec_ext_id;
+          alu_vec_mode_ex_o           <= alu_vec_mode;
         end
 
         mult_en_ex_o                <= mult_en;
@@ -1183,12 +1530,93 @@ module riscv_id_stage
     end
   end
 
+`ifdef DIFT
+  always_ff @(posedge clk, negedge rst_n)
+  begin : ID_EX_PIPE_REGISTERS_TAG
+    if (rst_n == 1'b0)
+    begin
+      alu_operator_o_mode         <= ALU_MODE_OLD;
+      alu_operand_a_ex_o_tag      <= '0;
+      alu_operand_b_ex_o_tag      <= '0;
+      alu_operand_c_ex_o_tag      <= '0;
+      pc_ex_o_tag                 <= '0;
+      check_s1_o_tag              <= '0;
+      check_s2_o_tag              <= '0;
+      check_d_o_tag               <= '0;
+      register_set_o_tag          <= '0;
+      is_store_post_o_tag         <= '0;
+      memory_set_o_tag            <= '0;
+    `ifdef DIFT_H
+      memory_hierarchy_set_o_tag  <= '0;
+      hierarchy_o_tag             <= '0;
+    `endif  
+      regfile_alu_waddr_ex_o_tag  <= '0;
+      store_dest_addr_ex_o_tag    <= '0;
+      store_source_ex_o_tag       <= '0;
+      use_store_ops_ex_o          <= '0;
+    end
+    else if (data_misaligned_i) begin
+      if (ex_ready_i)
+      begin
+        alu_operand_a_ex_o_tag    <= alu_operand_a_tag;
+        alu_operand_b_ex_o_tag    <= alu_operand_b_tag;
+      end
+    end else begin
+      if (id_valid_o)
+      begin
+        if (~mult_en)
+        begin
+          alu_operator_o_mode           <= alu_operator_mode;
+          check_s1_o_tag                <= check_s1_tag;
+          check_s2_o_tag                <= check_s2_tag;
+          check_d_o_tag                 <= check_d_tag;
+          register_set_o_tag            <= register_set_tag;
+          is_store_post_o_tag           <= is_store_post_tag;
+          memory_set_o_tag              <= memory_set_tag;
+          `ifdef DIFT_H
+          memory_hierarchy_set_o_tag    <= memory_set_hierarchy;
+          hierarchy_o_tag               <= hierarchy_tag;
+          `endif
+          if (is_store) begin
+            if (enable_a) begin
+              alu_operand_a_ex_o_tag    <= alu_operand_a_tag;  // RS1: destination address tag
+            end else begin
+              alu_operand_a_ex_o_tag    <= '0;
+            end
+	          if (enable_b) begin
+	            alu_operand_b_ex_o_tag    <= alu_operand_c_tag;  // RS2: source tag
+            end else begin
+              alu_operand_b_ex_o_tag    <= '0;
+            end
+            store_dest_addr_ex_o_tag    <= alu_operand_a_tag;  // RS1: destination address tag
+            store_source_ex_o_tag       <= alu_operand_c_tag;  // RS2: source tag
+            use_store_ops_ex_o          <= '1;
+          end else begin
+            alu_operand_a_ex_o_tag      <= alu_operand_a_tag;
+            alu_operand_b_ex_o_tag      <= alu_operand_b_tag;
+            alu_operand_c_ex_o_tag      <= alu_operand_c_tag;
+            store_dest_addr_ex_o_tag    <= '0;
+            store_source_ex_o_tag       <= '0;
+            use_store_ops_ex_o          <= '0;
+          end
+        end
+
+        if (regfile_alu_we_id || register_set_tag) begin
+          regfile_alu_waddr_ex_o_tag    <= regfile_alu_waddr_id;
+        end
+
+        if ((jump_in_id == BRANCH_COND) || data_load_event_id) begin
+          pc_ex_o_tag               <= pc_id_i_tag;
+        end
+      end
+    end
+  end
+`endif
 
   // stall control
   assign id_ready_o = ((~misaligned_stall) & (~jr_stall) & (~load_stall) & ex_ready_i);
   assign id_valid_o = (~halt_id) & id_ready_o;
 
-
   //----------------------------------------------------------------------------
   // Assertions
   //----------------------------------------------------------------------------
diff --git a/if_stage.sv b/if_stage.sv
index 60d181d..b50d8db 100644
--- a/if_stage.sv
+++ b/if_stage.sv
@@ -25,6 +25,7 @@
 //                                                                            //
 ////////////////////////////////////////////////////////////////////////////////
 
+`include "riscv_config.sv"
 
 import riscv_defines::*;
 
@@ -34,62 +35,70 @@ module riscv_if_stage
   parameter RDATA_WIDTH = 32
 )
 (
-    input  logic        clk,
-    input  logic        rst_n,
-
-    // the boot address is used to calculate the exception offsets
-    input  logic [31:0] boot_addr_i,
-
-    // instruction request control
-    input  logic        req_i,
-
-    // instruction cache interface
-    output logic                   instr_req_o,
-    output logic            [31:0] instr_addr_o,
-    input  logic                   instr_gnt_i,
-    input  logic                   instr_rvalid_i,
-    input  logic [RDATA_WIDTH-1:0] instr_rdata_i,
-
-    // Output of IF Pipeline stage
-    output logic [N_HWLP-1:0] hwlp_dec_cnt_id_o,     // currently served instruction was the target of a hwlp
-    output logic              is_hwlp_id_o,          // currently served instruction was the target of a hwlp
-    output logic              instr_valid_id_o,      // instruction in IF/ID pipeline is valid
-    output logic       [31:0] instr_rdata_id_o,      // read instruction is sampled and sent to ID stage for decoding
-    output logic              is_compressed_id_o,    // compressed decoder thinks this is a compressed instruction
-    output logic              illegal_c_insn_id_o,   // compressed decoder thinks this is an invalid instruction
-    output logic       [31:0] pc_if_o,
-    output logic       [31:0] pc_id_o,
-
-    // Forwarding ports - control signals
-    input  logic        clear_instr_valid_i,   // clear instruction valid bit in IF/ID pipe
-    input  logic        pc_set_i,              // set the program counter to a new value
-    input  logic [31:0] exception_pc_reg_i,    // address used to restore PC when the interrupt/exception is served
-    input  logic  [2:0] pc_mux_i,              // sel for pc multiplexer
-    input  logic  [1:0] exc_pc_mux_i,          // selects ISR address
-    input  logic  [4:0] exc_vec_pc_mux_i,      // selects ISR address for vectorized interrupt lines
-
-    // jump and branch target and decision
-    input  logic [31:0] jump_target_id_i,      // jump target address
-    input  logic [31:0] jump_target_ex_i,      // jump target address
-
-    // from hwloop controller
-    input  logic [N_HWLP-1:0] [31:0] hwlp_start_i,          // hardware loop start addresses
-    input  logic [N_HWLP-1:0] [31:0] hwlp_end_i,            // hardware loop end addresses
-    input  logic [N_HWLP-1:0] [31:0] hwlp_cnt_i,            // hardware loop counters
-
-    // from debug unit
-    input  logic [31:0] dbg_jump_addr_i,
-    input  logic        dbg_jump_req_i,
-
-    // pipeline stall
-    input  logic        halt_if_i,
-    output logic        if_ready_o,
-    input  logic        id_ready_i,
-    output logic        if_valid_o,
-
-    // misc signals
-    output logic        if_busy_o,             // is the IF stage busy fetching instructions?
-    output logic        perf_imiss_o           // Instruction Fetch Miss
+  input  logic        clk,
+  input  logic        rst_n,
+
+  // the boot address is used to calculate the exception offsets
+  input  logic [31:0] boot_addr_i,
+
+  // instruction request control
+  input  logic        req_i,
+
+  // instruction cache interface
+  output logic                   instr_req_o,
+  output logic            [31:0] instr_addr_o,
+  input  logic                   instr_gnt_i,
+  input  logic                   instr_rvalid_i,
+  input  logic [RDATA_WIDTH-1:0] instr_rdata_i,
+
+  // Output of IF Pipeline stage
+  output logic [N_HWLP-1:0] hwlp_dec_cnt_id_o,     // currently served instruction was the target of a hwlp
+  output logic              is_hwlp_id_o,          // currently served instruction was the target of a hwlp
+  output logic              instr_valid_id_o,      // instruction in IF/ID pipeline is valid
+  output logic       [31:0] instr_rdata_id_o,      // read instruction is sampled and sent to ID stage for decoding
+  output logic              is_compressed_id_o,    // compressed decoder thinks this is a compressed instruction
+  output logic              illegal_c_insn_id_o,   // compressed decoder thinks this is an invalid instruction
+  output logic       [31:0] pc_if_o,
+  output logic       [31:0] pc_id_o,
+
+  // Forwarding ports - control signals
+  input  logic        clear_instr_valid_i,   // clear instruction valid bit in IF/ID pipe
+  input  logic        pc_set_i,              // set the program counter to a new value
+  input  logic [31:0] exception_pc_reg_i,    // address used to restore PC when the interrupt/exception is served
+  input  logic  [2:0] pc_mux_i,              // sel for pc multiplexer
+  input  logic  [1:0] exc_pc_mux_i,          // selects ISR address
+  input  logic  [4:0] exc_vec_pc_mux_i,      // selects ISR address for vectorized interrupt lines
+
+  // jump and branch target and decision
+  input  logic [31:0] jump_target_id_i,      // jump target address
+  input  logic [31:0] jump_target_ex_i,      // branch target address
+
+  // from hwloop controller
+  input  logic [N_HWLP-1:0] [31:0] hwlp_start_i,          // hardware loop start addresses
+  input  logic [N_HWLP-1:0] [31:0] hwlp_end_i,            // hardware loop end addresses
+  input  logic [N_HWLP-1:0] [31:0] hwlp_cnt_i,            // hardware loop counters
+
+  // from debug unit
+  input  logic [31:0] dbg_jump_addr_i,
+  input  logic        dbg_jump_req_i,
+
+  // pipeline stall
+  input  logic        halt_if_i,
+  output logic        if_ready_o,
+  input  logic        id_ready_i,
+  output logic        if_valid_o,
+
+  // misc signals
+  output logic        if_busy_o,             // is the IF stage busy fetching instructions?
+  output logic        perf_imiss_o           // Instruction Fetch Miss
+
+`ifdef DIFT
+  ,
+  input  logic        jump_target_id_i_tag,
+  input  logic        jump_target_ex_i_tag,
+  input  logic        pc_set_i_tag,
+  output logic        pc_id_o_tag
+`endif
 );
 
   // offset FSM
@@ -115,6 +124,10 @@ module riscv_if_stage
   logic       [31:0] hwlp_target;
   logic [N_HWLP-1:0] hwlp_dec_cnt, hwlp_dec_cnt_if;
 
+`ifdef DIFT
+  logic              fetch_addr_n_tag;
+  logic              pc_if_o_tag;
+`endif
 
   // exception PC selection mux
   always_comb
@@ -149,6 +162,20 @@ module riscv_if_stage
     endcase
   end
 
+`ifdef DIFT
+  always_comb
+  begin
+    fetch_addr_n_tag = 1'b0;
+
+    unique case (pc_mux_i)
+      PC_BOOT:      fetch_addr_n_tag = 1'b0;
+      PC_JUMP:      fetch_addr_n_tag = jump_target_id_i_tag;
+      PC_BRANCH:    fetch_addr_n_tag = jump_target_ex_i_tag;
+      default:      fetch_addr_n_tag = 1'b0;
+    endcase
+  end
+`endif
+
   generate
     if (RDATA_WIDTH == 32) begin : prefetch_32
       // prefetch buffer, caches a fixed number of instructions
@@ -302,6 +329,18 @@ module riscv_if_stage
 
   assign perf_imiss_o    = (~fetch_valid) | branch_req;
 
+`ifdef DIFT
+  always_ff @(posedge clk, negedge rst_n)
+  begin
+    if (rst_n == 1'b0)
+    begin
+      pc_if_o_tag <= 1'b0;
+    end else if (pc_set_i_tag) begin
+      pc_if_o_tag <= fetch_addr_n_tag;
+    end
+  end
+`endif
+
 
   // compressed instruction decoding, or more precisely compressed instruction
   // expander
@@ -369,6 +408,21 @@ module riscv_if_stage
     end
   end
 
+`ifdef DIFT
+  always_ff @(posedge clk, negedge rst_n)
+  begin
+    if (rst_n == 1'b0)
+    begin
+      pc_id_o_tag           <= 1'b0;
+    end else begin
+      if (if_valid_o)
+      begin
+        pc_id_o_tag         <= pc_if_o_tag;
+      end
+    end
+  end
+`endif
+
   assign is_hwlp_id_o = is_hwlp_id_q & instr_valid_id_o;
 
   assign if_ready_o = valid & id_ready_i;
diff --git a/include/riscv_config.sv b/include/riscv_config.sv
index 7137bae..3d070b0 100644
--- a/include/riscv_config.sv
+++ b/include/riscv_config.sv
@@ -28,3 +28,9 @@
 `endif
 //`define SIMCHECKER
 `endif
+
+//Ligne ci-dessous à commenter lors d'une compilation du RI5CY seul
+`define DIFT 1
+
+//ligne ci-dessous à décommenter pour utiliser le DIFT étendu à la mémoire
+`define DIFT_H 1
diff --git a/include/riscv_defines.sv b/include/riscv_defines.sv
index 7a83e27..669ca58 100644
--- a/include/riscv_defines.sv
+++ b/include/riscv_defines.sv
@@ -61,6 +61,10 @@ parameter REGC_S1   = 2'b10;
 parameter REGC_RD   = 2'b01;
 parameter REGC_ZERO = 2'b11;
 
+// DIFT custom
+parameter OPCODE_DIFT_STORE = 7'h1b;
+parameter OPCODE_DIFT_IMM   = 7'h3b;
+
 
 //////////////////////////////////////////////////////////////////////////////
 //      _    _    _   _    ___                       _   _                  //
@@ -166,6 +170,102 @@ parameter VEC_MODE32 = 2'b00;
 parameter VEC_MODE16 = 2'b10;
 parameter VEC_MODE8  = 2'b11;
 
+////////////////////////////////////
+//   ____ _   _ _____ ____ _  __  //
+//  / ___| | | | ____/ ___| |/ /  //
+// | |   | |_| |  _|| |   | ' /   //
+// | |___|  _  | |__| |___| . \   //
+//  \____|_| |_|_____\____|_|\_\  //
+//                                //
+////////////////////////////////////
+
+// Integer class: ADDI, ADD, SUB, MUL, MULD[[S]U], MULW, DIV[U], REM[U], DIV[U]W, REM[U]W
+parameter INTEGER_CHECK_S1      = 0;
+parameter INTEGER_CHECK_S2      = 1;
+parameter INTEGER_CHECK_D       = 2;
+// Branch class: BEQ, BNE, BLT[U], BGE[U]
+parameter BRANCH_CHECK_S1       = 3;
+parameter BRANCH_CHECK_S2       = 4;
+// Jump class: JAL, JALR
+parameter JUMP_CHECK_S1         = 5;
+parameter JUMP_CHECK_S2         = 6;
+parameter JUMP_CHECK_D          = 7;
+// Shift class: SLLI, SRLI, SRAI, SLL, SRL, SRA
+parameter SHIFT_CHECK_S1        = 8;
+parameter SHIFT_CHECK_S2        = 9;
+parameter SHIFT_CHECK_D         = 10;
+// Comparison class: SLTI[U], SLT[U]
+parameter COMPARISON_CHECK_S1   = 11;
+parameter COMPARISON_CHECK_S2   = 12;
+parameter COMPARISON_CHECK_D    = 13;
+// Logical class: ANDI, ORI, XORI, AND, OR, XOR
+parameter LOGICAL_CHECK_S1      = 14;
+parameter LOGICAL_CHECK_S2      = 15;
+parameter LOGICAL_CHECK_D       = 16;
+// Load/Store class: LW, LH[U], LB[U], SW, SH, SB, LUI, AUIPC
+parameter LOADSTORE_CHECK_S     = 17;
+parameter LOADSTORE_CHECK_SA    = 18;
+parameter LOADSTORE_CHECK_D     = 19;
+parameter LOADSTORE_CHECK_DA    = 20;
+
+parameter THR_CURRENT_LOW = 0;
+parameter THR_CURRENT_HIGH = 1;
+parameter THR_BUFFER_LOW = 2;
+parameter THR_BUFFER_HIGH = 3;
+
+// Execute class: PC
+parameter EXECUTE_PC            = 21;
+
+///////////////////////////////////////////////
+//   _____ _   _    _    ____  _     _____   //
+//  | ____| \ | |  / \  | __ )| |   | ____|  //
+//  |  _| |  \| | / _ \ |  _ \| |   |  _|    //
+//  | |___| |\  |/ ___ \| |_) | |___| |___   //
+//  |_____|_| \_/_/   \_\____/|_____|_____|  //
+//                                           //
+///////////////////////////////////////////////
+
+parameter LOADSTORE_EN_SOURCE      = 15;
+parameter LOADSTORE_EN_SOURCE_ADDR = 16;
+parameter LOADSTORE_EN_DEST_ADDR   = 17;
+
+//////////////////////////////////
+//   __  __  ___  ____  _____   //
+//  |  \/  |/ _ \|  _ \| ____|  //
+//  | |\/| | | | | | | |  _|    //
+//  | |  | | |_| | |_| | |___   //
+//  |_|  |_|\___/|____/|_____|  //
+//                              //
+//////////////////////////////////
+
+parameter ALU_MODE_WIDTH = 2;
+
+parameter ALU_MODE_OLD    = 2'b00;
+parameter ALU_MODE_AND    = 2'b01;
+parameter ALU_MODE_OR     = 2'b10;
+parameter ALU_MODE_CLEAR  = 2'b11;
+
+// Integer class: ADDI, ADD, SUB, MUL, MULD[[S]U], MULW, DIV[U], REM[U], DIV[U]W, REM[U]W
+parameter INTEGER_LOW      = 0;
+parameter INTEGER_HIGH     = 1;
+// Branch class: BEQ, BNE, BLT[U], BGE[U]
+parameter BRANCH_LOW       = 2;
+parameter BRANCH_HIGH      = 3;
+// Jump class: JAL, JALR
+parameter JUMP_LOW         = 4;
+parameter JUMP_HIGH        = 5;
+// Shift class: SLLI, SRLI, SRAI, SLL, SRL, SRA
+parameter SHIFT_LOW        = 6;
+parameter SHIFT_HIGH       = 7;
+// Comparison class: SLTI[U], SLT[U]
+parameter COMPARISON_LOW   = 8;
+parameter COMPARISON_HIGH  = 9;
+// Logical class: ANDI, ORI, XORI, AND, OR, XOR
+parameter LOGICAL_LOW      = 10;
+parameter LOGICAL_HIGH     = 11;
+// Load/Store class: LW, LH[U], LB[U], SW, SH, SB, LUI, AUIPC
+parameter LOADSTORE_LOW    = 12;
+parameter LOADSTORE_HIGH   = 13;
 
 /////////////////////////////////////////////////////////
 //    ____ ____    ____            _     _             //
@@ -182,7 +282,6 @@ parameter CSR_OP_WRITE = 2'b01;
 parameter CSR_OP_SET   = 2'b10;
 parameter CSR_OP_CLEAR = 2'b11;
 
-
 // SPR for debugger, not accessible by CPU
 parameter SP_DVR0       = 16'h3000;
 parameter SP_DCR0       = 16'h3008;
@@ -194,7 +293,6 @@ parameter SP_DCR_MSB = 8'h01;
 parameter SP_DMR_MSB = 8'h02;
 parameter SP_DSR_MSB = 8'h04;
 
-
 ///////////////////////////////////////////////
 //   ___ ____    ____  _                     //
 //  |_ _|  _ \  / ___|| |_ __ _  __ _  ___   //
@@ -266,7 +364,6 @@ parameter JT_JAL  = 2'b01;
 parameter JT_JALR = 2'b10;
 parameter JT_COND = 2'b11;
 
-
 ///////////////////////////////////////////////
 //   ___ _____   ____  _                     //
 //  |_ _|  ___| / ___|| |_ __ _  __ _  ___   //
@@ -299,7 +396,6 @@ parameter EXC_OFF_ILLINSN  = 8'h84;
 parameter EXC_OFF_ECALL    = 8'h88;
 parameter EXC_OFF_LSUERR   = 8'h8c;
 
-
 // Debug module
 parameter DBG_SETS_W = 6;
 
diff --git a/load_check.sv b/load_check.sv
new file mode 100644
index 0000000..29811c9
--- /dev/null
+++ b/load_check.sv
@@ -0,0 +1,74 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer        Christian Palmiero - cp3025@columbia.edu                   //
+//                                                                            //
+// Design Name:    Load check                                                 //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    This unit raises an exception if a check is enabled in     //
+//                 the Tag Check Register and the tag bit of the              //
+//                 corresponding operand is set.                              //
+//                 This unit is dedicated to the LOAD operation               //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+
+import riscv_defines::*;
+`include "riscv_config.sv"
+
+module riscv_load_check
+(
+  input  logic        regfile_wdata_wb_i_tag,   // M[RS1+offset]: source tag
+  input  logic        rs1_i_tag,                // RS1: source address tag
+  input  logic        regfile_dest_tag,         // RD: destination tag
+  input  logic [31:0] tcr_i,                    // tcr register
+  input  logic        regfile_we_wb_i,
+  output logic        exception_o
+  `ifdef DIFT_H
+  ,
+  input  logic [31:0] thr_i,                    // thr register
+  input  logic [1:0]  regfile_wdata_wb_i_htag  // M[RS1+offset]: source hierarchic tag
+  `endif
+);
+
+  logic  check_s;
+  logic  check_sa;
+  logic  check_d;
+
+  assign check_s  = tcr_i[LOADSTORE_CHECK_S];
+  assign check_sa = tcr_i[LOADSTORE_CHECK_SA];
+  assign check_d  = tcr_i[LOADSTORE_CHECK_D];
+
+  logic exception_o_tag;
+  always_comb
+  begin
+    exception_o_tag     = 1'b0;
+    if (regfile_we_wb_i) begin
+      if ((regfile_wdata_wb_i_tag & check_s) || (rs1_i_tag & check_sa) || (regfile_dest_tag & check_d)) begin
+        exception_o_tag = 1'b1;
+      end else begin
+        exception_o_tag = 1'b0;
+      end
+    end
+  end
+
+  `ifdef DIFT_H
+  logic exception_o_h;
+  riscv_hierarchy_check hierarchy_check_i
+  (
+    .thr_i                        (thr_i),
+    .cmp_i                        (regfile_wdata_wb_i_htag),
+    .activate_hierarchy_check_i   (regfile_we_wb_i),
+    .exception_o                  (exception_o_h)
+  );
+  `endif
+
+  always_comb
+  begin 
+    `ifdef DIFT_H
+      exception_o = exception_o_h;
+    `else
+      exception_o = exception_o_tag;
+    `endif
+  end
+
+endmodule
diff --git a/load_propagation.sv b/load_propagation.sv
new file mode 100644
index 0000000..f5cbdeb
--- /dev/null
+++ b/load_propagation.sv
@@ -0,0 +1,60 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer        Christian Palmiero - cp3025@columbia.edu                   //
+//                                                                            //
+// Design Name:    Load propagation                                           //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    This unit reads the MODE and the ENABLE field of the       //
+//                 Tag Propagation Register and computes the destination tag. //
+//                 This unit is dedicated to the LOAD operation               //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+
+import riscv_defines::*;
+
+module riscv_load_propagation
+(
+  input  logic        regfile_wdata_wb_i_tag,  // M[RS1+offset]: source tag
+  input  logic        rs1_i_tag,               // RS1: source address tag
+  input  logic        regfile_we_wb_i,         // Register file port a write enable
+  input  logic [31:0] tpr_i,
+
+  output logic        regfile_dest_tag,        // RD: destination tag
+  output logic        regfile_enable_tag       // Register file port a write enable after reading TPR
+);
+
+  logic [ALU_MODE_WIDTH-1:0] alu_operator_mode;
+  logic enable_a;
+  logic enable_b;
+  logic operand_a;
+  logic operand_b;
+
+  assign alu_operator_mode = tpr_i[LOADSTORE_HIGH:LOADSTORE_LOW];
+  assign enable_a  = tpr_i[LOADSTORE_EN_SOURCE_ADDR];
+  assign enable_b  = tpr_i[LOADSTORE_EN_SOURCE];
+  assign operand_a = rs1_i_tag & enable_a;
+  assign operand_b = regfile_wdata_wb_i_tag & enable_b;
+
+  always_comb
+  begin
+    regfile_dest_tag     = 1'b0;
+    regfile_enable_tag   = 1'b0;
+    if (regfile_we_wb_i) begin
+      regfile_dest_tag   = 1'b0;
+      regfile_enable_tag = 1'b1;
+
+      unique case (alu_operator_mode)
+        // Standard Operations
+        ALU_MODE_OLD: begin
+          regfile_enable_tag = 1'b0;
+        end
+        ALU_MODE_AND:   regfile_dest_tag = operand_a & operand_b;
+        ALU_MODE_OR:    regfile_dest_tag = operand_a | operand_b;
+        ALU_MODE_CLEAR: regfile_dest_tag = '0;
+        default: ; // default case to suppress unique warning
+      endcase
+    end
+  end
+
+endmodule
diff --git a/load_store_unit.sv b/load_store_unit.sv
index 9383ad8..b871407 100644
--- a/load_store_unit.sv
+++ b/load_store_unit.sv
@@ -23,6 +23,7 @@
 //                                                                            //
 ////////////////////////////////////////////////////////////////////////////////
 
+`include "riscv_config.sv" // Inclure un fichier de configuration pour RISC-V
 
 module riscv_load_store_unit
 (
@@ -67,8 +68,38 @@ module riscv_load_store_unit
 
     input  logic         ex_valid_i,
     output logic         busy_o
+
+`ifdef DIFT // Tags à lire ou écrire
+    ,
+    output logic         data_we_o_tag,       // Activation d'écriture pour les tags
+    output logic         data_wdata_o_tag,    // Données à écrire pour les tags
+`ifdef DIFT_H
+    input  logic [5:0]   data_rdata_i_tag,    // Tags lus
+    output logic [1:0]   data_rdata_ex_o_htag, // Tag hiérarchique demandé lors du load
+`else
+    input  logic [3:0]   data_rdata_i_tag,    // Tags lus
+`endif
+    input  logic         data_we_ex_i_tag,    // Activation d'écriture pour les tags
+    input  logic         data_wdata_ex_i_tag, // Données à écrire pour les tags
+    output logic         data_rdata_ex_o_tag, // Tag demandé
+    input  logic         data_gnt_i_tag,      // Accord de données pour les tags
+    input  logic         data_rvalid_i_tag    // Données valides reçues pour les tags
+`endif
 );
 
+`ifdef DIFT
+  logic         data_we_q_tag;               // Activation d'écriture pour les tags
+  logic [3:0]   rdata_q_tag;                 // Maintient de la valeurs des 4 premiers tags
+
+`ifdef DIFT_H
+  logic [2:0]   rdata_offset_q_tag;          // Adresse de sélection des bits de tags à lire
+`else
+  logic [1:0]   rdata_offset_q_tag;          // Adresse de sélection des bits de tags à lire
+`endif
+
+  logic [1:0]   data_type_q_tag;             // Type de données pour les tags
+`endif
+
   logic [31:0]  data_addr_int;
 
   // registers for data_rdata alignment and sign extension
@@ -84,7 +115,6 @@ module riscv_load_store_unit
 
   logic         misaligned_st;   // high if we are currently performing the second part of a misaligned store
 
-
   enum logic [1:0]  { IDLE, WAIT_RVALID, WAIT_RVALID_EX_STALL, IDLE_EX_STALL } CS, NS;
 
   logic [31:0]  rdata_q;
@@ -155,12 +185,11 @@ module riscv_load_store_unit
       2'b01: data_wdata = {data_wdata_ex_i[23:0], data_wdata_ex_i[31:24]};
       2'b10: data_wdata = {data_wdata_ex_i[15:0], data_wdata_ex_i[31:16]};
       2'b11: data_wdata = {data_wdata_ex_i[ 7:0], data_wdata_ex_i[31: 8]};
-    endcase; // case (wdata_offset)
+endcase; // case (wdata_offset)
   end
 
-
   // FF for rdata alignment and sign-extension
-  always_ff @(posedge clk, negedge rst_n)
+  always @(posedge clk, negedge rst_n)
   begin
     if(rst_n == 1'b0)
     begin
@@ -178,6 +207,27 @@ module riscv_load_store_unit
     end
   end
 
+`ifdef DIFT
+  always @(posedge clk, negedge rst_n)
+  begin
+    if(rst_n == 1'b0)
+    begin
+      data_type_q_tag    <= '0;
+      data_we_q_tag      <= 1'b0;
+      rdata_offset_q_tag <= 1'b0;
+    end
+    else if (data_gnt_i_tag == 1'b1) // request was granted, we wait for rvalid and can continue to WB
+    begin
+      data_type_q_tag    <= data_type_ex_i;
+      data_we_q_tag      <= data_we_ex_i_tag;
+`ifdef DIFT_H_ca_marche_pas
+      rdata_offset_q_tag <= data_addr_int[2:0];
+`else
+      rdata_offset_q_tag <= data_addr_int[1:0];
+`endif
+    end
+  end
+`endif
 
   ////////////////////////////////////////////////////////////////////////
   //  ____  _               _____      _                 _              //
@@ -290,9 +340,7 @@ module riscv_load_store_unit
     endcase //~case(rdata_type_q)
   end
 
-
-
-  always_ff @(posedge clk, negedge rst_n)
+  always @(posedge clk, negedge rst_n)
   begin
     if(rst_n == 1'b0)
     begin
@@ -311,9 +359,9 @@ module riscv_load_store_unit
         // In all other cases, rdata_q gets the value that we are
         // writing to the register file
         if ((data_misaligned_ex_i == 1'b1) || (data_misaligned_o == 1'b1))
-          rdata_q  <= data_rdata_i;
+          rdata_q      <= data_rdata_i;
         else
-          rdata_q  <= data_rdata_ext;
+          rdata_q      <= data_rdata_ext;
       end
     end
   end
@@ -321,12 +369,251 @@ module riscv_load_store_unit
   // output to register file
   assign data_rdata_ex_o = (data_rvalid_i == 1'b1) ? data_rdata_ext : rdata_q;
 
+`ifdef DIFT
+  
+`ifdef DIFT_H
+  assign data_rdata_ex_o_htag = 2'b00;
+  logic [5:0] data_rdata_ext_tag;
+
+  logic [5:0] rdata_w_ext_tag;
+  logic [5:0] rdata_h_ext_tag;
+  logic [5:0] rdata_b_ext_tag;
+
+  always_comb
+  begin
+    case (rdata_offset_q_tag)
+      3'b001: rdata_w_ext_tag = { data_rdata_i_tag[5:4], data_rdata_i_tag[0],   rdata_q_tag[3:1] };
+      3'b010: rdata_w_ext_tag = { data_rdata_i_tag[5:4], data_rdata_i_tag[1:0], rdata_q_tag[3:2] };
+      3'b011: rdata_w_ext_tag = { data_rdata_i_tag[5:4], data_rdata_i_tag[2:0], rdata_q_tag[3]   };
+      default: rdata_w_ext_tag = data_rdata_i_tag[5:0];
+    endcase
+  end
+
+  always_comb
+  begin
+    case (rdata_offset_q_tag)
+      3'b000:
+      begin
+        rdata_h_ext_tag = {4'b0000, data_rdata_i_tag[1:0]}; // Sélectionner les bits [1:0] de data_rdata_i_tag
+      end
+
+      3'b001:
+      begin
+        rdata_h_ext_tag = {4'b0000, data_rdata_i_tag[2:1]}; // Sélectionner les bits [2:1] de data_rdata_i_tag
+      end
+
+      3'b010:
+      begin
+        rdata_h_ext_tag = {4'b0000, data_rdata_i_tag[3:2]}; // Sélectionner les bits [3:2] de data_rdata_i_tag
+      end
+
+      3'b011:
+      begin
+        rdata_h_ext_tag = {4'b0000, data_rdata_i_tag[0], rdata_q_tag[3]}; // Sélectionner le bit 0 de data_rdata_i_tag et le bit 3 de rdata_q_tag
+      end
+
+      3'b100, 3'b101:
+      begin
+        rdata_h_ext_tag = {4'b0000, data_rdata_i_tag[5:4]};
+      end
+
+      default:
+      begin
+        rdata_h_ext_tag = 6'b000000;
+      end
+    endcase
+  end
+
+  always_comb // Sélectionner un bit de data_rdata_i_tag pour rdata_b_ext_tag
+  begin
+    case (rdata_offset_q_tag)
+      3'b00:
+      begin
+        rdata_b_ext_tag = {5'b00000, data_rdata_i_tag[0]};
+      end
+
+      3'b001:
+      begin
+        rdata_b_ext_tag = {5'b00000, data_rdata_i_tag[1]};
+      end
+
+      3'b010:
+      begin
+        rdata_b_ext_tag = {5'b00000, data_rdata_i_tag[2]};
+      end
+
+      3'b011:
+      begin
+        rdata_b_ext_tag = {5'b00000, data_rdata_i_tag[3]};
+      end
+
+      3'b100:
+      begin
+        rdata_b_ext_tag = {5'b00000, data_rdata_i_tag[4]};
+      end
+
+      3'b101:
+      begin
+        rdata_b_ext_tag = {5'b00000, data_rdata_i_tag[5]};
+      end
+
+      default:
+      begin
+        rdata_b_ext_tag = 6'b000000;
+      end
+    endcase
+  end
+
+  always_comb
+  begin
+    case (data_type_q_tag)
+      3'b000:       data_rdata_ext_tag = rdata_w_ext_tag;
+      3'b001:       data_rdata_ext_tag = rdata_h_ext_tag;
+      3'b010,3'b011: data_rdata_ext_tag = rdata_b_ext_tag;
+      3'b100:       data_rdata_ext_tag = rdata_h_ext_tag;
+      3'b101:       data_rdata_ext_tag = rdata_b_ext_tag;
+    endcase
+  end
+
+  always @(posedge clk, negedge rst_n)
+  begin
+    if(rst_n == 1'b0)
+    begin
+      CS            <= IDLE;
+      rdata_q_tag   <= '0;
+    end
+    else
+    begin
+      CS            <= NS;
+      if (data_rvalid_i_tag && (~data_we_q_tag))
+      begin
+        // if we have detected a misaligned access, and we are
+        // currently doing the first part of this access, then
+        // store the data coming from memory in rdata_q.
+        // In all other cases, rdata_q gets the value that we are
+        // writing to the register file
+        if ((data_misaligned_ex_i == 1'b1) || (data_misaligned_o == 1'b1))
+          rdata_q_tag  <= |(data_rdata_i_tag[3:0]);
+        else
+          rdata_q_tag  <= |(data_rdata_ext_tag[3:0]);
+      end
+    end
+  end
+`else
+  logic [3:0] data_rdata_ext_tag;
+
+  logic [3:0] rdata_w_ext_tag;
+  logic [3:0] rdata_h_ext_tag;
+  logic [3:0] rdata_b_ext_tag;
+
+  always_comb
+  begin
+    case (rdata_offset_q_tag)
+      2'b00: rdata_w_ext_tag = data_rdata_i_tag[3:0];
+      2'b01: rdata_w_ext_tag = {data_rdata_i_tag[0],   rdata_q_tag[3:1]};
+      2'b10: rdata_w_ext_tag = {data_rdata_i_tag[1:0], rdata_q_tag[3:2]};
+      2'b11: rdata_w_ext_tag = {data_rdata_i_tag[2:0], rdata_q_tag[3]};
+    endcase
+  end
+
+  always_comb
+  begin
+    case (rdata_offset_q_tag)
+      2'b00:
+      begin
+        rdata_h_ext_tag = {2'b00, data_rdata_i_tag[1:0]};
+      end
+
+      2'b01:
+      begin
+        rdata_h_ext_tag = {2'b00, data_rdata_i_tag[2:1]};
+      end
+
+      2'b10:
+      begin
+        rdata_h_ext_tag = {2'b00, data_rdata_i_tag[3:2]};
+      end
+
+      2'b11:
+      begin
+        rdata_h_ext_tag = {2'b00, data_rdata_i_tag[0], rdata_q_tag[3]};
+      end
+    endcase
+  end
+
+  always_comb
+  begin
+    case (rdata_offset_q_tag)
+      2'b00:
+      begin
+        rdata_b_ext_tag = {2'b00, data_rdata_i_tag[0]};
+      end
+
+      2'b01: begin
+        rdata_b_ext_tag = {2'b00, data_rdata_i_tag[1]};
+      end
+
+      2'b10:
+      begin
+        rdata_b_ext_tag = {2'b00, data_rdata_i_tag[2]};
+      end
+
+      2'b11:
+      begin
+        rdata_b_ext_tag = {2'b00, data_rdata_i_tag[3]};
+      end
+    endcase
+  end
+
+  always_comb
+  begin
+    case (data_type_q_tag)
+      2'b00:       data_rdata_ext_tag = rdata_w_ext_tag;
+      2'b01:       data_rdata_ext_tag = rdata_h_ext_tag;
+      2'b10,2'b11: data_rdata_ext_tag = rdata_b_ext_tag;
+    endcase
+  end
+
+  always @(posedge clk, negedge rst_n)
+  begin
+    if(rst_n == 1'b0)
+    begin
+      CS            <= IDLE;
+      rdata_q_tag   <= '0;
+    end
+    else
+    begin
+      CS            <= NS;
+      if (data_rvalid_i_tag && (~data_we_q_tag))
+      begin
+        // if we have detected a misaligned access, and we are
+        // currently doing the first part of this access, then
+        // store the data coming from memory in rdata_q.
+        // In all other cases, rdata_q gets the value that we are
+        // writing to the register file
+        if ((data_misaligned_ex_i == 1'b1) || (data_misaligned_o == 1'b1))
+          rdata_q_tag  <= |data_rdata_i_tag;
+        else
+          rdata_q_tag  <= |data_rdata_ext_tag;
+      end
+    end
+  end
+`endif
+
+  assign data_rdata_ex_o_tag = (data_rvalid_i_tag == 1'b1) ? |data_rdata_ext_tag : rdata_q_tag;
+`endif
+
   // output to data interface
   assign data_addr_o   = data_addr_int;
   assign data_wdata_o  = data_wdata;
   assign data_we_o     = data_we_ex_i;
   assign data_be_o     = data_be;
 
+`ifdef DIFT
+  assign data_wdata_o_tag = data_wdata_ex_i_tag;
+  assign data_we_o_tag    = data_we_ex_i_tag;
+`endif
+
   assign misaligned_st = data_misaligned_ex_i;
 
   assign load_err_o    = data_gnt_i && data_err_i && data_we_o;
diff --git a/load_store_unit.sv.bak b/load_store_unit.sv.bak
new file mode 100644
index 0000000..fd2e95b
--- /dev/null
+++ b/load_store_unit.sv.bak
@@ -0,0 +1,629 @@
+// Copyright 2015 ETH Zurich and University of Bologna.
+// Copyright and related rights are licensed under the Solderpad Hardware
+// License, Version 0.51 (the “License”); you may not use this file except in
+// compliance with the License.  You may obtain a copy of the License at
+// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
+// or agreed to in writing, software, hardware and materials distributed under
+// this License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR
+// CONDITIONS OF ANY KIND, either express or implied. See the License for the
+// specific language governing permissions and limitations under the License.
+
+////////////////////////////////////////////////////////////////////////////////
+// Engineer:       Igor Loi - igor.loi@unibo.it                               //
+//                                                                            //
+// Additional contributions by:                                               //
+//                 Andreas Traber - atraber@iis.ee.ethz.ch                    //
+//                                                                            //
+// Design Name:    Load Store Unit                                            //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    Load Store Unit, used to eliminate multiple access during  //
+//                 processor stalls, and to align bytes and halfwords         //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+
+`include "riscv_config.sv"
+
+module riscv_load_store_unit
+(
+    input  logic         clk,
+    input  logic         rst_n,
+
+    // output to data memory
+    output logic         data_req_o,
+    input  logic         data_gnt_i,
+    input  logic         data_rvalid_i,
+    input  logic         data_err_i,
+
+    output logic [31:0]  data_addr_o,
+    output logic         data_we_o,
+    output logic [3:0]   data_be_o,
+    output logic [31:0]  data_wdata_o,
+    input  logic [31:0]  data_rdata_i,
+
+    // signals from ex stage
+    input  logic         data_we_ex_i,         // write enable                      -> from ex stage
+    input  logic [1:0]   data_type_ex_i,       // Data type word, halfword, byte    -> from ex stage
+    input  logic [31:0]  data_wdata_ex_i,      // data to write to memory           -> from ex stage
+    input  logic [1:0]   data_reg_offset_ex_i, // offset inside register for stores -> from ex stage
+    input  logic         data_sign_ext_ex_i,   // sign extension                    -> from ex stage
+
+    output logic [31:0]  data_rdata_ex_o,      // requested data                    -> to ex stage
+    input  logic         data_req_ex_i,        // data request                      -> from ex stage
+    input  logic [31:0]  operand_a_ex_i,       // operand a from RF for address     -> from ex stage
+    input  logic [31:0]  operand_b_ex_i,       // operand b from RF for address     -> from ex stage
+    input  logic         addr_useincr_ex_i,    // use a + b or just a for address   -> from ex stage
+
+    input  logic         data_misaligned_ex_i, // misaligned access in last ld/st   -> from ID/EX pipeline
+    output logic         data_misaligned_o,    // misaligned access was detected    -> to controller
+
+    // exception signals
+    output logic         load_err_o,
+    output logic         store_err_o,
+
+    // stall signal
+    output logic         lsu_ready_ex_o, // LSU ready for new data in EX stage
+    output logic         lsu_ready_wb_o, // LSU ready for new data in WB stage
+
+    input  logic         ex_valid_i,
+    output logic         busy_o
+
+`ifdef DIFT //Tags à lire ou écrire
+    ,
+    output logic         data_we_o_tag,
+    output logic         data_wdata_o_tag,
+    input  logic [3:0]   data_rdata_i_tag,
+    input  logic         data_we_ex_i_tag,
+    input  logic         data_wdata_ex_i_tag,
+    output logic         data_rdata_ex_o_tag,
+    input  logic         data_gnt_i_tag,
+    input  logic         data_rvalid_i_tag
+`endif
+);
+
+`ifdef DIFT
+  logic         data_we_q_tag;
+  logic [3:0]   rdata_q_tag;
+  logic [1:0]   rdata_offset_q_tag;
+  logic [1:0]   data_type_q_tag;
+`endif
+
+  logic [31:0]  data_addr_int;
+
+  // registers for data_rdata alignment and sign extension
+  logic [1:0]   data_type_q;
+  logic [1:0]   rdata_offset_q;
+  logic         data_sign_ext_q;
+  logic         data_we_q;
+
+  logic [1:0]   wdata_offset;   // mux control for data to be written to memory
+
+  logic [3:0]   data_be;
+  logic [31:0]  data_wdata;
+
+  logic         misaligned_st;   // high if we are currently performing the second part of a misaligned store
+
+  enum logic [1:0]  { IDLE, WAIT_RVALID, WAIT_RVALID_EX_STALL, IDLE_EX_STALL } CS, NS;
+
+  logic [31:0]  rdata_q;
+
+  ///////////////////////////////// BE generation ////////////////////////////////
+  always_comb
+  begin
+    case (data_type_ex_i) // Data type 00 Word, 01 Half word, 11,10 byte
+      2'b00:
+      begin // Writing a word
+        if (misaligned_st == 1'b0)
+        begin // non-misaligned case
+          case (data_addr_int[1:0])
+            2'b00: data_be = 4'b1111;
+            2'b01: data_be = 4'b1110;
+            2'b10: data_be = 4'b1100;
+            2'b11: data_be = 4'b1000;
+          endcase; // case (data_addr_int[1:0])
+        end
+        else
+        begin // misaligned case
+          case (data_addr_int[1:0])
+            2'b00: data_be = 4'b0000; // this is not used, but included for completeness
+            2'b01: data_be = 4'b0001;
+            2'b10: data_be = 4'b0011;
+            2'b11: data_be = 4'b0111;
+          endcase; // case (data_addr_int[1:0])
+        end
+      end
+
+      2'b01:
+      begin // Writing a half word
+        if (misaligned_st == 1'b0)
+        begin // non-misaligned case
+          case (data_addr_int[1:0])
+            2'b00: data_be = 4'b0011;
+            2'b01: data_be = 4'b0110;
+            2'b10: data_be = 4'b1100;
+            2'b11: data_be = 4'b1000;
+          endcase; // case (data_addr_int[1:0])
+        end
+        else
+        begin // misaligned case
+          data_be = 4'b0001;
+        end
+      end
+
+      2'b10,
+      2'b11: begin // Writing a byte
+        case (data_addr_int[1:0])
+          2'b00: data_be = 4'b0001;
+          2'b01: data_be = 4'b0010;
+          2'b10: data_be = 4'b0100;
+          2'b11: data_be = 4'b1000;
+        endcase; // case (data_addr_int[1:0])
+      end
+    endcase; // case (data_type_ex_i)
+  end
+
+  // prepare data to be written to the memory
+  // we handle misaligned accesses, half word and byte accesses and
+  // register offsets here
+  assign wdata_offset = data_addr_int[1:0] - data_reg_offset_ex_i[1:0];
+  always_comb
+  begin
+    case (wdata_offset)
+      2'b00: data_wdata = data_wdata_ex_i[31:0];
+      2'b01: data_wdata = {data_wdata_ex_i[23:0], data_wdata_ex_i[31:24]};
+      2'b10: data_wdata = {data_wdata_ex_i[15:0], data_wdata_ex_i[31:16]};
+      2'b11: data_wdata = {data_wdata_ex_i[ 7:0], data_wdata_ex_i[31: 8]};
+    endcase; // case (wdata_offset)
+  end
+
+  // FF for rdata alignment and sign-extension
+  always_ff @(posedge clk, negedge rst_n)
+  begin
+    if(rst_n == 1'b0)
+    begin
+      data_type_q     <= '0;
+      rdata_offset_q  <= '0;
+      data_sign_ext_q <= '0;
+      data_we_q       <= 1'b0;
+    end
+    else if (data_gnt_i == 1'b1) // request was granted, we wait for rvalid and can continue to WB
+    begin
+      data_type_q     <= data_type_ex_i;
+      rdata_offset_q  <= data_addr_int[1:0];
+      data_sign_ext_q <= data_sign_ext_ex_i;
+      data_we_q       <= data_we_ex_i;
+    end
+  end
+
+`ifdef DIFT
+  always_ff @(posedge clk, negedge rst_n)
+  begin
+    if(rst_n == 1'b0)
+    begin
+      data_type_q_tag    <= '0;
+      data_we_q_tag      <= 1'b0;
+      rdata_offset_q_tag <= 1'b0;
+    end
+    else if (data_gnt_i_tag == 1'b1) // request was granted, we wait for rvalid and can continue to WB
+    begin
+      data_type_q_tag    <= data_type_ex_i;
+      data_we_q_tag      <= data_we_ex_i_tag;
+      rdata_offset_q_tag <= data_addr_int[1:0];
+    end
+  end
+`endif
+
+  ////////////////////////////////////////////////////////////////////////
+  //  ____  _               _____      _                 _              //
+  // / ___|(_) __ _ _ __   | ____|_  _| |_ ___ _ __  ___(_) ___  _ __   //
+  // \___ \| |/ _` | '_ \  |  _| \ \/ / __/ _ \ '_ \/ __| |/ _ \| '_ \  //
+  //  ___) | | (_| | | | | | |___ >  <| ||  __/ | | \__ \ | (_) | | | | //
+  // |____/|_|\__, |_| |_| |_____/_/\_\\__\___|_| |_|___/_|\___/|_| |_| //
+  //          |___/                                                     //
+  ////////////////////////////////////////////////////////////////////////
+
+  logic [31:0] data_rdata_ext;
+
+  logic [31:0] rdata_w_ext; // sign extension for words, actually only misaligned assembly
+  logic [31:0] rdata_h_ext; // sign extension for half words
+  logic [31:0] rdata_b_ext; // sign extension for bytes
+
+  // take care of misaligned words
+  always_comb
+  begin
+    case (rdata_offset_q)
+      2'b00: rdata_w_ext = data_rdata_i[31:0];
+      2'b01: rdata_w_ext = {data_rdata_i[ 7:0], rdata_q[31:8]};
+      2'b10: rdata_w_ext = {data_rdata_i[15:0], rdata_q[31:16]};
+      2'b11: rdata_w_ext = {data_rdata_i[23:0], rdata_q[31:24]};
+    endcase
+  end
+
+  // sign extension for half words
+  always_comb
+  begin
+    case (rdata_offset_q)
+      2'b00:
+      begin
+        if (data_sign_ext_q == 1'b0)
+          rdata_h_ext = {16'h0000, data_rdata_i[15:0]};
+        else
+          rdata_h_ext = {{16{data_rdata_i[15]}}, data_rdata_i[15:0]};
+      end
+
+      2'b01:
+      begin
+        if (data_sign_ext_q == 1'b0)
+          rdata_h_ext = {16'h0000, data_rdata_i[23:8]};
+        else
+          rdata_h_ext = {{16{data_rdata_i[23]}}, data_rdata_i[23:8]};
+      end
+
+      2'b10:
+      begin
+        if (data_sign_ext_q == 1'b0)
+          rdata_h_ext = {16'h0000, data_rdata_i[31:16]};
+        else
+          rdata_h_ext = {{16{data_rdata_i[31]}}, data_rdata_i[31:16]};
+      end
+
+      2'b11:
+      begin
+        if (data_sign_ext_q == 1'b0)
+          rdata_h_ext = {16'h0000, data_rdata_i[7:0], rdata_q[31:24]};
+        else
+          rdata_h_ext = {{16{data_rdata_i[7]}}, data_rdata_i[7:0], rdata_q[31:24]};
+      end
+    endcase // case (rdata_offset_q)
+  end
+
+  // sign extension for bytes
+  always_comb
+  begin
+    case (rdata_offset_q)
+      2'b00:
+      begin
+        if (data_sign_ext_q == 1'b0)
+          rdata_b_ext = {24'h00_0000, data_rdata_i[7:0]};
+        else
+          rdata_b_ext = {{24{data_rdata_i[7]}}, data_rdata_i[7:0]};
+      end
+
+      2'b01: begin
+        if (data_sign_ext_q == 1'b0)
+          rdata_b_ext = {24'h00_0000, data_rdata_i[15:8]};
+        else
+          rdata_b_ext = {{24{data_rdata_i[15]}}, data_rdata_i[15:8]};
+      end
+
+      2'b10:
+      begin
+        if (data_sign_ext_q == 1'b0)
+          rdata_b_ext = {24'h00_0000, data_rdata_i[23:16]};
+        else
+          rdata_b_ext = {{24{data_rdata_i[23]}}, data_rdata_i[23:16]};
+      end
+
+      2'b11:
+      begin
+        if (data_sign_ext_q == 1'b0)
+          rdata_b_ext = {24'h00_0000, data_rdata_i[31:24]};
+        else
+          rdata_b_ext = {{24{data_rdata_i[31]}}, data_rdata_i[31:24]};
+      end
+    endcase // case (rdata_offset_q)
+  end
+
+  // select word, half word or byte sign extended version
+  always_comb
+  begin
+    case (data_type_q)
+      2'b00:       data_rdata_ext = rdata_w_ext;
+      2'b01:       data_rdata_ext = rdata_h_ext;
+      2'b10,2'b11: data_rdata_ext = rdata_b_ext;
+    endcase //~case(rdata_type_q)
+  end
+
+  always @(posedge clk, negedge rst_n)
+  begin
+    if(rst_n == 1'b0)
+    begin
+      CS            <= IDLE;
+      rdata_q       <= '0;
+    end
+    else
+    begin
+      CS            <= NS;
+
+      if (data_rvalid_i && (~data_we_q))
+      begin
+        // if we have detected a misaligned access, and we are
+        // currently doing the first part of this access, then
+        // store the data coming from memory in rdata_q.
+        // In all other cases, rdata_q gets the value that we are
+        // writing to the register file
+        if ((data_misaligned_ex_i == 1'b1) || (data_misaligned_o == 1'b1))
+          rdata_q      <= data_rdata_i;
+        else
+          rdata_q      <= data_rdata_ext;
+      end
+    end
+  end
+
+  // output to register file
+  assign data_rdata_ex_o = (data_rvalid_i == 1'b1) ? data_rdata_ext : rdata_q;
+
+`ifdef DIFT
+  logic [3:0] data_rdata_ext_tag;
+
+  logic [3:0] rdata_w_ext_tag;
+  logic [3:0] rdata_h_ext_tag;
+  logic [3:0] rdata_b_ext_tag;
+
+  always_comb
+  begin
+    case (rdata_offset_q_tag)
+      2'b00: rdata_w_ext_tag = data_rdata_i_tag[3:0];
+      2'b01: rdata_w_ext_tag = {data_rdata_i_tag[0],   rdata_q_tag[3:1]};
+      2'b10: rdata_w_ext_tag = {data_rdata_i_tag[1:0], rdata_q_tag[3:2]};
+      2'b11: rdata_w_ext_tag = {data_rdata_i_tag[2:0], rdata_q_tag[3]};
+    endcase
+  end
+
+  always_comb
+  begin
+    case (rdata_offset_q_tag)
+      2'b00:
+      begin
+        rdata_h_ext_tag = {2'b00, data_rdata_i_tag[1:0]};
+      end
+
+      2'b01:
+      begin
+        rdata_h_ext_tag = {2'b00, data_rdata_i_tag[2:1]};
+      end
+
+      2'b10:
+      begin
+        rdata_h_ext_tag = {2'b00, data_rdata_i_tag[3:2]};
+      end
+
+      2'b11:
+      begin
+        rdata_h_ext_tag = {2'b00, data_rdata_i_tag[0], rdata_q_tag[3]};
+      end
+    endcase
+  end
+
+  always_comb
+  begin
+    case (rdata_offset_q_tag)
+      2'b00:
+      begin
+        rdata_b_ext_tag = {3'b000, data_rdata_i_tag[0]};
+      end
+
+      2'b01: begin
+        rdata_b_ext_tag = {3'b000, data_rdata_i_tag[1]};
+      end
+
+      2'b10:
+      begin
+        rdata_b_ext_tag = {3'b000, data_rdata_i_tag[2]};
+      end
+
+      2'b11:
+      begin
+        rdata_b_ext_tag = {3'b000, data_rdata_i_tag[3]};
+      end
+    endcase
+  end
+
+  always_comb
+  begin
+    case (data_type_q_tag)
+      2'b00:       data_rdata_ext_tag = rdata_w_ext_tag;
+      2'b01:       data_rdata_ext_tag = rdata_h_ext_tag;
+      2'b10,2'b11: data_rdata_ext_tag = rdata_b_ext_tag;
+    endcase
+  end
+
+  always_ff @(posedge clk, negedge rst_n)
+  begin
+    if(rst_n == 1'b0)
+    begin
+      CS            <= IDLE;
+      rdata_q_tag   <= '0;
+    end
+    else
+    begin
+      CS            <= NS;
+      if (data_rvalid_i_tag && (~data_we_q_tag))
+      begin
+        // if we have detected a misaligned access, and we are
+        // currently doing the first part of this access, then
+        // store the data coming from memory in rdata_q.
+        // In all other cases, rdata_q gets the value that we are
+        // writing to the register file
+        if ((data_misaligned_ex_i == 1'b1) || (data_misaligned_o == 1'b1))
+          rdata_q_tag  <= |data_rdata_i_tag;
+        else
+          rdata_q_tag  <= |data_rdata_ext_tag;
+      end
+    end
+  end
+
+  assign data_rdata_ex_o_tag = (data_rvalid_i_tag == 1'b1) ? |data_rdata_ext_tag : rdata_q_tag;
+`endif
+
+  // output to data interface
+  assign data_addr_o   = data_addr_int;
+  assign data_wdata_o  = data_wdata;
+  assign data_we_o     = data_we_ex_i;
+  assign data_be_o     = data_be;
+
+`ifdef DIFT
+  assign data_wdata_o_tag = data_wdata_ex_i_tag;
+  assign data_we_o_tag    = data_we_ex_i_tag;
+`endif
+
+  assign misaligned_st = data_misaligned_ex_i;
+
+  assign load_err_o    = data_gnt_i && data_err_i && data_we_o;
+  assign store_err_o   = data_gnt_i && data_err_i && data_we_o;
+
+  // FSM
+  always_comb
+  begin
+    NS             = CS;
+
+    data_req_o     = 1'b0;
+
+    lsu_ready_ex_o = 1'b1;
+    lsu_ready_wb_o = 1'b1;
+
+    case(CS)
+      // starts from not active and stays in IDLE until request was granted
+      IDLE:
+      begin
+        data_req_o = data_req_ex_i;
+
+        if(data_req_ex_i) begin
+          lsu_ready_ex_o = 1'b0;
+
+          if(data_gnt_i) begin
+            lsu_ready_ex_o = 1'b1;
+
+            if (ex_valid_i)
+              NS = WAIT_RVALID;
+            else
+              NS = WAIT_RVALID_EX_STALL;
+          end
+        end
+      end //~ IDLE
+
+      // wait for rvalid in WB stage and send a new request if there is any
+      WAIT_RVALID:
+      begin
+        lsu_ready_wb_o = 1'b0;
+
+        if (data_rvalid_i) begin
+          // we don't have to wait for anything here as we are the only stall
+          // source for the WB stage
+          lsu_ready_wb_o = 1'b1;
+
+          data_req_o = data_req_ex_i;
+
+          if (data_req_ex_i) begin
+            lsu_ready_ex_o = 1'b0;
+
+            if (data_gnt_i) begin
+              lsu_ready_ex_o = 1'b1;
+
+              if(ex_valid_i)
+                NS = WAIT_RVALID;
+              else
+                NS = WAIT_RVALID_EX_STALL;
+            end else begin
+              NS = IDLE;
+            end
+          end else begin
+            if (data_rvalid_i) begin
+              // no request, so go to IDLE
+              NS = IDLE;
+            end
+          end
+        end
+      end
+
+      // wait for rvalid while still in EX stage
+      // we end up here when there was an EX stall, so in this cycle we just
+      // wait and don't send new requests
+      WAIT_RVALID_EX_STALL:
+      begin
+        data_req_o = 1'b0;
+
+        if (data_rvalid_i) begin
+          if (ex_valid_i) begin
+            // we are done and can go back to idle
+            // the data is safely stored already
+            NS = IDLE;
+          end else begin
+            // we have to wait until ex_stall is deasserted
+            NS = IDLE_EX_STALL;
+          end
+        end else begin
+          // we didn't yet receive the rvalid, so we check the ex_stall
+          // signal. If we are no longer stalled we can change to the "normal"
+          // WAIT_RVALID state
+          if (ex_valid_i)
+            NS = WAIT_RVALID;
+        end
+      end
+
+      IDLE_EX_STALL:
+      begin
+        // wait for us to be unstalled and then change back to IDLE state
+        if (ex_valid_i) begin
+          NS = IDLE;
+        end
+      end
+
+      default: begin
+        NS = IDLE;
+      end
+    endcase
+  end
+
+  // check for misaligned accesses that need a second memory access
+  // If one is detected, this is signaled with data_misaligned_o to
+  // the controller which selectively stalls the pipeline
+  always_comb
+  begin
+    data_misaligned_o = 1'b0;
+
+    if((data_req_ex_i == 1'b1) && (data_misaligned_ex_i == 1'b0))
+    begin
+      case (data_type_ex_i)
+        2'b00: // word
+        begin
+          if(data_addr_int[1:0] != 2'b00)
+            data_misaligned_o = 1'b1;
+        end
+        2'b01: // half word
+        begin
+          if(data_addr_int[1:0] == 2'b11)
+            data_misaligned_o = 1'b1;
+        end
+      endcase // case (data_type_ex_i)
+    end
+  end
+
+  // generate address from operands
+  assign data_addr_int = (addr_useincr_ex_i) ? (operand_a_ex_i + operand_b_ex_i) : operand_a_ex_i;
+
+  assign busy_o = (CS == WAIT_RVALID) || (CS == WAIT_RVALID_EX_STALL) || (CS == IDLE_EX_STALL) || (data_req_o == 1'b1);
+
+
+  //////////////////////////////////////////////////////////////////////////////
+  // Assertions
+  //////////////////////////////////////////////////////////////////////////////
+
+  // make sure there is no new request when the old one is not yet completely done
+  // i.e. it should not be possible to get a grant without an rvalid for the
+  // last request
+  assert property (
+    @(posedge clk) ((CS == WAIT_RVALID) && (data_gnt_i == 1'b1)) |-> (data_rvalid_i == 1'b1) );
+
+  // there should be no rvalid when we are in IDLE
+  assert property (
+    @(posedge clk) (CS == IDLE) |-> (data_rvalid_i == 1'b0) );
+
+  // assert that errors are only sent at the same time as grant
+  assert property ( @(posedge clk) (data_err_i) |-> (data_gnt_i) );
+
+  // assert that the address does not contain X when request is sent
+  assert property ( @(posedge clk) (data_req_o) |-> (!$isunknown(data_addr_o)) );
+
+endmodule
diff --git a/mode_tag.sv b/mode_tag.sv
new file mode 100644
index 0000000..028da9e
--- /dev/null
+++ b/mode_tag.sv
@@ -0,0 +1,284 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer        Christian Palmiero - cp3025@columbia.edu                   //
+//                                                                            //
+// Design Name:    Mode tag                                                   //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    Mode decoder                                               //
+//                 This unit reads the MODE field of the Tag Propagation      //
+//                 Register and sends the proper signals to the EX stage      //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+
+import riscv_defines::*;
+`include "riscv_config.sv" // Inclure un fichier de configuration pour RISC-V
+
+
+module riscv_mode_tag
+(
+  // From IF/ID pipeline
+  input  logic [31:0] instr_rdata_i,
+
+  // From CSRs
+  input  logic [31:0] tpr_i,
+
+  // ALU signals
+  output logic [ALU_MODE_WIDTH-1:0] alu_operator_o_mode,
+  output logic                      register_set_o,
+  output logic                      is_store_post_o,
+  output logic                      memory_set_o
+
+  `ifdef DIFT_H
+  ,
+  input  logic [31:0]               thr_i,
+  output logic                      memory_set_hierarchy_o,
+  output logic [1:0]                hierarchy_tag_o
+  `endif
+);
+
+  always_comb
+  begin
+    alu_operator_o_mode          = ALU_MODE_OLD;
+    register_set_o               = 1'b0;
+    memory_set_o                 = 1'b0;
+    is_store_post_o              = 1'b0;
+    memory_set_hierarchy_o       = 1'b0; 
+    hierarchy_tag_o              = 2'b00;
+
+    unique case (instr_rdata_i[6:0])
+
+      ////////////////////////////////
+      //      _ _   _ __  __ ____   //
+      //     | | | | |  \/  |  _ \  //
+      //  _  | | | | | |\/| | |_) | //
+      // | |_| | |_| | |  | |  __/  //
+      //  \___/ \___/|_|  |_|_|     //
+      //                            //
+      ////////////////////////////////
+
+      OPCODE_JAL,
+      OPCODE_JALR: begin   // Jump and Link
+        alu_operator_o_mode  = tpr_i[JUMP_HIGH:JUMP_LOW];
+      end
+
+     //////////////////////////////////////////////
+     //  ____  ____      _    _   _  ____ _   _  //
+     // | __ )|  _ \    / \  | \ | |/ ___| | | | //
+     // |  _ \| |_) |  / _ \ |  \| | |   | |_| | //
+     // | |_) |  _ <  / ___ \| |\  | |___|  _  | //
+     // |____/|_| \_\/_/   \_\_| \_|\____|_| |_| //
+     //                                          //
+     //////////////////////////////////////////////
+
+      OPCODE_BRANCH: begin // Branch
+        alu_operator_o_mode  = tpr_i[BRANCH_HIGH:BRANCH_LOW];
+      end
+
+      //////////////////////////////////
+      //  _     ____    ______ _____  //
+      // | |   |  _ \  / / ___|_   _| //
+      // | |   | | | |/ /\___ \ | |   //
+      // | |___| |_| / /  ___) || |   //
+      // |_____|____/_/  |____/ |_|   //
+      //                              //
+      //////////////////////////////////
+
+      OPCODE_STORE
+      : begin
+          alu_operator_o_mode  = tpr_i[LOADSTORE_HIGH:LOADSTORE_LOW];
+      end
+
+      OPCODE_STORE_POST
+      : begin
+        alu_operator_o_mode  = tpr_i[LOADSTORE_HIGH:LOADSTORE_LOW];
+        is_store_post_o      = 1'b1;
+      end
+
+      OPCODE_LUI,
+      OPCODE_AUIPC
+      : begin
+        alu_operator_o_mode  = tpr_i[LOADSTORE_HIGH:LOADSTORE_LOW];
+      end
+
+      OPCODE_LOAD
+      //OPCODE_LOAD_POST,
+      : begin
+        alu_operator_o_mode  = ALU_MODE_OLD;
+      end
+
+      /////////////////////////////////////////////////////////////////////////////////
+      //   ___ _____ _   _ _____ ____     ____ _        _    ____ ____  _____ ____   //
+      //  / _ \_   _| | | | ____|  _ \   / ___| |      / \  / ___/ ___|| ____/ ___|  //
+      // | | | || | | |_| |  _| | |_) | | |   | |     / _ \ \___ \___ \|  _| \___ \  //
+      // | |_| || | |  _  | |___|  _ <  | |___| |___ / ___ \ ___) |__) | |___ ___) | //
+      //  \___/ |_| |_| |_|_____|_| \_\  \____|_____/_/   \_\____/____/|_____|____/  //
+      //                                                                             //
+      /////////////////////////////////////////////////////////////////////////////////
+
+      OPCODE_OPIMM: begin
+        unique case (instr_rdata_i[14:12])
+          3'b000: begin  // ADDI
+            alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+          end
+          3'b001: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000: begin // SLLI
+                alu_operator_o_mode  = tpr_i[SHIFT_HIGH:SHIFT_LOW];
+              end
+              default: ;
+            endcase
+          end
+          3'b010, 3'b011: begin  // SLTI, SLTIU
+            alu_operator_o_mode  = tpr_i[COMPARISON_HIGH:COMPARISON_LOW];
+          end
+          3'b100, 3'b110, 3'b111: begin  // XORI, ORI, ANDI
+            alu_operator_o_mode  = tpr_i[LOGICAL_HIGH:LOGICAL_LOW];
+          end
+          3'b101: begin
+            unique case (instr_rdata_i[31:25])
+              7'b0000000, 7'b0100000: begin // SRLI, SRAI
+                alu_operator_o_mode  = tpr_i[SHIFT_HIGH:SHIFT_LOW];
+              end
+              default: ;
+            endcase
+          end
+          default: ;
+        endcase
+      end
+
+      OPCODE_OP: begin                               // ¬ p.set
+          unique case (instr_rdata_i[14:12])
+            3'b000: begin
+              unique case (instr_rdata_i[31:25])
+                7'b0000000, 7'b0100000: begin // ADD, SUB
+                  alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+                end
+                7'b0000001: begin // MUL
+                  alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+                end
+                default: ;
+              endcase
+            end
+            3'b001: begin
+              unique case (instr_rdata_i[31:25])
+                7'b0000000: begin // SLL
+                  alu_operator_o_mode  = tpr_i[SHIFT_HIGH:SHIFT_LOW];
+                end
+                7'b0000001: begin // MULH
+                  alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+                end
+                default: ;
+              endcase
+            end
+            3'b010: begin
+              unique case (instr_rdata_i[31:25])
+                7'b0000000: begin // SLT
+                  alu_operator_o_mode  = tpr_i[COMPARISON_HIGH:COMPARISON_LOW];
+                end
+                7'b0000001: begin // MULHSU
+                  alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+                end
+                default: ;
+              endcase
+            end
+            3'b011: begin
+              unique case (instr_rdata_i[31:25])
+                7'b0000000: begin // SLTU
+                  alu_operator_o_mode  = tpr_i[COMPARISON_HIGH:COMPARISON_LOW];
+                end
+                7'b0000001: begin // MULHU
+                  alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+                end
+                default: ;
+              endcase
+            end
+            3'b100: begin
+              unique case (instr_rdata_i[31:25])
+                7'b0000000: begin // XOR
+                  alu_operator_o_mode  = tpr_i[LOGICAL_HIGH:LOGICAL_LOW];
+                end
+                7'b0000001: begin // DIV
+                  alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+                end
+                default: ;
+              endcase
+            end
+            3'b101: begin
+              unique case (instr_rdata_i[31:25])
+                7'b0000000, 7'b0100000: begin // SRL, SRA
+                  alu_operator_o_mode  = tpr_i[SHIFT_HIGH:SHIFT_LOW];
+                end
+                7'b0000001: begin // DIVU
+                  alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+                end
+                default: ;
+              endcase
+            end
+            3'b110: begin
+              unique case (instr_rdata_i[31:25])
+                7'b0000000: begin // OR
+                  alu_operator_o_mode  = tpr_i[LOGICAL_HIGH:LOGICAL_LOW];
+                end
+                7'b0000001: begin // REM
+                  alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+                end
+                default: ;
+              endcase
+            end
+            3'b111: begin
+              unique case (instr_rdata_i[31:25])
+                7'b0000000: begin // AND
+                  alu_operator_o_mode  = tpr_i[LOGICAL_HIGH:LOGICAL_LOW];
+                end
+                7'b0000001: begin // REMU
+                  alu_operator_o_mode  = tpr_i[INTEGER_HIGH:INTEGER_LOW];
+                end
+                default: ;
+              endcase
+            end
+            default: ;
+          endcase
+      end
+
+      OPCODE_DIFT_STORE: begin
+
+        unique case (instr_rdata_i[13:12])
+
+          2'b11: begin
+            // p.hmem
+            memory_set_hierarchy_o = 1'b1;
+            hierarchy_tag_o <= thr_i[1:0];
+          end
+
+          default: begin
+            // p.sps{w,h,b} 
+            memory_set_o = 1'b1;
+          end
+
+        endcase
+
+      end
+
+      OPCODE_DIFT_IMM : begin
+
+        unique case (instr_rdata_i[14:12])
+          3'b000: register_set_o = 1'b1; // p.set
+          3'b001: begin
+            
+          end
+          3'b010: begin
+
+          end
+          default: begin
+            // Rien
+          end
+        endcase
+
+      end
+
+      default: ;
+    endcase
+  end
+
+endmodule
diff --git a/mult.sv b/mult.sv
index ae243ab..9c07bb6 100644
--- a/mult.sv
+++ b/mult.sv
@@ -60,7 +60,7 @@ module riscv_mult
   ///////////////////////////////////////////////////////////////
   //  ___ _  _ _____ ___ ___ ___ ___   __  __ _   _ _  _____   //
   // |_ _| \| |_   _| __/ __| __| _ \ |  \/  | | | | ||_   _|  //
-  //  | || . | | | | _| (_ | _||   / | |\/| | |_| | |__| |    //
+  //  | ||    | | | | _| (_ | _||   / | |\/| | |_| | |__| |    //
   // |___|_|\_| |_| |___\___|___|_|_\ |_|  |_|\___/|____|_|    //
   //                                                           //
   ///////////////////////////////////////////////////////////////
diff --git a/register_file_ff.sv b/register_file_ff.sv
index 7f9e214..0c28b6a 100644
--- a/register_file_ff.sv
+++ b/register_file_ff.sv
@@ -27,8 +27,8 @@ module riscv_register_file
 )
 (
     // Clock and Reset
-    input  logic         clk,
-    input  logic         rst_n,
+    input  logic                   clk,
+    input  logic                   rst_n,
 
     input  logic                   test_en_i,
 
diff --git a/register_file_ff_tag.sv b/register_file_ff_tag.sv
new file mode 100644
index 0000000..93f485d
--- /dev/null
+++ b/register_file_ff_tag.sv
@@ -0,0 +1,105 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer:       Christian Palmiero - cp3025@columbia.edu                   //
+//                                                                            //
+//                                                                            //
+// Design Name:    RISC-V register file tag                                   //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    Register file with 31x1 bit tags. Tag 0                    //
+//                 is fixed to 0. This register file is based on flip-flops   //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+
+module riscv_register_file_tag
+#(
+    parameter ADDR_WIDTH    = 5,
+    parameter DATA_WIDTH    = 3
+)
+(
+    // Clock and Reset
+    input  logic                   clk,
+    input  logic                   rst_n,
+
+    input  logic                   test_en_i,
+
+    //Read port R1
+    input  logic [ADDR_WIDTH-1:0]  raddr_a_i,
+    output logic [DATA_WIDTH-1:0]  rdata_a_o,
+
+    //Read port R2
+    input  logic [ADDR_WIDTH-1:0]  raddr_b_i,
+    output logic [DATA_WIDTH-1:0]  rdata_b_o,
+
+    //Read port R3
+    input  logic [ADDR_WIDTH-1:0]  raddr_c_i,
+    output logic [DATA_WIDTH-1:0]  rdata_c_o,
+
+    // Write port W1
+    input logic [ADDR_WIDTH-1:0]   waddr_a_i,
+    input logic [DATA_WIDTH-1:0]   wdata_a_i,
+    input logic                    we_a_i,
+
+    // Write port W2
+    input logic [ADDR_WIDTH-1:0]   waddr_b_i,
+    input logic [DATA_WIDTH-1:0]   wdata_b_i,
+    input logic                    we_b_i
+);
+
+  localparam    NUM_WORDS = 2**ADDR_WIDTH;
+
+  logic [NUM_WORDS-1:0][DATA_WIDTH-1:0] rf_reg;
+  logic [NUM_WORDS-1:0]                 we_a_dec;
+  logic [NUM_WORDS-1:0]                 we_b_dec;
+
+  always_comb
+  begin : we_a_decoder
+    for (int i = 0; i < NUM_WORDS; i++) begin
+      if (waddr_a_i == i)
+        we_a_dec[i] = we_a_i;
+      else
+        we_a_dec[i] = 1'b0;
+    end
+  end
+
+  always_comb
+  begin : we_b_decoder
+    for (int i=0; i<NUM_WORDS; i++) begin
+      if (waddr_b_i == i)
+        we_b_dec[i] = we_b_i;
+      else
+        we_b_dec[i] = 1'b0;
+    end
+  end
+
+  genvar i;
+  generate
+
+    // loop from 1 to NUM_WORDS-1 as R0 is nil
+    for (i = 1; i < NUM_WORDS; i++)
+    begin : rf_gen
+
+      always_ff @(posedge clk, negedge rst_n)
+      begin : register_write_behavioral
+        if (rst_n==1'b0) begin
+          rf_reg[i] <= 'b0;
+        end else begin
+          if(we_b_dec[i] == 1'b1)
+            rf_reg[i] <= wdata_b_i;
+          else if(we_a_dec[i] == 1'b1)
+            rf_reg[i] <= wdata_a_i;
+        end
+      end
+
+    end
+
+    // R0 is nil
+    assign rf_reg[0] = '0;
+
+  endgenerate
+
+  assign rdata_a_o = rf_reg[raddr_a_i];
+  assign rdata_b_o = rf_reg[raddr_b_i];
+  assign rdata_c_o = rf_reg[raddr_c_i];
+
+endmodule
diff --git a/register_file_tag.sv b/register_file_tag.sv
new file mode 100644
index 0000000..73a901c
--- /dev/null
+++ b/register_file_tag.sv
@@ -0,0 +1,171 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer:       Christian Palmiero - cp3025@columbia.edu                   //
+//                                                                            //
+//                                                                            //
+// Design Name:    RISC-V register file tag                                   //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    Register file with 31x3 bits tags. Tag 0                   //
+//                 is fixed to 0. This register file is based on latches and  //
+//                 is thus smaller than the flip-flop based register file.    //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+
+module riscv_register_file_tag
+#(
+  parameter ADDR_WIDTH    = 5,
+  parameter DATA_WIDTH    = 3
+)
+(
+  // Clock and Reset
+  input  logic                   clk,
+  input  logic                   rst_n,
+
+  input  logic                   test_en_i,
+
+  //Read port R1
+  input  logic [ADDR_WIDTH-1:0]  raddr_a_i,
+  output logic [DATA_WIDTH-1:0]  rdata_a_o,
+
+  //Read port R2
+  input  logic [ADDR_WIDTH-1:0]  raddr_b_i,
+  output logic [DATA_WIDTH-1:0]  rdata_b_o,
+
+  //Read port R3
+  input  logic [ADDR_WIDTH-1:0]  raddr_c_i,
+  output logic [DATA_WIDTH-1:0]  rdata_c_o,
+
+  // Write port W1
+  input  logic [ADDR_WIDTH-1:0]   waddr_a_i,
+  input  logic [DATA_WIDTH-1:0]   wdata_a_i,
+  input  logic                    we_a_i,
+
+  // Write port W2
+  input  logic [ADDR_WIDTH-1:0]   waddr_b_i,
+  input  logic [DATA_WIDTH-1:0]   wdata_b_i,
+  input  logic                    we_b_i
+);
+
+  localparam    NUM_WORDS = 2**ADDR_WIDTH;
+
+  logic [DATA_WIDTH-1:0]      mem[NUM_WORDS];
+
+  logic [NUM_WORDS-1:1]       waddr_onehot_a;
+  logic [NUM_WORDS-1:1]       waddr_onehot_b, waddr_onehot_b_q;
+
+  logic [NUM_WORDS-1:1]       mem_clocks;
+  logic [DATA_WIDTH-1:0]      wdata_a_q;
+  logic [DATA_WIDTH-1:0]      wdata_b_q;
+
+  logic clk_int;
+
+  int unsigned i;
+  int unsigned j;
+  int unsigned k;
+
+  genvar x;
+  genvar y;
+
+  //-----------------------------------------------------------------------------
+  //-- READ : Read address decoder RAD
+  //-----------------------------------------------------------------------------
+  assign rdata_a_o = mem[raddr_a_i];
+  assign rdata_b_o = mem[raddr_b_i];
+  assign rdata_c_o = mem[raddr_c_i];
+
+
+  //-----------------------------------------------------------------------------
+  // WRITE : SAMPLE INPUT DATA
+  //---------------------------------------------------------------------------
+
+  cluster_clock_gating CG_WE_GLOBAL
+  (
+    .clk_i     ( clk             ),
+    .en_i      ( we_a_i | we_b_i ),
+    .test_en_i ( test_en_i       ),
+    .clk_o     ( clk_int         )
+  );
+
+  // use clk_int here, since otherwise we don't want to write anything anyway
+  always_ff @(posedge clk_int, negedge rst_n)
+  begin : sample_waddr
+    if (~rst_n) begin
+      wdata_a_q        <= '0;
+      wdata_b_q        <= '0;
+      waddr_onehot_b_q <= '0;
+    end else begin
+      if(we_a_i)
+        wdata_a_q <= wdata_a_i;
+
+      if(we_b_i)
+        wdata_b_q <= wdata_b_i;
+
+      waddr_onehot_b_q <= waddr_onehot_b;
+    end
+  end
+
+  //-----------------------------------------------------------------------------
+  //-- WRITE : Write Address Decoder (WAD), combinatorial process
+  //-----------------------------------------------------------------------------
+  always_comb
+  begin : p_WADa
+    for(i = 1; i < NUM_WORDS; i++)
+    begin : p_WordItera
+      if ( (we_a_i == 1'b1 ) && (waddr_a_i == i) )
+        waddr_onehot_a[i] = 1'b1;
+      else
+        waddr_onehot_a[i] = 1'b0;
+    end
+  end
+
+  always_comb
+  begin : p_WADb
+    for(j = 1; j < NUM_WORDS; j++)
+    begin : p_WordIterb
+      if ( (we_b_i == 1'b1 ) && (waddr_b_i == j) )
+        waddr_onehot_b[j] = 1'b1;
+      else
+        waddr_onehot_b[j] = 1'b0;
+    end
+  end
+
+  //-----------------------------------------------------------------------------
+  //-- WRITE : Clock gating (if integrated clock-gating cells are available)
+  //-----------------------------------------------------------------------------
+  generate
+    for(x = 1; x < NUM_WORDS; x++)
+    begin : CG_CELL_WORD_ITER
+      cluster_clock_gating CG_Inst
+      (
+        .clk_i     ( clk_int                               ),
+        .en_i      ( waddr_onehot_a[x] | waddr_onehot_b[x] ),
+        .test_en_i ( test_en_i                             ),
+        .clk_o     ( mem_clocks[x]                         )
+      );
+    end
+  endgenerate
+
+  //-----------------------------------------------------------------------------
+  //-- WRITE : Write operation
+  //-----------------------------------------------------------------------------
+  //-- Generate M = WORDS sequential processes, each of which describes one
+  //-- word of the memory. The processes are synchronized with the clocks
+  //-- ClocksxC(i), i = 0, 1, ..., M-1
+  //-- Use active low, i.e. transparent on low latches as storage elements
+  //-- Data is sampled on rising clock edge
+
+  always_latch
+  begin : latch_wdata
+    // Note: The assignment has to be done inside this process or Modelsim complains about it
+    mem[0] = '0;
+
+    for(k = 1; k < NUM_WORDS; k++)
+    begin : w_WordIter
+      if(mem_clocks[k] == 1'b1)
+        mem[k] = waddr_onehot_b_q[k] ? wdata_b_q : wdata_a_q;
+    end
+  end
+
+
+endmodule
diff --git a/riscv_core.sv b/riscv_core.sv
index 863e074..497d651 100644
--- a/riscv_core.sv
+++ b/riscv_core.sv
@@ -84,6 +84,19 @@ module riscv_core
   output logic        core_busy_o,
 
   input  logic [N_EXT_PERF_COUNTERS-1:0] ext_perf_counters_i
+
+`ifdef DIFT
+  ,
+`ifdef DIFT_H
+  input  logic [5:0]  data_rdata_i_tag,
+`else
+  input  logic [3:0]  data_rdata_i_tag,
+`endif
+  input  logic        data_gnt_i_tag,
+  input  logic        data_rvalid_i_tag,
+  output logic        data_we_o_tag,
+  output logic        data_wdata_o_tag
+`endif
 );
 
   localparam N_HWLP      = 2;
@@ -258,6 +271,43 @@ module riscv_core
   logic        perf_jr_stall;
   logic        perf_ld_stall;
 
+`ifdef DIFT
+  logic [31:0] tpr;
+  logic [31:0] tcr;
+`ifdef DIFT_H
+  logic [31:0] thr;
+`endif
+  logic        jump_target_id_tag;
+  logic        jump_target_ex_tag;
+  logic        pc_set_tag;
+  logic        pc_id_tag;
+  logic        regfile_alu_wdata_fw_tag;
+  logic        regfile_alu_we_fw_tag;
+  logic        pc_enable_tag;
+  logic        rs1_tag;
+  logic        exception_tag;
+  logic [ALU_MODE_WIDTH-1:0] alu_operator_mode;
+  logic        alu_operand_a_tag;
+  logic        alu_operand_b_tag;
+  logic        alu_operand_c_tag;
+  logic        data_we_ex_tag;
+  logic        data_wdata_ex_tag;
+  logic        data_rdata_ex_tag;
+  `ifdef DIFT_H
+  logic [1:0]  data_rdata_ex_htag;
+  `endif
+  logic        register_set_tag;
+  logic        is_store_post_tag;
+  logic [4:0]  regfile_alu_waddr_fw_tag;
+  logic [4:0]  regfile_alu_waddr_tag;
+  logic        store_dest_addr_tag;
+  logic        store_source_tag;
+  logic        use_store_ops;
+  `ifdef DIFT_H
+  logic memory_set_hierarchy;
+  logic [1:0] hierarchy_tag_id_o;
+  `endif
+`endif
 
   //////////////////////////////////////////////////////////////////////////////////////////////
   //   ____ _            _      __  __                                                   _    //
@@ -367,6 +417,13 @@ module riscv_core
 
     .if_busy_o           ( if_busy           ),
     .perf_imiss_o        ( perf_imiss        )
+`ifdef DIFT
+    ,
+    .jump_target_id_i_tag ( jump_target_id_tag ),
+    .jump_target_ex_i_tag ( jump_target_ex_tag ),
+    .pc_set_i_tag         ( pc_set_tag         ),
+    .pc_id_o_tag          ( pc_id_tag          )
+`endif
   );
 
 
@@ -535,6 +592,44 @@ module riscv_core
     .perf_jump_o                  ( perf_jump            ),
     .perf_jr_stall_o              ( perf_jr_stall        ),
     .perf_ld_stall_o              ( perf_ld_stall        )
+`ifdef DIFT
+    ,
+    .regfile_wdata_wb_i_tag       ( data_rdata_ex_tag        ),
+    .regfile_alu_wdata_fw_i_tag   ( regfile_alu_wdata_fw_tag ),
+    .regfile_alu_we_fw_i_tag      ( regfile_alu_we_fw_tag    ),
+    .regfile_alu_waddr_fw_i_tag   ( regfile_alu_waddr_fw_tag ),
+    .tpr_i                        ( tpr                      ),
+    .tcr_i                        ( tcr                      ),
+`ifdef DIFT_H
+    .thr_i                        ( thr                      ),
+    .regfile_wdata_wb_i_htag      ( data_rdata_ex_htag       ),
+`endif
+    .pc_id_i_tag                  ( pc_id_tag                ),
+    .pc_enable_i_tag              ( pc_enable_tag            ),
+    .rs1_i_tag                    ( rs1_tag                  ),
+    .exception_i_tag              ( exception_tag            ),
+    .jump_target_o_tag            ( jump_target_id_tag       ),
+    .pc_ex_o_tag                  (                          ),
+    .pc_set_o_tag                 ( pc_set_tag               ),
+    .alu_operator_o_mode          ( alu_operator_mode        ),
+    .store_dest_addr_ex_o_tag     ( store_dest_addr_tag      ),
+    .store_source_ex_o_tag        ( store_source_tag         ),
+    .use_store_ops_ex_o           ( use_store_ops            ),
+    .alu_operand_a_ex_o_tag       ( alu_operand_a_tag        ),
+    .alu_operand_b_ex_o_tag       ( alu_operand_b_tag        ),
+    .alu_operand_c_ex_o_tag       ( alu_operand_c_tag        ),
+    .check_s1_o_tag               ( check_s1_tag             ),
+    .check_s2_o_tag               ( check_s2_tag             ),
+    .check_d_o_tag                ( check_d_tag              ),
+    .register_set_o_tag           ( register_set_tag         ),
+    .is_store_post_o_tag          ( is_store_post_tag        ),
+    .memory_set_o_tag             ( memory_set_tag           ),
+`ifdef DIFT_H
+    .memory_hierarchy_set_o_tag   ( memory_set_hierarchy ),
+    .hierarchy_o_tag              ( hierarchy_tag_id_o   ),
+`endif
+    .regfile_alu_waddr_ex_o_tag   ( regfile_alu_waddr_tag    )
+`endif
   );
 
 
@@ -609,6 +704,33 @@ module riscv_core
     .ex_ready_o                 ( ex_ready                     ),
     .ex_valid_o                 ( ex_valid                     ),
     .wb_ready_i                 ( lsu_ready_wb                 )
+`ifdef DIFT
+    ,
+    .alu_operator_i_mode        ( alu_operator_mode            ),
+    .alu_operand_a_i_tag        ( alu_operand_a_tag            ),
+    .alu_operand_b_i_tag        ( alu_operand_b_tag            ),
+    .alu_operand_c_i_tag        ( alu_operand_c_tag            ),
+    .data_we_ex_i               ( data_we_ex                   ),
+    .check_s1_i_tag             ( check_s1_tag                 ),
+    .check_s2_i_tag             ( check_s2_tag                 ),
+    .check_d_i_tag              ( check_d_tag                  ),
+    .register_set_i_tag         ( register_set_tag             ),
+    .is_store_post_i_tag        ( is_store_post_tag            ),
+    .memory_set_i_tag           ( memory_set_tag               ),
+    .store_dest_addr_i_tag      ( store_dest_addr_tag          ),
+    .store_source_i_tag         ( store_source_tag             ),
+    .use_store_ops_i            ( use_store_ops                ),
+    .regfile_alu_waddr_i_tag    ( regfile_alu_waddr_tag        ),
+    .regfile_alu_wdata_fw_o_tag ( regfile_alu_wdata_fw_tag     ),
+    .regfile_alu_we_fw_o_tag    ( regfile_alu_we_fw_tag        ),
+    .regfile_alu_waddr_fw_o_tag ( regfile_alu_waddr_fw_tag     ),
+    .jump_target_o_tag          ( jump_target_ex_tag           ),
+    .pc_enable_o_tag            ( pc_enable_tag                ),
+    .data_wdata_ex_o_tag        ( data_wdata_ex_tag            ),
+    .data_we_ex_o_tag           ( data_we_ex_tag               ),
+    .rs1_o_tag                  ( rs1_tag                      ),
+    .exception_o_tag            ( exception_tag                )
+`endif
   );
 
 
@@ -664,6 +786,21 @@ module riscv_core
 
     .ex_valid_i            ( ex_valid           ),
     .busy_o                ( lsu_busy           )
+`ifdef DIFT
+    ,
+    .data_we_o_tag         ( data_we_o_tag      ),
+    .data_wdata_o_tag      ( data_wdata_o_tag   ),
+    .data_rdata_i_tag      ( data_rdata_i_tag   ),
+    .data_we_ex_i_tag      ( data_we_ex_tag     ),
+    .data_wdata_ex_i_tag   ( data_wdata_ex_tag  ),
+    .data_rdata_ex_o_tag   ( data_rdata_ex_tag  ),
+    .data_gnt_i_tag        ( data_gnt_i_tag     ),
+    .data_rvalid_i_tag     ( data_rvalid_i_tag  )
+    `ifdef DIFT_H
+    ,
+    .data_rdata_ex_o_htag  ( data_rdata_ex_htag )
+    `endif
+`endif
   );
 
   assign wb_valid = lsu_ready_wb;
@@ -740,6 +877,15 @@ module riscv_core
     .mem_store_i             ( data_req_o & data_gnt_i & data_we_o    ),
 
     .ext_counters_i          ( ext_perf_counters_i                    )
+`ifdef DIFT
+    ,
+    .tpr_o                   ( tpr                                    ),
+    .tcr_o                   ( tcr                                    )
+`ifdef DIFT_H
+    ,
+    .thr_o                   ( thr                                    )
+`endif
+`endif
   );
 
   // Mux for CSR access through Debug Unit
diff --git a/src_files.yml b/src_files.yml
index 621a43d..f1f79bb 100644
--- a/src_files.yml
+++ b/src_files.yml
@@ -7,22 +7,30 @@ riscv:
     include/riscv_tracer_defines.sv,
     alu.sv,
     alu_div.sv,
+    check_tag.sv,
     compressed_decoder.sv,
     controller.sv,
     cs_registers.sv,
     debug_unit.sv,
     decoder.sv,
+    enable_tag.sv,
     exc_controller.sv,
     ex_stage.sv,
+    hierarchy_check.sv,
     hwloop_controller.sv,
     hwloop_regs.sv,
     id_stage.sv,
     if_stage.sv,
+    load_propagation.sv,
+    load_check.sv,
     load_store_unit.sv,
+    mode_tag.sv,
     mult.sv,
     prefetch_buffer.sv,
     prefetch_L0_buffer.sv,
     riscv_core.sv,
+    tag_propagation_logic.sv,
+    tag_check_logic.sv,
   ]
 riscv_vip_rtl:
   targets: [
@@ -44,6 +52,7 @@ riscv_regfile_rtl:
   ]
   files: [
     register_file.sv,
+    register_file_tag.sv,
   ]
 riscv_regfile_fpga:
   targets: [
@@ -54,5 +63,5 @@ riscv_regfile_fpga:
   ]
   files: [
     register_file_ff.sv,
+    register_file_ff_tag.sv,
   ]
-
diff --git a/tag_check_logic.sv b/tag_check_logic.sv
new file mode 100644
index 0000000..3881307
--- /dev/null
+++ b/tag_check_logic.sv
@@ -0,0 +1,42 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer        Christian Palmiero - cp3025@columbia.edu                   //
+//                                                                            //
+// Design Name:    Tag Check Logic                                            //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    This unit raises an exception if a check is enabled in     //
+//                 the Tag Check Register and the tag bit of the              //
+//                 corresponding operand is set                               //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+
+import riscv_defines::*;
+
+module riscv_tag_check_logic
+(
+  input  logic  operand_a_i,
+  input  logic  operand_b_i,
+  input  logic  result_i,
+  input  logic  check_s1_i,
+  input  logic  check_s2_i,
+  input  logic  check_d_i,
+  input  logic  is_load_i,
+
+  output logic  exception_o
+);
+
+  always_comb
+  begin
+    if (~is_load_i) begin
+      if ((operand_a_i & check_s1_i) || (operand_b_i & check_s2_i) || (result_i & check_d_i)) begin
+        exception_o = 1'b1;
+      end else begin
+        exception_o = 1'b0;
+      end
+    end else begin
+      exception_o   = 1'b0;
+    end
+  end
+
+endmodule
diff --git a/tag_propagation_logic.sv b/tag_propagation_logic.sv
new file mode 100644
index 0000000..7358891
--- /dev/null
+++ b/tag_propagation_logic.sv
@@ -0,0 +1,46 @@
+////////////////////////////////////////////////////////////////////////////////
+// Engineer        Christian Palmiero - cp3025@columbia.edu                   //
+//                                                                            //
+// Design Name:    Tag Propagation Logic                                      //
+// Project Name:   RI5CY                                                      //
+// Language:       SystemVerilog                                              //
+//                                                                            //
+// Description:    This unit computes the destination operand tag based on    //
+//                 the source operands tags and on the type of the operation  //
+//                 specified in the Tag Propagation Register                  //
+//                                                                            //
+////////////////////////////////////////////////////////////////////////////////
+
+import riscv_defines::*;
+
+module riscv_tag_propagation_logic
+(
+  input  logic [ALU_MODE_WIDTH-1:0] operator_i,
+  input  logic                      operand_a_i,
+  input  logic                      operand_b_i,
+
+  output logic                      result_o,
+  output logic                      rf_enable_tag,
+  output logic                      pc_enable_tag
+);
+
+  always_comb
+  begin
+    result_o      = 1'b0;
+    rf_enable_tag = 1'b1;
+    pc_enable_tag = 1'b1;
+
+    unique case (operator_i)
+      // Standard Operations
+      ALU_MODE_OLD: begin
+        rf_enable_tag = 1'b0;
+        pc_enable_tag = 1'b0;
+      end
+      ALU_MODE_AND:   result_o = operand_a_i & operand_b_i;
+      ALU_MODE_OR:    result_o = operand_a_i | operand_b_i;
+      ALU_MODE_CLEAR: result_o = 1'b0;
+      default: ; // default case to suppress unique warning
+    endcase
+  end
+
+endmodule
